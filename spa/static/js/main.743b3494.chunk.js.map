{"version":3,"sources":["logo.svg","assets/images/background-0.png","components/MainPage/Background.jsx","components/MainPage/ButtonContainer.jsx","components/MainPage/Logo.jsx","components/Buttons/MainButton.jsx","components/Forms/Login/AskLoginForm.jsx","scripts/helperFunctions/format.js","components/Forms/Login/InputPhoneForm.jsx","components/Forms/Login/ConfirmNumberForm.jsx","components/LoaderScreen.jsx","scripts/user/User.js","scripts/user/Session.js","scripts/constants/dummyConstants.js","scripts/api/fakeApi.js","scripts/reducer.js","components/Buttons/TimeoutButtonOutline.jsx","components/Forms/UserInfo.jsx","components/MainPage/MainPage.jsx","components/Buttons/SecondaryButton.jsx","components/Toolbars/ToolbarSecondary.jsx","components/Services/ServicesMenu.jsx","components/Services/Finance.jsx","components/Forms/BaseForm.jsx","components/Services/Services.jsx","components/Toolbars/ToolbarMain.jsx","components/FailReport.jsx","components/SuccessReport.jsx","components/Forms/info/ServiceAfterSuccess.jsx","components/Forms/info/ServiceAfterFail.jsx","components/Forms/UserForms.jsx","components/Maps/MapDetail.jsx","components/Maps/Maps.jsx","components/Buttons/ContentButton.jsx","scripts/api/contentApi.js","components/News/News.jsx","App.js","reportWebVitals.js","index.js"],"names":["Background","className","src","this","props","url","alt","React","Component","ButtonContainer","children","Logo","viewBox","xmlns","id","fill","fill-rule","d","clip-rule","MainButton","text","icon","arrow","left","top","right","bottom","size","onClick","dangerouslySetInnerHTML","__html","direction","stroke","stroke-linecap","stroke-linejoin","stroke-width","defaultProps","undefined","AskLoginForm","location","search","substr","indexOf","length","class","format","value","pattern","i","v","toString","replace","_","InputPhoneForm","onPhoneChange","event","number","target","setState","phoneNumber","state","searchInput","focus","inputRef","inputEl","mask","maskChar","onChange","type","e","preventDefault","onSubmit","data","console","log","ConfirmNumberForm","numberMask","userRoles","defaultUser","name","roles","Set","User","overrides","Object","assign","result","lastName","firstName","middleName","array","split","keys","forEach","key","JSON","stringify","getInfo","current","defaultSession","user","validThrough","Date","authToken","refreshToken","Session","changes","import","export","JSONstring","parse","Cookies","set","expires","secure","get","status","ACTION","DUMMY_PHONE","DUMMY_TOKEN","inputNumber","session","Promise","resolve","reject","setTimeout","startNew","add","Math","random","confirmNumber","logout","requestService","action","a","getCurrent","reduce","sizes","height","width","border","padding","TimeoutButtonOutline","timer","timeout","onTimerTick","call","color","hoverText","contrastColor","hoverBg","Forms","loading","callback","setLoading","bind","updateSession","reducer","then","catch","has","getFullName","onLogout","MainPage","backgroundImage","history","push","SecondaryButton","ParentTagName","link","Link","to","description","ToolbarMain","buttons","map","button","index","ServicesMenu","currentPath","pathname","lastIndexOf","goBack","getGoBackPath","goBackText","Finance","path","render","match","params","form","exact","BaseForm","for","disabled","serviceText","phone","ServicesRoutes","allowGuest","URLSearchParams","relativeURL","getComponent","category","directions","n","FailReport","detail","ServiceAfterSuccess","onContinue","onExit","ServiceAfterFail","confirmNumberMask","onConfirmNumberChange","onConfirmNumberSubmit","success","fail","onSuccess","onFail","lifeReport","serviceId","deathReport","error","onPhoneSubmit","onServiceSubmit","MapDetail","imageList","response","results","title","images","allowRotate","doubleClickZoom","onClose","Maps","ContentButton","News","numPages","pageNumber","window","innerWidth","innerHeight","fetch","ok","json","list","changeEntry","offset","changePage","file","renderMode","onLoadSuccess","onDocumentLoadSuccess","gutter","previousEnty","nextEntry","previousPage","nextPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.743b3494.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/background-0.746cda54.png\";","import React from 'react';\n\nexport default class Background extends React.Component {\n    render() {\n      return (\n        <div className=\"fixed top-0 left-0 right-0 bottom-0 select-none -z-10\">\n            <img src={this.props.url} className=\"select-none -z-10 absolute top-0 left-0 h-screen w-screen\" alt=\"Фоновая картинка\"/>\n            <div className=\"select-none bg-gray-100 bg-opacity-75 -z-10 absolute top-0 left-0 right-0 bottom-0\"></div>\n        </div>\n      );\n    }\n}\n","import React from 'react';\n\nexport default class ButtonContainer extends React.Component {\n    render() {\n      return (\n        <div className=\"relative h-2/3 mx-32\">\n        <div className=\"grid grid-cols-4 grid-rows-2 gap-4 absolute bottom-10 left-0 right-0\">\n            {this.props.children}\n        </div>\n        </div>\n      );\n    }\n} \n","import React from 'react';\n\nexport default class Logo extends React.Component {\n    render() {\n      return (\n        <div className = \"mx-auto h-1/3 py-10\">\n            <header className = \"text-9xl font-black text-blue-darker flex justify-center items-center\">\n                <span className=\"flex-initial p-1\" >RM</span>\n                <span className = \"flex-initial p-1 mb-8\">\n                <svg viewBox=\"0 0 69.4 69.8\" className = \"w-48 h-auto\" xmlns=\"http://www.w3.org/2000/svg\" id=\"preloader-logo\">\n                    <path className=\"fill\" fill=\"#ed1849\" fill-rule=\"evenodd\" d=\"M45.8 52.7l-27.7 4.1-1.6-1.2 6.6-13.1 2.6 4.5c.3.5.9.8 1.4.8h16.2c.5 0 1-.3 1.4-.7.3-.4.4-1 .2-1.5l-3.8-11.1c-.2-.7-.9-1.1-1.6-1.1h-8.9L28 25.6h12.9l2.9 4.9c.3.5.9.8 1.4.8h23.9v-.2-.1l-.1-.7v-.1l-.4-2.3C65.6 11.9 51.5 0 34.7 0A35 35 0 00.5 27.7l11.1-.7 12-9.9L51.3 13l1.6 1.2-6.6 13.2-2.7-4.5c-.3-.5-.9-.8-1.4-.8H25.9c-.5 0-1 .3-1.4.7-.3.4-.4 1-.2 1.5L28 35.4c.2.7.9 1.1 1.6 1.1h8.9l2.6 7.8H28.2l-2.9-4.9c-.3-.5-.9-.8-1.4-.8H0V38.9l.1.7v.1l.4 2.2a34.9 34.9 0 0068.3.1l-11.1.7-11.9 10z\" clip-rule=\"evenodd\"></path>\n                </svg>\n                </span>\n                <div className =\"flex-initial p-1 mt-4\">\n                    <span className=\"\" ><i>RAIL</i></span>\n                    <h2 className=\"text-4xl text-left font-normal text-gray-500 -mt-4\">инфокиоск</h2>\n                </div>\n            </header>\n        </div>\n      );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\n\n/**\n * Кнопка на главной странице\n */\nexport default class MainButton extends React.Component {\n    static propTypes = {\n\n        /**\n         * Размер кнопки \\\n         * Влияет на размер текста, иконки и стрелки \\\n         * Возможные варианты: md (средняя), lg (большая), xl (очень большая)\n         * @default \"md\"\n        */\n        size: PropTypes.string,\n\n        /** \n         * \"Направление\" кнопки. Пока что влияет только на стрелочку \\\n         * Может быть left, top, right или bottom\n         * @default \"left\"\n         */\n        direction: PropTypes.string,\n\n        /** \n         * Иконка кнопки, html код (svg) \\\n         * Обычно пишется в виде <svg ...> </svg>\n         */\n        icon: PropTypes.string,\n\n        /** \n         * Действие при нажатии кнопки\n         */\n        onClick: PropTypes.func,\n\n        /** \n         * Добавочные css классы к кнопке \\\n         * желательно использовать классы Tailwind Css\n         * @example className = \"col-span-2 row-span-1\" \n         * растянет кнопку внутри сетки (CSS) на 1 ряд и 2 колонки \n         * @example className = \"bg-blue-lighter hover:bg-red\"\n         * сделает кнопку синей, а при наведении на неё мышкой - красной \n         */\n        className: PropTypes.string,\n\n        /** \n         * Внутри компонента пишется текст кнопки\n         */\n        children: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    }\n\n    static defaultProps = {\n        size: 'md',\n        direction: 'left',\n        icon: undefined,\n        children: 'Кнопка',\n    }\n    \n\n    #sizeClasses = {\n        'xl': {\n            text: 'text-6xl',\n            icon: 'w-60 h-60 p-4',\n            arrow: 'w-12 h-12',\n        },\n        'lg': {\n            text: 'text-4xl',\n            icon: 'w-44 h-44 p-3',\n            arrow: 'w-12 h-12',\n        },\n        'md': {\n            text: 'text-3xl',\n            icon: 'w-28 h-28 p-1',\n            arrow: 'w-12 h-12',\n        },\n    };\n\n    #arrowRotation = {\n        left:  'left-0 rotate-0',\n        top:  'top-0 rotate-90',\n        right:  'right-0 rotate-180',\n        bottom:  'bottom-0 -rotate-90',\n    }\n\n    getSize() {\n        return `${this.props.size}`\n    }\n\n    render() {\n      return (\n        <button\n        className={`relative bg-red transition-colors duration-200 rounded flex\n        justify-center items-center text-white shadow-xl ` + this.props.className}\n        onClick={this.props.onClick}>\n            <div className=\"text-center\">\n                {(() => {if (this.props.icon) {\n                    return (\n                    <div className={\n                        `${this.#sizeClasses[this.props.size].icon}\n                        mx-auto`}\n                        dangerouslySetInnerHTML={{ __html: this.props.icon }}\n                        >\n                    </div>)\n                }})()}\n\n                <h3 className={\n                    `${this.#sizeClasses[this.props.size].text} \n                    font-black`}>\n                    {this.props.children}\n                </h3>\n            </div>\n            <div className={\n                `${this.#sizeClasses[this.props.size].arrow}\n                absolute \n                transform\n                ${this.#arrowRotation[this.props.direction]}\n                `}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\" />\n                </svg>\n            </div>\n        </button>\n      );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport MainButton from '../../Buttons/MainButton';\n\n\nexport default class AskLoginForm extends React.Component {\n\n    render() {\n        // TODO:\n        // Это костыль на первое время\n        // Переписать обязательно\n        let redirectTo = this.props.location.search\n        .substr(this.props.location.search.indexOf('redirectTo=') + 'redirectTo='.length)\n\n        return (            \n            <div className=\"mx-auto absolute min-w-full bg-gray-200 rounded-xl shadow-xl py-10 top-10\">\n                <div class=\"\">\n                <div className=\"m-5 w-56 h-56 mx-auto text-gray-500\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-person-bounding-box\" viewBox=\"0 0 16 16\">\n                    <path d=\"M1.5 1a.5.5 0 0 0-.5.5v3a.5.5 0 0 1-1 0v-3A1.5 1.5 0 0 1 1.5 0h3a.5.5 0 0 1 0 1h-3zM11 .5a.5.5 0 0 1 .5-.5h3A1.5 1.5 0 0 1 16 1.5v3a.5.5 0 0 1-1 0v-3a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 1-.5-.5zM.5 11a.5.5 0 0 1 .5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 1 0 1h-3A1.5 1.5 0 0 1 0 14.5v-3a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v3a1.5 1.5 0 0 1-1.5 1.5h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 1 .5-.5z\"/>\n                    <path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm8-9a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"/>\n                    </svg>\n                </div>\n\n                <h1 className=\"text-5xl pt-12 mx-auto text-gray-500 font-black\">\n                    Для получения всего перечня доступных услуг необходимо\n                    <br/>\n                    <span className=\"text-red\"> авторизоваться в системе</span>\n                </h1>\n                </div>\n            </div>\n        );\n    }\n}","function format(value, pattern) {\n    var i = 0,\n        v = value.toString();\n    return pattern.replace(/#/g, _ => v[i++]);\n}\n\nexport default format;","import React from 'react';\nimport MainButton from '../../Buttons/MainButton';\nimport PropTypes from 'prop-types'\nimport '../../../assets/css/postcard.css'\nimport InputMask from 'react-input-mask';\nimport format from '../../../scripts/helperFunctions/format';\n\nexport default class InputPhoneForm extends React.Component {\n    static propTypes = {\n        /**\n         *  Действие при отправки формы\n         *  @default (e) => {e.preventDefault()}\n         */\n        onSubmit: PropTypes.func,\n\n        /**\n         *  Действие при изменении значения поля\n         *  @default (value, mask) => console.log(value)\n         */\n         onChange: PropTypes.func,\n    }\n\n    static defaultProps = {\n        onSubmit: (data) => {},\n        onChange: (value, mask) => console.log(value),\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {phoneNumber: '0000000000'}\n    }\n\n    onPhoneChange = (event) => {\n        let number = event.target.value.replace(/[ _()-]/g, '');\n        //console.log(number)\n        this.setState({\n            phoneNumber: number\n        });\n    }\n\n    componentDidMount() {\n        this.searchInput.focus();\n    }\n    \n    render() {\n        // TODO:\n        // Это костыль на первое время\n        // Переписать обязательно\n        //let redirectTo = this.props.location.search\n        //.substr(this.props.location.search.indexOf('redirectTo=') + 'redirectTo='.length)\n        return (\n            <div className=\"mx-auto text-center relative max-w-5xl\">\n            <div class=\"w-full\">\n            \n            <form className=\"bg-white mt-10 shadow-md rounded px-8 mb-4\">\n                <div class=\"absolute -top-5 -left-5 -right-5 -bottom-5 -z-10 bg-postcard rounded shadow-md\"></div>\n                <h1 className=\"text-5xl pt-12 mx-auto text-blue-darker font-black\">\n                        Войти как сотрудник\n                </h1>\n                <p className=\"text-2xl py-2 mx-auto text-gray-500\">\n                    Введите ваш номер телефона в поле ниже и нажмите на кнопку \"Продолжить\". <br/>\n                    Мы вышлем код подтверждения на указанный номер\n                </p>\n                <div className=\"my-8\">\n                <div className=\"grid h-24 grid-cols-2 grid-rows-1 gap-4 my-2\">\n                    <div><InputMask \n                    inputRef={inputEl => (this.searchInput = inputEl)}\n                    mask=\"+7 (999) 999-99-99\"\n                    maskChar={'_'}\n                    //value={this.state.value}\n                    onChange={this.onPhoneChange} \n                    //beforeMaskedValueChange={this.beforeMaskedValueChange}\n\n                    className=\"shadow appearance-none border rounded w-full h-full py-2 px-3\n                        text-gray-500 text-4xl font-black leading-tight tracking-widest focus:outline-none focus:shadow-outline\"\n                    id=\"username\" type=\"tel\"\n                    /></div>\n\n                    <MainButton\n                    className=\"bg-red hover:bg-blue-lighter\" size=\"lg\" direction=\"right\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        this.props.onSubmit({phoneNumber: this.state.phoneNumber})\n                    }}\n                    >\n                        Продолжить\n                    </MainButton>\n                </div>\n                <p className=\"text-center mt-6 text-gray-500 text-lg\">\n                &copy; 2021 РМ Рейл <br/>\n                </p>\n                </div>\n            </form>\n            \n            </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport MainButton from '../../Buttons/MainButton';\nimport PropTypes from 'prop-types'\nimport InputMask from 'react-input-mask';\n\nimport format from '../../../scripts/helperFunctions/format';\nimport '../../../assets/css/input-number-fix.css'\nimport '../../../assets/css/postcard.css'\n\nexport default class ConfirmNumberForm extends React.Component {\n    static propTypes = {\n        /**\n         *  Действие при изменении значения поля\n         *  Предпологается, что код подтверждения отправляется, \\\n         *  только когда поле заполнено до конца. \\\n         *  См. использование в файле LoginForm.jsx\n         *  @default (value, mask) => console.log(value)\n         */\n         onChange: PropTypes.func,\n\n        /**\n         *  Действие при отправки формы\n         *  Тут нигде не используется\n         *  @default (data) => {}\n         */\n        onSubmit: PropTypes.func,\n\n        /**\n         *  Номер телефона, который будет отображаться на форме\n         *  (Без +7 или 8)\n         *  @default '0000000000'\n         */\n        phoneNumber: PropTypes.oneOfType(PropTypes.number, PropTypes.string),\n\n        /**\n         *  Номер телефона, который будет отображаться на форме\n         *  (Без +7 или 8)\n         *  @default '00000'\n         */\n        numberMask: PropTypes.string\n    }\n\n    static defaultProps = {\n        onChange: (value, mask) => console.log(value),\n        phoneNumber: '+70000000000',\n        numberMask: '99999'\n    }\n\n    componentDidMount() {\n        this.searchInput.focus();\n    }\n\n\n    render() {\n        // TODO:\n        // Это костыль на первое время\n        // Переписать обязательно\n        //let redirectTo = this.props.location.search\n        //.substr(this.props.location.search.indexOf('redirectTo=') + 'redirectTo='.length)\n\n        return (\n            <div className=\"container mx-auto text-center relative max-w-5xl\">\n            <div class=\"mx-auto\">\n            \n            <form className=\"bg-white mt-10 left-0 right-0 shadow-md rounded px-8 mb-4\">\n                <div class=\"absolute -top-5 -left-5 -right-5 -bottom-5 -z-10 bg-postcard rounded shadow-md\"></div>\n                <h1 className=\"text-5xl pt-12 mx-auto text-blue-darker font-black\">\n                    Введите код подтверждения\n                </h1>\n                <p className=\"text-2xl pt-2 max-w-4xl mx-auto text-gray-500\">\n                    Мы уже выслали на номер {format(this.props.phoneNumber, '## (###) ### ##-## ')} код подтверждения\n                    <br/>\n                    Введите его в поле ниже, чтобы войти\n                </p>\n                <div className=\"mb-8 mt-2\">\n\n                <InputMask\n                inputRef={inputEl => (this.searchInput = inputEl)}\n                mask={this.props.numberMask}\n                maskChar={'_'}\n                onChange={(e) => this.props.onChange(e)}\n                className=\"shadow appearance-none rounded w-72 py-2 px-3\n                text-gray-500 text-center text-4xl font-black leading-tight tracking-widest focus:outline-none focus:shadow-outline\"\n                id=\"username\" type=\"text\" \n                //beforeMaskedValueChange={this.beforeMaskedValueChange}\n                />\n\n                <p className=\"text-center mt-6 text-gray-500 text-lg\">\n                &copy; 2021 РМ Рейл <br/>\n                </p>\n                </div>\n            </form>\n            \n            </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class Logo extends React.Component {\n    render() {\n      return (\n        <div className=\"fixed top-0 left-0 right-0 bottom-0 select-none\">\n            <div className=\"select-none bg-gray-100 bg-opacity-75 absolute top-0 left-0 right-0 bottom-0\"></div>\n\n            <div className =\"flex absolute top-0 left-0 right-0 bottom-0 justify-center items-center\">\n                <svg viewBox=\"0 0 69.4 69.8\" className = \"w-48 h-auto animate-spin\" xmlns=\"http://www.w3.org/2000/svg\" id=\"preloader-logo\">\n                    <path className=\"fill\" fill=\"#ed1849\" fill-rule=\"evenodd\" d=\"M45.8 52.7l-27.7 4.1-1.6-1.2 6.6-13.1 2.6 4.5c.3.5.9.8 1.4.8h16.2c.5 0 1-.3 1.4-.7.3-.4.4-1 .2-1.5l-3.8-11.1c-.2-.7-.9-1.1-1.6-1.1h-8.9L28 25.6h12.9l2.9 4.9c.3.5.9.8 1.4.8h23.9v-.2-.1l-.1-.7v-.1l-.4-2.3C65.6 11.9 51.5 0 34.7 0A35 35 0 00.5 27.7l11.1-.7 12-9.9L51.3 13l1.6 1.2-6.6 13.2-2.7-4.5c-.3-.5-.9-.8-1.4-.8H25.9c-.5 0-1 .3-1.4.7-.3.4-.4 1-.2 1.5L28 35.4c.2.7.9 1.1 1.6 1.1h8.9l2.6 7.8H28.2l-2.9-4.9c-.3-.5-.9-.8-1.4-.8H0V38.9l.1.7v.1l.4 2.2a34.9 34.9 0 0068.3.1l-11.1.7-11.9 10z\" clip-rule=\"evenodd\"></path>\n                </svg>\n            </div>\n        </div>\n      );\n    }\n}\n","export const userRoles = {\n    GUEST: 'GUEST',\n    UNCONFIRMED: 'UNCONFIRMED',\n    EMPLOYEE: 'EMPLOYEE'\n}\n\n// Нельзя использовать set, потому что он не переносит JSON.Stringify\nexport const defaultUser = {\n    name: 'Гость',\n    phoneNumber: '+70000000000',\n    roles: new Set([userRoles.GUEST]),\n}\n\nexport class User {\n    /**\n     * Посмотрите на структуру объекта пользователя \\\n     * Время жизни сессии (expires) пишется в секундах \\\n     * Подразумевается, что данные будут храниться на стороне клиента, \\\n     * чтобы не делать слишком много запросов к апи \\\n     * Но апи должен хранить копию этих данных, чтобы проверять их целостность по токену \\\n     * как минмум при отправке формы \\\n     * Потому что иначе любой с шаловливыми ручками может залезть в дебаггер или куки \\\n     * И поменять там значения, на какие ему нужно\n     */\n\n    constructor(overrides = {}) {\n        Object.assign(this, defaultUser);\n        Object.assign(this, overrides);\n        \n        if (!(typeof this.roles === 'object' && this.roles instanceof Set)) {\n            this.roles = new Set(this.roles);\n        }\n        return this;\n    }\n\n\n    getFullName() {\n        const result = {\n            lastName: '',\n            firstName: '',\n            middleName: '',\n        }\n\n        let array = this.name.split(' ');\n\n        let i = 0;\n        Object.keys(result).forEach(key => {\n            if (i < array.length)\n            result[key] = array[i];\n            ++i;\n        });\n\n        return result;\n    }\n\n    // Кастомное поведение при JSON.stringify\n    // Нужно для преобразования сета в массив, иначе оно записывается как {}\n    toJSON() {\n        return JSON.stringify ({\n            name: this.name,\n            phoneNumber: this.phoneNumber,\n            roles: [...this.roles],\n        })\n    }\n\n    clone(overrides = {}) {\n        return new User(Object.assign(this.getInfo(), overrides));\n    }\n}","import {User, userRoles} from './User'\nimport Cookies from 'js-cookie';\n\nlet current = {};\n\n// Пока не нужно\nlet countdown = 0.0;\n\nexport const defaultSession = {\n    user: new User(),\n    validThrough: new Date(\"Jan 1, 2077 00:00:00\"),\n    authToken: '',\n\n    // Это тоже пока не используем\n    refreshToken: '',\n}\n\nexport class Session {\n    static startNew(overrides = {}) {\n        current = {};\n\n        current = Object.assign(current, defaultSession);\n        current = Object.assign(current, overrides);\n    }\n\n    // Пока что не пользуемся куками\n    static start() {\n        \n    }\n\n    static edit(changes = {}) {\n        Object.assign(current, changes);\n    }\n\n    static getCurrent() {\n        // Выдаём копию, чтобы ненароком ничего не менять в самой сессии\n        return Session.import(Session.export());\n    }\n\n    static export() {\n        return JSON.stringify(current);\n    }\n\n    static import(JSONstring) {\n        return JSON.parse(JSONstring, function(key, value) {\n            if (key == 'user') {\n                return new User(JSON.parse(value));\n             }\n            \n            if (key == 'validThrough') return new Date(value);\n            return value;\n        });\n    }\n\n    // Пока что не нужно\n    static writeCookie() {\n        Cookies.set('session', JSON.stringify(current), { expires: 1, secure: true })\n    }\n\n    // И это тоже\n    static readCookie() {\n        return JSON.parse((Cookies.get('session')));\n    }\n}\n\n// export const startNewSession = (sessionObj = {}) => {\n//     const result = {...defaultSession};\n//     Object.keys(sessionObj).forEach(key => {\n//         result[key] = sessionObj[key];\n//     });\n//     writeUserSession(result);\n// }\n\n// export const editSession = (edited = {}) => {\n//     const current = readUserSession();\n//     Object.keys(edited).forEach(key => {\n//         current[key] = edited[key];\n//     });\n//     writeUserSession(current);\n// }\n\n// export const writeUserSession = (session) => {\n//     Cookies.set('session', JSON.stringify(session), { expires: 1, secure: true })\n// }\n\n// export const refreshSession = (session) => {\n\n// }\n\n// export const readUserSession = () => {\n//     return JSON.parse((Cookies.get('session')));\n// }\n\n// const sessionCache = () => {\n\n// }","export const DUMMY_PHONE = '5555555555';\nexport const DUMMY_CONFIRM_NUMBER = '55555';\nexport const DUMMY_TOKEN = 'ffff0000';\nexport const UNCONFIRMED_TOKEN = 'UNCONFIRMED_USER';\n\n/**\n * Несколько самопальным ENUM реализованных в виде объектов-констант,\n * чтобы не работать с неизвестными строками\n */\n\nexport const status = {\n    SUCCESS: 'SUCCESS',\n    FAIL: 'FAIL',\n    NOT_FOUND: 'NOT FOUND'\n}\n\nexport const ACTION = {\n    LOGIN: 'LOGIN',\n    LOGOUT: 'LOGOUT',\n    CONFIRM: 'CONFIRM',\n    REQSERVICE: 'REQUEST SERVICE',\n}","import {User, userRoles, defaultUser} from '../user/User'\nimport { Session } from '../user/Session';\nimport { status } from '../constants/dummyConstants';\n\nconst DUMMY_PHONE = '+75555555555';\nconst DUMMY_CONFIRM_NUMBER = '55555';\nconst DUMMY_USER_NAME = 'Иванов Иван Иванович'\nconst DUMMY_TOKEN = 'ffff0000';\nconst DUMMY_REFRESH_TOKEN = '0000ffff'\n\n//TODO: дописать FAKEAPI, подключить reducer к нему\n//Будем считать, что сделано\n\nexport const refreshSession = (session) => {\n    return new Promise(function(resolve, reject) {\n        \n    });\n}\n\nexport const inputNumber = (session, data) => {\n    return new Promise(function(resolve, reject) {\n        // Симулируем какой-то процесс обращения к апи с помошью setTimeout\n        if (data.phoneNumber === DUMMY_PHONE) {\n            \n            setTimeout(() => {\n                Session.startNew({\n                    user: new User({...session.user, phoneNumber: DUMMY_PHONE,\n                        roles: session.user.roles.add(userRoles.UNCONFIRMED)}),\n                    // expires: 600,\n                });\n                resolve(status.SUCCESS);\n            }, Math.random() * 1000 + 250)\n        }\n        else {\n            setTimeout(() => {\n                reject(status.FAIL);\n            }, Math.random() * 1000 + 250)\n        }\n    });\n}\n\nexport const confirmNumber = (session, data) => {\n    return new Promise(function(resolve, reject) {\n        // Симулируем какой-то процесс обращения к апи с помошью setTimeout\n        if (data.phoneNumber === DUMMY_PHONE\n            && data.confirmNumber === DUMMY_CONFIRM_NUMBER) {\n            \n            setTimeout(() => {\n                Session.startNew({\n                    user: new User({...session.user, name: DUMMY_USER_NAME,\n                    roles: new Set([userRoles.GUEST, userRoles.EMPLOYEE])}),\n\n                    authToken: DUMMY_TOKEN,\n                    // expires: 600,\n                });\n                resolve(status.SUCCESS);\n            }, Math.random() * 1000 + 250)\n        }\n        else {\n            setTimeout(() => {\n                reject(status.FAIL);\n            }, Math.random() * 1000 + 250)\n        }\n    });\n}\n\nexport const logout = (session, data = {}) => {\n    return new Promise(function(resolve, reject) {\n        setTimeout(() => {\n            Session.startNew();\n            resolve(status.SUCCESS)\n        }, Math.random() * 1000 + 250)\n    });\n}\n\nexport const requestService = (session, data = {}) => {\n    // data.serviceId - id запрашиваемой услуги\n    return new Promise(function(resolve, reject) {\n        if (session.authToken === DUMMY_TOKEN) {\n            setTimeout(() => {\n                resolve(status.SUCCESS)\n            }, Math.random() * 1000 + 250)\n        }\n        else {\n            setTimeout(() => {\n                reject(status.FAIL)\n            }, Math.random() * 1000 + 250)\n        }\n    });\n}","//import login from \"./actions/login\";\n//import confirm from \"./actions/confirm\";\n//import logout from \"./actions/logout\"\n\nimport {inputNumber, confirmNumber, logout, requestService} from \"./api/fakeApi\"\nimport { Session } from \"./user/Session\"\n\nimport {ACTION, status} from './constants/dummyConstants'\n/**\n * REDUCE ОБРАБАТЫВАЕТ ВСЕ ВХОДЯЩИЕ ЗАПРОСЫ С ФОРМ \\\n * ПРИНИМАЕТ ЗАПРОС, ИСПОЛЬЗУЕТ СООТВЕТСТВУЮЩЕЕ ДЕЙСТВИЕ \\\n * \n * @param {*} action действие, которое мы хотим обработать\n * @returns ответ в виде строки-константы STATUS (см. dummyConstants), например 'SUCCESS' или 'FAIL'\n */\nasync function reduce(action) {\n    switch (action.type) {\n        case ACTION.LOGIN:\n            console.log(Session.getCurrent())\n            return inputNumber(Session.getCurrent(), action.data)\n        case ACTION.CONFIRM:\n            return confirmNumber(Session.getCurrent(), action.data)\n        case ACTION.LOGOUT:\n            return logout(Session.getCurrent(), action.data)\n        case ACTION.REQSERVICE:\n            return requestService(Session.getCurrent(), action.data)\n        default:\n            return Promise.reject(status.NOT_FOUND);\n        }\n}\n\nexport default reduce;","import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst sizes = {\n    'sm': {\n        height: \"h-12\",\n        width: \"w-12\",\n        border: \"border-2\",\n        padding: \"px-8\",\n        text: 'text-md',\n    },\n    'lg': {\n        height: \"h-16\",\n        width: \"w-16\",\n        border: \"border-2\",\n        padding: \"px-12\",\n        text: 'text-xl',\n    }\n}\n\n\nexport default class TimeoutButtonOutline extends React.Component {\n    \n    static propTypes = {\n        /**\n         *  Действие при нажатии кнопки либо по истечении времени\n         *  @default () => {}\n         */\n        onClick: PropTypes.func,\n\n        /**\n         *  Время в секундах до осуществления действия\n         *  @default undefined\n         */\n        timeout: PropTypes.number,\n\n        /**\n         * Размер кнопки. Один из ['sm', 'lg']\n         * @default 'sm'\n         */\n        size: PropTypes.string,\n\n        /**\n         * Цвет кнопки. СТРОКА. См. цветообразование в tailwind css \\\n         * Также в проект зашиты другие цвета в tailwind.config.js\n         * \n         * @default 'red'\n         */\n        color: PropTypes.string,\n\n        /**\n         * Контрастный цвет к заданному (color) СТРОКА. См. цветообразование в tailwind css \\\n         * Также в проект зашиты другие цвета в tailwind.config.js \\\n         * \n         * @default 'white'\n         */\n        contrastColor: PropTypes.string,\n    }\n\n    static defaultProps = {\n        onClick: () => {},\n        timeout: undefined,\n        size: 'sm',\n        color: 'red',\n        contrastColor: 'white'\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {timer: props.timeout}\n    }\n\n    componentDidMount() {\n        if (this.state.timer)\n            this.onTimerTick.call(this);\n    }\n\n    onTimerTick() {\n        if (this.state.timer <= 0) {\n            this.props.onClick({preventDefault: () => {}});\n        }\n        else {\n            setTimeout(() => {\n                this.setState({timer: this.state.timer - 1},\n                    this.onTimerTick.call(this));\n            }, 1000)\n        }\n    }\n\n    render() {\n        const size = sizes[this.props.size] || sizes['sm'];\n        const color = {\n            text: `text-${this.props.color}`,\n            border: `border-${this.props.color}`,\n            hoverText: `hover:text-${this.props.contrastColor}`,\n            hoverBg: `hover:bg-${this.props.color}`,\n        }\n\n        /*         \n            h-12\n            flex items-center\n            text-red\n            justify-center uppercase\n            font-semibold\n            border-red\n            undefined\n            border-red hover:bg-red\n            hover:text-white\n            transition duration-500\n            ease-in-out \n            text-md\"\n         */\n\n        return (\n        <button class=\"inline-flex\" onClick={this.props.onClick}>\n            <span class={`\n            ${size.height}\n            flex items-center\n            ${color.text}\n            justify-center uppercase\n            font-semibold\n            ${color.border}\n            ${size.padding}\n            ${size.border}\n            ${color.border}\n            ${color.hoverBg}\n            ${color.hoverText}\n            transition duration-500\n            ease-in-out \n            ${size.text}`}>\n                {this.props.children}\n            </span>\n            {(() => {\n                if (typeof this.props.timeout !== 'undefined') {\n                    return <span class={`\n                    ${size.height}\n                    ${size.width} \n                    flex-shrink-0\n                    flex ${color.text}\n                    items-center justify-center \n                    ${size.border}\n                    border-l-0 font-black\n                    ${color.border} ${color.hoverBg}\n                    ${color.hoverText}\n                    transition duration-500\n                    ease-in-out\n                    ${size.text}\n                    `}>\n                            {this.state.timer}\n                        </span>\n                }\n            })()}\n        </button>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n  }\nfrom 'react-router-dom';\n\nimport AskLoginForm from './Login/AskLoginForm';\nimport InputPhoneForm from './Login/InputPhoneForm';\nimport ConfirmForm from './Login/ConfirmNumberForm';\nimport LoaderScreen from '../LoaderScreen'\n\nimport reducer from '../../scripts/reducer'\n\nimport { userRoles } from '../../scripts/user/User';\nimport {Session} from '../../scripts/user/Session'\nimport { ACTION } from '../../scripts/constants/dummyConstants';\nimport TimeoutButtonOutline from '../Buttons/TimeoutButtonOutline';\n\n// Время в секундах\nconst LOGOUT_T = 30;\n\nexport default class Forms extends React.Component {\n\n    // Дописать действия при отправке формы (props.onSubmit)\n\n    // TODO: сделать переходы в зависимости от success и fail\n    constructor(props) {\n        super(props);\n        this.state = {loading: true, timer: LOGOUT_T}\n    }\n\n    componentDidMount() {\n        this.setState({session: Session.getCurrent(), loading: false})\n        //console.log(success)\n        //console.log(fail)\n    }\n\n    componentWillMount() {\n        \n    }\n\n    setLoading(value) {\n        this.setState({loading: value})\n    }\n\n    updateSession(callback = () => {}) {\n        this.setState({session: Session.getCurrent()}, callback)\n    }\n\n\n    onLogout(data) {\n        let setLoading = this.setLoading.bind(this),\n        updateSession = this.updateSession.bind(this);\n\n        setLoading(true)\n        \n        return new Promise(function(resolve, reject) {\n            reducer({type: ACTION.LOGOUT, data: data}).then((result) => {\n                updateSession(setLoading(false));\n                // ...\n            },\n            )\n            .catch(result => {\n                updateSession(setLoading(false));\n                // ...\n            })\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <LoaderScreen/>\n        else {\n            const user = this.state.session.user;\n            //console.log(this.state.session);\n            //console.log(Session.getCurrent());\n\n            if (user.roles.has(userRoles.EMPLOYEE))\n                return (\n                    <div class=\"absolute left-4 top-4 max-w-md flex flex-col space-y-4 justify-center items-center\">\n                    <div class=\"bg-transparent w-auto flex items-center p-2\">\n                    <div class=\"flex items-center space-x-4 text-red\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                        </svg>\n                    </div>\n                    <div class=\"flex-grow p-3\">\n                    <div class=\"font-semibold text-xl text-blue-darker\">\n                        {user.getFullName().lastName + \" \" + user.getFullName().firstName}\n                    </div>\n                    {/* <div class=\"text-sm text-gray-500\">\n                        {(() => {\n                            if (user.roles.has(userRoles.EMPLOYEE))\n                                return \"Сотрудник\"\n                            else\n                                return \"Вход в систему не выполнен\"\n                        })()}\n                    </div> */}\n                    </div>\n                    <TimeoutButtonOutline timeout={20} onClick={(e) => {this.onLogout.call(this)}}>\n                        выход\n                    </TimeoutButtonOutline>\n                    </div>\n                    </div>\n                )\n            else return \"\";\n        }\n    }\n}","import React from 'react';\nimport backgroundImage from '../../assets/images/background-0.png';\nimport Background from './Background';\nimport ButtonContainer from './ButtonContainer';\nimport Logo from './Logo';\nimport MainButton from '../Buttons/MainButton';\nimport UserInfo from '../Forms/UserInfo'\n\nexport default class MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    render() {\n      return (\n      <div>\n\n        {/* Задний фон */}\n        <Background url={backgroundImage}/>\n        \n        <div className=\"container mx-auto text-center h-screen\">\n            {/* Логотип RMRail инфокиоск */}\n            <Logo/>\n\n            {/* Давайте хотя бы на главной странице выводить информацию о пользователе */}\n            <UserInfo/>\n\n            {/* Контейнер с кнопками */}\n            <ButtonContainer>\n\n                <MainButton className=\"col-span-2 row-span-2 bg-bg-red hover:bg-blue-lighter py-4\" size=\"xl\" direction=\"left\"\n                icon='<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                </svg>'\n                onClick={(e) => this.props.history.push('/services')}>\n                    Справки, услуги\n                </MainButton>\n\n                <MainButton className=\"col-span-2 row-span-1 bg-bg-red hover:bg-blue-lighter py-8\" size=\"md\" direction=\"top\"\n                icon='<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\" />\n                </svg>'\n                onClick={(e) => this.props.history.push('/news')}>\n                    Вагон новостей\n                </MainButton>\n\n                <MainButton className=\"col-span-2 row-span-1 bg-bg-red hover:bg-blue-lighter py-8\" size=\"md\" direction=\"bottom\"\n                icon='<svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\">\n                </path></svg>'\n                onClick={(e) => this.props.history.push('/maps')}>\n                    Карта предприятия\n                </MainButton>\n\n            </ButtonContainer>\n        </div>\n        </div>\n      );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\n\n/**\n * Кнопка на главной странице\n */\nexport default class SecondaryButton extends React.Component {\n    static propTypes = {\n        /** \n         * \"Направление\" кнопки. Влияет на границу\n         * Может быть left, top, right или bottom\n         * @default \"left\"\n         */\n        direction: PropTypes.string,\n\n        /** \n         * Иконка кнопки, html код (svg)\n         * Обычно пишется в виде <svg ...> </svg>\n         */\n        icon: PropTypes.string,\n\n        /** \n         * Ссылка, по которой ведёт кнопка \\\n         * Если задана, кнопка оборачивается в ссылку и функция OnClick не срабатывает \\\n         */\n        link: PropTypes.string,\n\n        /** \n         * Дополнительный текст к кнопке\n         */\n        description: PropTypes.string,\n\n        /** \n         * Добавочные css классы к кнопке \\\n         * желательно использовать классы Tailwind Css\n         * @example className = \"col-span-2 row-span-1\" \n         * растянет кнопку внутри сетки (CSS) на 1 ряд и 2 колонки \n         */\n        className: PropTypes.string,\n\n        /** \n         * Функция, которая выполняется по нажатию на кнопку\n         * @default () => {}\n         */\n        onClick: PropTypes.func,\n\n\n        /** \n         * Внутри компонента пишется текст кнопки\n         */\n        children: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    }\n\n    static defaultProps = {\n        direction: 'left',\n        onClick: (e) => {},\n    }\n    \n    #arrowRotation = {\n        left:  'left-0 rotate-0',\n        right:  'right-0 rotate-180',\n    }\n\n    render() {\n      const ParentTagName = this.props.link ? Link : 'button'\n      return (\n        <ParentTagName className={\n            `${this.props.direction === 'left' ? 'bg-gradient-to-r' : 'bg-gradient-to-l'}\n        from-blue-lighter to-red p-1 ` + this.props.className}\n        onClick={this.props.onClick}\n        to={this.props.link}\n        >\n\n        <div className=\"container \n        bg-white flex items-center content-center justify-between text-center relative h-40\">\n            <div className= {`\n            ${this.props.direction === 'left' ? 'pl-16' : 'pl-6'}\n            pt-7 pb-4 text-left`}>\n            <h3 className={\n                `text-4xl font-black\n                ${this.props.direction === 'left' ? 'text-blue-darker' : 'text-red'}`}>\n                {this.props.children}\n            </h3>\n            <p class=\"text-gray-500 mt-2\">\n                {this.props.description}\n            </p>\n            </div>\n            <div className=\"p-4\">\n            <div className={\n                `w-24 mx-auto\n                ${this.props.direction === 'left' ? 'text-red' : 'text-blue-darker mr-7'}`}\n                dangerouslySetInnerHTML={{ __html: this.props.icon }}\n            >\n            </div>\n            </div>\n            <div className={\n                `w-12 h-12\n                absolute\n                text-blue-darker\n                transform\n                ${this.#arrowRotation[this.props.direction]}\n                `}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\" />\n                </svg>\n            </div>\n        </div>\n        </ParentTagName>\n      );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport MainButton from '../Buttons/MainButton';\nimport TimeoutButtonOutline from '../Buttons/TimeoutButtonOutline';\n\nconst directions = [\"left\", \"bottom\", \"top\", \"right\"];\n\nexport default class ToolbarMain extends React.Component {\n\n    static propTypes = {\n        /** \n         * Массив кнопок, которые нужно отобразить.\n         * @default []\n         * @example\n         *      [{text: \"На главную\",\n         *      onClick: (e) => {\n         *      e.preventDefault();\n         *      this.props.history.push(\"/\")\n         *      }}]\n         */\n        buttons: PropTypes.array,\n\n        /**\n         * Размер. Один из ['sm', 'lg']\n         * @default 'sm'\n         */\n        size: PropTypes.string,\n        }\n\n    static defaultProps = {\n        buttons: [],\n        size: 'sm',\n    }\n\n    render() {\n        let n = this.props.buttons.length;\n        let buttons = this.props.buttons;\n\n        return (\n            <div className={`flex justify-start items-center flex-wrap -ml-5`}>\n            {\n                buttons.map((button,index) => {\n                    return (\n                    <div className=\"ml-5\">\n                        <TimeoutButtonOutline\n                        size={this.props.size}\n                        timeout={button.timeout}\n                        onClick={button.onClick}\n                        color={button.color}>\n                            {button.text}\n                        </TimeoutButtonOutline>\n                    </div>\n                    )\n                })\n            }\n            </div>\n        );\n    }\n}","import React from 'react';\nimport SecondaryButton from '../Buttons/SecondaryButton';\nimport PropTypes from 'prop-types'\nimport ToolbarSecondary from '../Toolbars/ToolbarSecondary';\n\nexport default class ServicesMenu extends React.Component {\n    static propTypes = {\n        /**\n         *  Нужно ли выводить кнопку \"назад\"\n         *  @default true\n         */\n        goBack: PropTypes.bool,\n\n        /** \n         * Текст кнопки \"назад\"\n         * Не выводится, если goBack = false\n         * @default \"Назад\"\n         */\n        goBackText: PropTypes.string,\n\n        /** \n         * Массив кнопок, которые нужно отобразить.\n         * *Внимательно посмотрите на пример в коде компонента*\n         * @default []\n         * @example []\n         */\n        buttons: PropTypes.array,\n    }\n\n    static defaultProps = {\n        goBack: true,\n        goBackText: 'Назад',\n        buttons: [],\n    }\n\n    getGoBackPath() {\n        let currentPath = this.props.location.pathname;\n\n        if (currentPath.lastIndexOf(\"/\") === currentPath.length - 1)\n            currentPath = currentPath.substr(0, currentPath.length - 1)\n\n        return currentPath.substr(0, currentPath.lastIndexOf(\"/\") + 1)\n    }\n\n    render() {\n        let buttons = [...this.props.buttons]\n\n        /*\n        Кнопку \"назад\" решили поцепить другим способом\n        if (this.props.goBack) {\n            buttons.unshift (\n                {\n                    icon: `<svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"></path>\n                    </svg>`,\n                    link: this.getGoBackPath(),\n                    onClick: () => {},\n                    description: '',\n                    text: this.props.goBackText,\n                }\n            )\n        }\n        */\n\n      return (\n      <div>\n        <div className=\"container mx-auto text-center\">\n\n            {/* Контейнер с кнопками */}\n            <div className=\"grid grid-cols-2 gap-4 py-10 px-4\">\n                {\n                    buttons.map((button,index)=> {\n                        return (\n                            <SecondaryButton className=\"col-span-1\" direction={index % 2 === 0 ? 'left' : 'right'}\n                            icon={button.icon}\n                            link={button.link}\n                            description={button.description}\n                            >\n                                {button.text}\n                            </SecondaryButton>\n                        )\n                    })\n                }\n            </div>\n            {(() => {\n                if (this.props.goBack)\n                    return (\n                        <div class=\"mx-4\">\n                            <ToolbarSecondary size=\"lg\" buttons={[\n                                {\n                                    text: \"Назад\",\n                                    onClick: ((e) => {\n                                        e.preventDefault();\n                                        this.props.history.push(this.getGoBackPath())\n                                    }).bind(this),\n                                    //timeout: 100,\n                                },\n                            ]}\n                            />\n                        </div>\n                    );\n            })()}\n        </div>\n        </div>\n      );\n    }\n}","import React from 'react';\nimport ServicesMenu from './ServicesMenu';\nimport ServicesRoutes from './Services';\n\n\nimport { BrowserRouter as Router, Switch, \n    Route, Redirect,} from \"react-router-dom\";\n\n\n\nexport default class Finance extends React.Component {\n    render() {\n        return (\n            <Switch>\n            {/*<Route path=\"/services\" component={Services}/>*/}\n            <Route path='/services/finance/:form' render={(props) => \n                {\n                    return <Redirect to={`/services/form?serviceId=${props.match.params.form}`} />\n                }\n            }/>\n\n            <Route exact path=\"/services/finance\" render={(props) => <ServicesMenu {...props}\n            buttons={[\n                {\n                    icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>`,\n                    link: '/forms/service/150',\n                    description: '',\n                    text: 'Справка 2-НДФЛ',\n                },\n                {\n                    icon: `<svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path></svg>`,\n                    link: '/forms/service/151',\n                    description: ``,\n                    text: 'Справка 182Н',\n                },\n                {\n                    icon: `<svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\">\n                    </path></svg>`,\n                    link: '/forms/service/155',\n                    description: ``,\n                    text: 'Справка о заработной плате',\n                },\n                {\n                    icon: `<svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\">\n                    </path></svg>`,\n                    link: '/forms/service/157',\n                    description: '',\n                    text: 'Справка в УФССП',\n                },\n                {\n                    icon: `<svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\">\n                    </path></svg>`,\n                    link: '/forms/service/158',\n                    description: '',\n                    text: 'Справка в центр занятости',\n                },\n            ]}\n            />} />\n\n            </Switch>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport MainButton from '../Buttons/MainButton';\nimport TimeoutButtonOutline from '../Buttons/TimeoutButtonOutline';\n\nimport format from '../../scripts/helperFunctions/format';\n\n/**\n * ВНИМАНИЕ: этот компонент является графической обёрткой \\\n * вся логика должна быть реализована в родительском компоненте \\\n * который и передаёт данные для отображения, а также функцию при отправке\n */\nexport default class BaseForm extends React.Component {\n    static propTypes = {\n\n        /**\n         * Название услуги\n        */\n        serviceText: PropTypes.string,\n\n        /** \n         * ФИО для отображения\n         */\n        name: PropTypes.string,\n\n        /** \n         * Телефон для отображения\n         */\n        phone: PropTypes.string,\n\n        /** \n         * Действие при нажатии кнопки \"подтвердить\"\n         */\n        onSubmit: PropTypes.func,\n    }\n\n    static defaultProps = {\n        // Все свойства указывать обязательно!\n        // стандартными не заменяем\n    }\n\n    render() {\n        return (\n            <div class=\"w-full max-w-3xl mx-auto\">\n            <form class=\"bg-white shadow-md relative rounded px-8 pt-6 pb-8 mb-4 mt-16\">\n            <div class=\"absolute -top-5 -left-5 -right-5 -bottom-5 -z-10 bg-postcard rounded shadow-md\"></div>\n                \n                <div class=\"mb-8\">\n                <label class=\"block text-blue-darker font-black text-3xl mb-2\" for=\"service\">\n                    Услуга\n                </label>\n                <input\n                disabled\n                class=\"shadow appearance-none border rounded w-full bg-gray-200 py-4 px-6\n                text-gray-900 text-2xl leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"service\" type=\"text\" value={this.props.serviceText}/>\n                </div>\n\n                <div class=\"mb-8\">\n                <label class=\"block text-blue-darker text-3xl font-black mb-2\" for=\"name\">\n                    ФИО\n                </label>\n                <input\n                disabled\n                class=\"shadow appearance-none border rounded w-full bg-gray-200 py-4 px-6\n                text-gray-900 text-2xl leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"name\" type=\"text\" value={this.props.name}/>\n                </div>\n\n                <div class=\"mb-8\">\n                <label class=\"block text-blue-darker text-3xl font-black mb-2\" for=\"phone\">\n                    Контактный номер\n                </label>\n                <input\n                disabled\n                class=\"shadow appearance-none border rounded w-full bg-gray-200 py-4 px-6\n                text-gray-900 text-2xl leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"phone\" type=\"text\" value={format(this.props.phone, '## (###) ### ##-##')}/>\n                </div>\n\n\n                <div class=\"grid h-28 grid-cols-1 grid-rows-1\">\n                <MainButton className=\"hover:bg-blue-lighter\" direction=\"right\" size=\"lg\" onClick={this.props.onSubmit}>\n                    Подтвердить\n                </MainButton>\n                {/*\n                <a class=\"inline-block align-baseline font-bold text-2xl text-blue-lighter\n                hover:text-blue-darker\" href=\"#\">\n                    Ошибка в данных?\n                </a>\n                */}\n                </div>\n            </form>\n            <p class=\"text-center text-gray-500 text-lg mt-8\">\n                &copy; 2021 РМ Рейл\n            </p>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ServicesMenu from './ServicesMenu';\nimport { Session } from '../../scripts/user/Session';\nimport { userRoles } from '../../scripts/user/User';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n  }\nfrom 'react-router-dom';\n\nimport Finance from './Finance';\nimport BaseForm from '../Forms/BaseForm'\n\nexport default class ServicesRoutes extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {loading: true}\n    }\n\n    componentDidMount() {\n        const search = this.props.location.search;\n        this.allowGuest = ((new URLSearchParams(search).get(\"guest\")) === 'true') || false;\n\n        this.setState({session: Session.getCurrent(), loading: false}, () => {\n            if (!this.state.session.user.roles.has(userRoles.EMPLOYEE) && !this.allowGuest) {\n                this.props.history.push('/forms/ask-login?success=/services&fail=/services?guest=true');\n            }\n        });\n    }\n\n    componentWillMount() {\n        \n    }\n\n    getComponent(relativeURL, props) {\n        switch (relativeURL) {\n            case 'finance':\n                return <Finance {...props}/>\n            default:\n                return <Redirect to=\"/\" />\n        }\n    }\n\n    render() {\n        return (\n            <Switch>\n            {/*<Route path=\"/services\" component={Services}/>*/}\n\n            <Route path='/services/:category' render={(props) => \n                {\n                    return this.getComponent(props.match.params.category, {...props})\n                }\n            }/>\n\n            <Route exact path=\"/services\" render={(props) => <ServicesMenu {...props}\n            buttons={[\n                {\n                icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                </svg>`,\n                link: '/services/finance',\n                description: 'Справка 2-НДФЛ, Справка 182Н, Справка о заработной плате, Справка в УФССП, Справка в центр занятости',\n                text: 'Доходы',\n                },\n                {\n                icon: `<svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\"></path>\n                </svg>`,\n                link: '/forms/service/102',\n                description: `\n                Справка о выплате единовременного пособия, \n                Справка о получении/неполучении пособия по уходу за ребенком, \n                Справка о выплате материальной помощи при рождении ребенка\n                `,\n                text: 'Выплаты',\n                },\n                {\n                icon: `<svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"></path>\n                </svg>`,\n                link: '/forms/service/112',\n                description: `Запрос копии трудовой книжки, \n                Запрос справки о стаже на РЗХМ, \n                Запрос копии трудового договора, \n                Запрос копии приказов о приёме/переводе`,\n                text: 'Стаж',\n                },\n                {\n                icon: `<svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 14l6-6m-5.5.5h.01m4.99 5h.01M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16l3.5-2 3.5 2 3.5-2 3.5 2zM10 8.5a.5.5 0 11-1 0 .5.5 0 011 0zm5 5a.5.5 0 11-1 0 .5.5 0 011 0z\">\n                </path></svg>`,\n                link: '/forms/service/103?success=/&fail=/',\n                description: '',\n                text: 'Льготная справка',\n                },\n            ]}\n            />} />\n\n            <Redirect to=\"/\" />\n            </Switch>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport MainButton from '../Buttons/MainButton';\n\nconst directions = [\"left\", \"bottom\", \"top\", \"right\"];\n\nexport default class ToolbarMain extends React.Component {\n\n    static propTypes = {\n        /** \n         * Массив кнопок, которые нужно отобразить.\n         * @default []\n         * @example\n         *      [{text: \"На главную\",\n         *      onClick: (e) => {\n         *      e.preventDefault();\n         *      this.props.history.push(\"/\")\n         *      }}]\n         */\n        buttons: PropTypes.array,\n    }\n\n    static defaultProps = {\n        buttons: [],\n    }\n\n    render() {\n        let n = this.props.buttons.length;\n        let buttons = this.props.buttons;\n\n        return (\n            <div className={`grid h-56 grid-cols-${n > 1 ? n : 2} grid-rows-1 gap-4 py-10 absolute bottom-0 left-0 right-0`}>\n            {\n                buttons.map((button,index) => {\n                    return <MainButton className=\"col-span-1 row-span-1 bg-blue-lighter hover:bg-red\"\n                    size=\"lg\"\n                    direction={n === 1\n                        ? directions[0]\n                        : index === n - 1\n                            ? directions[directions.length - 1]\n                            : directions[index % directions.length]}\n                    onClick={button.onClick}>\n                        {button.text}\n                    </MainButton> \n                })\n            }\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class FailReport extends React.Component {\n    render() {\n        return (\n            <div class=\"flex items-center gap-4 bg-red p-4 rounded-md max-w-5xl mx-auto\">\n            <div class=\"w-max\">\n                <div class=\"h-24 w-28 flex text-white border-r-4 border-white\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                </div>\n            </div>\n            <div class=\"space-y-1 pl-2 text-3xl text-left\">\n                <h6 class=\"font-black text-white\">{this.props.children}</h6>\n                <p class=\"font-black text-2xl text-gray-100\">{this.props.detail}</p>\n                <p class=\"font-black text-white\">Техподдержка: +7 (555) 555 55-55</p>\n            </div>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport default class FailReport extends React.Component {\n    render() {\n        return (\n            <div class=\"flex items-center gap-4 bg-green-500 p-4 rounded-md max-w-5xl mx-auto\">\n            <div class=\"w-max\">\n                <div class=\"h-24 w-28 flex text-white border-r-4 border-white\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#ffffff\">\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                    <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/>\n                    </svg>\n                </div>\n            </div>\n            <div class=\"space-y-1 pl-2 text-3xl text-left\">\n                <h6 class=\"font-black text-white\">{this.props.children}</h6>\n                <p class=\"font-black text-2xl text-gray-100\">{this.props.detail}</p>\n            </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport SuccessReport from '../../SuccessReport'\nimport format from '../../../scripts/helperFunctions/format';\nimport ToolbarSecondary from '../../Toolbars/ToolbarSecondary';\n\nexport default class ServiceAfterSuccess extends React.Component {\n\n    // TODO: подключить эту штуку в forms\n    // TODO: сделать похожие формы при ошибке, а также после входа в систему\n\n    static propTypes = {\n        /**\n         *  Объект \"класса\" user\n         */\n        user: PropTypes.object,\n\n        /**\n         * Название услуги, которую мы только что отправили\n         */\n        serviceText: PropTypes.string,\n\n        /** \n         * Действие при продолжении сессии (нажали на кнопку \"Продолжить как ...\")\n         */\n        onContinue: PropTypes.func,\n\n        /** \n         * Действие при выходе (нажали на кнопку \"Завершить сеанс\")\n         */\n        onExit: PropTypes.func,\n    }\n\n    /** \n     * ОБЯЗАТЕЛЬНО ЗАПОЛНИТЕ ВСЕ ПРОПЫ!!!\n     */\n    static defaultProps = {\n\n    }\n\n    render() {\n        return (\n            <div class=\"container mt-32 mx-auto\">\n                <SuccessReport detail=\n                {`Уведомление о готовности и способе выдачи прийдет на ваш номер телефона\n                ${format(this.props.user.phoneNumber, ' ## (###) ### ##-##')}`}>\n                    Вы успешно отправили заявку <br/>\n                    \"{this.props.serviceText}\" <br/>\n                    на имя {\" \" + this.props.user.getFullName().firstName}\n                    {\" \" + this.props.user.getFullName().lastName}\n                </SuccessReport>\n                <div class=\"max-w-5xl mx-auto mt-8\">\n                    <ToolbarSecondary buttons={[\n                        {\n                            text: \"Продолжить как \" + this.props.user.getFullName().firstName,\n                            onClick: (e) => this.props.onContinue(),\n                            color: 'blue-darker'\n                        },\n                        {\n                            text: \"Завершить сеанс\",\n                            onClick: (e) => this.props.onExit(),\n                            timeout: 20,\n                            //color: 'blue-darker'\n                        },\n                    ]}\n                    />\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport FailReport from '../../FailReport'\nimport format from '../../../scripts/helperFunctions/format';\nimport ToolbarSecondary from '../../Toolbars/ToolbarSecondary';\n\nexport default class ServiceAfterFail extends React.Component {\n\n    // TODO: подключить эту штуку в forms\n    // TODO: сделать похожие формы при ошибке, а также после входа в систему\n\n    static propTypes = {\n        /**\n         *  Объект \"класса\" user\n         */\n        user: PropTypes.object,\n\n        /**\n         * Название услуги, которую мы только что отправили\n         */\n        serviceText: PropTypes.string,\n\n        /** \n         * Действие при продолжении сессии (нажали на кнопку \"Попробовать ещё раз\")\n         */\n        onContinue: PropTypes.func,\n\n        /** \n         * Действие при выходе (нажали на кнопку \"Завершить сеанс\")\n         */\n        onExit: PropTypes.func,\n    }\n\n    /** \n     * ОБЯЗАТЕЛЬНО ЗАПОЛНИТЕ ВСЕ ПРОПЫ!!!\n     */\n    static defaultProps = {\n\n    }\n\n    render() {\n        return (\n            <div class=\"container mt-32 mx-auto\">\n                <FailReport>\n                    Мы не смогли отправить заявку <br/>\n                    \"{this.props.serviceText}\" <br/>\n                    на имя {\" \" + this.props.user.getFullName().firstName}\n                    {\" \" + this.props.user.getFullName().lastName}\n                </FailReport>\n                <div class=\"max-w-5xl mx-auto mt-8\">\n                    <ToolbarSecondary buttons={[\n                        {\n                            text: \"Попробовать ещё раз\",\n                            onClick: (e) => this.props.onContinue(),\n                            color: 'blue-darker'\n                        },\n                        {\n                            text: \"На главный экран\",\n                            onClick: (e) => this.props.onExit(),\n                            timeout: 60,\n                            //color: 'blue-darker'\n                        },\n                    ]}\n                    />\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport {\n    // BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n  }\nfrom 'react-router-dom';\n\nimport AskLoginForm from './Login/AskLoginForm';\nimport InputPhoneForm from './Login/InputPhoneForm';\nimport ConfirmForm from './Login/ConfirmNumberForm';\nimport LoaderScreen from '../LoaderScreen'\n\nimport reducer from '../../scripts/reducer'\n\nimport { userRoles } from '../../scripts/user/User';\nimport {Session} from '../../scripts/user/Session'\nimport { ACTION } from '../../scripts/constants/dummyConstants';\n\nimport ToolbarMain from '../Toolbars/ToolbarMain';\nimport ToolbarSecondary from '../Toolbars/ToolbarSecondary';\nimport FailReport from '../FailReport';\nimport BaseForm from './BaseForm';\n\nimport ServiceAfterSuccess from './info/ServiceAfterSuccess';\nimport ServiceAfterFail from './info/ServiceAfterFail';\n\n// на экране \"подтвердите номер\", маска номера подтверждения\n// изменить только в случае смены длины номера, это важно\nconst confirmNumberMask = '99999';\nexport default class Forms extends React.Component {\n\n    // Дописать действия при отправке формы (props.onSubmit)\n\n    constructor(props) {\n        super(props);\n        this.state = {loading: true}\n    }\n\n    componentDidMount() {\n        this.setState({session: Session.getCurrent(), loading: false})\n\n        const search = this.props.location.search;\n        const success = new URLSearchParams(search).get(\"success\") || '/';\n        const fail = new URLSearchParams(search).get(\"fail\") || '/';\n\n        this.onSuccess = (callback) => {\n            this.props.history.push(success)\n            callback?.();\n        }\n\n        this.onFail = (callback) => {\n            this.props.history.push(fail)\n            callback?.()\n        }\n\n        //console.log(success)\n        //console.log(fail)\n        \n    }\n\n    componentWillMount() {\n        \n    }\n\n    setLoading(value, callback) {\n        this.setState({loading: value}, callback?.())\n    }\n\n    updateSession(result, callback = () => {}) {\n        this.setState({session: Session.getCurrent(), result: result}, callback)\n    }\n\n    onPhoneSubmit(data) {\n        let setLoading = this.setLoading.bind(this),\n        updateSession = this.updateSession.bind(this);\n\n        setLoading(true)\n        \n        return new Promise(function(resolve, reject) {\n            reducer({type: ACTION.LOGIN, data: data}).then((result) => {\n                updateSession(undefined, setLoading(false, resolve(result)));\n                // ...\n            },\n            )\n            .catch(result => {\n                updateSession(<FailReport>\n                    Неверный номер телефона\n                </FailReport>, setLoading(false, reject(result)));\n                // ...\n            })\n        })\n    }\n\n    \n    // TODO: выставить confirmNumberChange наружу\n    onConfirmNumberChange = (event) => {\n        let confirmNumber = event.target.value.replace(/[ _()-]/g, '');\n\n        this.setState({\n            confirmNumber: confirmNumber,\n        });\n\n        console.log(confirmNumber);\n\n        if (confirmNumber.length === confirmNumberMask.length) {\n            this.onConfirmNumberSubmit({phoneNumber: this.state.session.user.phoneNumber, confirmNumber: confirmNumber})\n        }\n    }\n\n    onConfirmNumberSubmit(data) {\n        let setLoading = this.setLoading.bind(this),\n        updateSession = this.updateSession.bind(this);\n\n        let onSuccess = this.onSuccess.bind(this);\n        let onFail = this.onFail.bind(this);\n\n        setLoading(true)\n        \n        return new Promise(function(resolve, reject) {\n            reducer({type: ACTION.CONFIRM, data: data}).then((result) => {\n                updateSession(undefined, setLoading(false, resolve(result)));\n                // ...\n                onSuccess();\n                resolve(result)\n            },\n            )\n            .catch(result => {\n                updateSession(<FailReport>\n                        Введён неверный номер подтверждения\n                    </FailReport>, setLoading(false, reject(result)));\n                // ...\n                reject(result)\n            })\n        })\n    }\n\n    onLogout(data) {\n        let setLoading = this.setLoading.bind(this),\n        updateSession = this.updateSession.bind(this);\n\n        setLoading(true)\n        \n        return new Promise(function(resolve, reject) {\n            reducer({type: ACTION.LOGOUT, data: data}).then((result) => {\n                updateSession(undefined, setLoading(false, resolve(result)));\n            },\n            )\n            .catch(result => {\n                updateSession(<FailReport>Произошла ошибка</FailReport>,\n                     setLoading(false, reject(result)));\n            })\n        })\n    }\n\n    onServiceSubmit(data) {\n        const setLoading = this.setLoading.bind(this),\n        updateSession = this.updateSession.bind(this);\n\n        const onSuccess = this.onSuccess.bind(this),\n        onFail = this.onFail.bind(this),\n        onLogout = this.onLogout.bind(this);\n\n\n        const lifeReport = <ServiceAfterSuccess\n            user={this.state.session.user}\n            serviceText={data.serviceId}\n            onContinue = {(e) => {onSuccess()}}\n            onExit = {() => {\n                let logout = onLogout();\n                logout.then(setTimeout(onSuccess(), 1000))\n                //.then(result => onSuccess())\n                //.catch(result => onSuccess())\n            }}\n            />\n\n        const deathReport = <ServiceAfterFail\n            user={this.state.session.user}\n            serviceText={data.serviceId}\n            onContinue = {(e) => {updateSession(undefined, setLoading(false))}}\n            onExit = {(e) => {\n                onFail()\n            }}\n            />\n\n        // Запускаем загрузку\n        setLoading(true)\n        \n        return new Promise(function(resolve, reject) {\n            reducer({type: ACTION.REQSERVICE, data: data}).then((result) => {\n                updateSession(lifeReport, setLoading(false));\n                // ...\n            },\n            )\n            .catch(error => {\n                updateSession(deathReport, setLoading(false));\n                // ...\n            })\n        })\n    }\n    \n\n    render() {\n        \n\n        if (this.state.loading)\n            return <LoaderScreen/>\n        else {\n            const user = this.state.session.user;\n            //console.log(this.state.session);\n            //console.log(Session.getCurrent());\n        return (\n            <Switch>\n            <Route path='/forms/ask-login' \n            render={(props) => (\n            <div className=\"container mx-auto text-center relative h-screen\">\n            <AskLoginForm {...props}/>\n            <ToolbarMain buttons={[\n                {\n                    text: \"Продолжить как гость\",\n                    onClick: (e) => {\n                        e.preventDefault();\n                        this.onFail.call(this)\n                    }\n                },\n                {\n                    text: \"Войти в систему\",\n                    onClick: (e) => {\n                        e.preventDefault();\n                        (() => this.props.history.push('/forms/login')).call(this);\n                    }\n                },\n            ]}\n            />\n            </div>\n            ) }\n            />\n            <Route path='/forms/login' render={(props) => {\n                if (user.roles.has(userRoles.UNCONFIRMED)) {\n                    return (\n                    <div className=\"container mx-auto text-center relative max-w-5xl\"> \n                    {(() => {\n                        if (this.state.result) {\n                            return <h6 className=\"mt-5 text-3xl text-red\">{this.state.result}</h6>\n                        }\n                    })()}\n                \n                    <ConfirmForm phoneNumber={user.phoneNumber}\n                    onChange={this.onConfirmNumberChange.bind(this)}\n                    numberMask = {confirmNumberMask}\n                    {...props}/>\n                    <div className=\"mt-16 -mx-5\">\n                    <ToolbarSecondary size=\"lg\" buttons={[\n                        {\n                            text: \"Отмена\",\n                            onClick: (e) => {\n                                e.preventDefault();\n                                this.onFail.call(this);\n                            },\n                            timeout: 60,\n                        },\n                        {\n                            text: \"Отправить номер повторно\",\n                            onClick: (e) => {\n                                e.preventDefault();\n                                this.onPhoneSubmit.call(this, {phoneNumber: user.phoneNumber})\n                            },\n                            color: 'blue-darker'\n                        },\n                        {\n                            text: \"Ввести другой номер\",\n                            onClick: (e) => {\n                                e.preventDefault();\n                                this.onLogout.call(this)\n                            },\n                            color: 'blue-darker'\n                        },\n                    ]}\n                    />\n                    </div>\n                    </div>\n                    )\n                }\n                else {\n                    return (\n                    <div className=\"container mx-auto text-center relative max-w-5xl\">\n                    {(() => {\n                        if (this.state.result) {\n                            return <h6 className=\"text-3xl mt-5 text-red\">{this.state.result}</h6>\n                        }\n                    })()}\n\n                    <InputPhoneForm\n                    onSubmit = {this.onPhoneSubmit.bind(this)}\n                    {...props}/>\n                    <div className=\"mt-16 -mx-5\">\n                    <ToolbarSecondary size=\"lg\" buttons={[\n                        {\n                            text: \"Отмена\",\n                            onClick: (e) => {\n                                e.preventDefault();\n                                this.onFail.call(this);\n                            },\n                            timeout: 60,\n                        },\n                    ]}/>\n                    </div>\n                    </div>\n                    )\n                }\n            }}/>\n\n\n            {\n                /**\n                 * Логика работы формы с отправкой услуги\n                 * this.state.result содержит в себе компонент\n                 */\n            }\n            <Route path='/forms/service/:id' render={(props) => {\n                const serviceId = props.match.params.id;\n                \n                if (this.state.result) {\n                    console.log(this.state.result);\n                    return this.state.result;\n                }\n\n                else {\n                    return (\n                    <div class=\"max-w-3xl mx-auto\">\n                    <BaseForm\n                    serviceText={serviceId}\n                    name={user.name}\n                    phone={user.phoneNumber}\n                    onSubmit={((e) => {\n                        e.preventDefault();\n                        this.onServiceSubmit.call(this, {serviceId})\n                    }).bind(this)}\n                    {...props}/>\n                    \n                    <div class=\"-mx-5 my-8\">\n                    <ToolbarSecondary size=\"lg\" buttons={[\n                        {\n                            text: \"Отмена\",\n                            onClick: (e) => {\n                                e.preventDefault();\n                                this.onFail.call(this);\n                            },\n                            //timeout: 60,\n                        },\n                        {\n                            text: \"Другой пользователь\",\n                            onClick: (e) => {\n                                e.preventDefault();\n                                this.onLogout.call(this)\n                                .then((() => this.props.history.push(\n                                    `/forms/login?success=/forms/service/${serviceId}&fail=/forms/service/${serviceId}`\n                                )).call(this))\n                            },\n                            color: 'blue-darker'\n                        },\n                    ]}/>\n                    </div>\n                    </div>\n                    )\n                }\n            }}/>\n            <Redirect to=\"/\" />\n            </Switch>\n        )\n        }\n    }\n}","import React from 'react';\nimport Lightbox from \"react-awesome-lightbox\";\nimport LoaderScreen from \"../LoaderScreen\"\n// You need to import the CSS only once\nimport \"react-awesome-lightbox/build/style.css\";\nimport \"../../assets/css/lightbox-custom.css\"\n\nexport default class MapDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {imageList: [], loading: true}\n    }\n\n    async componentDidMount() {\n        /*\n        * Тут в будущем можно будет написать запрос к апи\n        * или ещё к чему\n        */\n        const response = {data: {\n            results: [\n                {\n                    url: 'https://via.placeholder.com/1280x720/0000FF/808080',\n                    title:\"Производственная площадка 1 - 1\"\n                },\n                {\n                    url:\"https://via.placeholder.com/720x1280/FFFF00/000000\",\n                    title:\"Производственная площадка 1 - 2\"\n                }\n            ]\n        }}\n\n        // Это для симуляции загрузки\n        await new Promise((resolve, reject) => setTimeout(resolve, 2000));\n\n        this.setState({ imageList: response.data.results, loading: false });\n    }\n\n    render() {\n        console.log(this.state.imageList);\n        if (this.state.loading) {\n            return (\n                <LoaderScreen/>\n            );\n        }\n        else {\n            return (\n                <Lightbox images={this.state.imageList} allowRotate={false} doubleClickZoom={2}\n                onClose={() => {this.props.history.push('/maps')}}/>\n            );\n        }\n    }\n}\n","import React from 'react';\nimport ServicesMenu from '../Services/ServicesMenu';\nimport MapDetail from './MapDetail';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n  }\nfrom 'react-router-dom';\n\nexport default class Maps extends React.Component {\n\n    render() {\n        return (\n            <Switch>\n            <Route path='/maps/:category' render={(props) => \n                {\n                    return <MapDetail category={props.match.params.category} {...props}/>\n                }\n            }/>\n\n            <Route exact path=\"/maps\" render={(props) => <ServicesMenu {...props}\n            buttons={[\n                {\n                icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                </svg>`,\n                link: '/maps/1',\n                description: '',\n                text: 'Площадка 1',\n                },\n                {\n                icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                </svg>`,\n                link: '/maps/2',\n                description: '',\n                text: 'Площадка 2',\n                },\n            ]}\n            />} />\n\n            <Redirect to=\"/\" />\n            </Switch>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nexport default class ContentButton extends React.Component {\n    static propTypes = {\n\n        /** \n         * \"Направление\" кнопки. Пока что влияет только на стрелочку \\\n         * Может быть left, right или никаким\n         * @default \"left\"\n         */\n        direction: PropTypes.string,\n\n        /** \n         * Действие при нажатии кнопки\n         */\n        onClick: PropTypes.func,\n\n        /** \n         * Добавочные css классы к кнопке \\\n         * желательно использовать классы Tailwind Css\n         * @example className = \"col-span-2 row-span-1\" \n         * растянет кнопку внутри сетки (CSS) на 1 ряд и 2 колонки \n         * @example className = \"bg-blue-lighter hover:bg-red\"\n         * сделает кнопку синей, а при наведении на неё мышкой - красной \n         */\n        className: PropTypes.string,\n\n        /**\n         * Выключена ли кнопка\n         */\n        disabled: PropTypes.any,\n\n        /** \n         * Внутри компонента пишется текст кнопки\n         */\n        children: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    }\n\n    static defaultProps = {\n        size: 'md',\n        direction: 'left',\n        children: 'Кнопка',\n        disabled: false,\n    }\n\n    render() {\n        switch (this.props.direction) {\n            case 'left':\n                return (\n                <button type=\"button\"\n                onClick={this.props.onClick}\n                disabled={this.props.disabled}\n                class={`bg-gray-800 text-white rounded-l-md\n                py-3 hover:bg-red\n                transition duration-150 ease-out\n                hover:text-white px-5 ${this.props.className}`}>\n                <div class=\"flex flex-row align-middle items-center\">\n                    <svg class=\"w-8 mr-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\" d=\"M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z\" clip-rule=\"evenodd\"></path>\n                    </svg>\n                    <p class=\"ml-4 text-xl uppercase font-black\">{this.props.children}</p>\n                </div>\n                </button>\n            )\n\n            case 'right':\n                return (\n                <button type=\"button\"\n                onClick={this.props.onClick}\n                disabled={this.props.disabled}\n                class={`bg-gray-800 text-white rounded-r-md\n                transition duration-150 ease-out\n                py-3 hover:bg-red\n                hover:text-white px-5 ${this.props.className}`}>\n                    <div class=\"flex flex-row align-middle items-center\">\n                    <p class=\"mr-4 text-xl uppercase font-black\">{this.props.children}</p>\n                    <svg class=\"w-5 ml-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" d=\"M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path>\n                    </svg>\n                    </div>\n                </button>\n                )\n            \n            default:\n                return (\n                    <button type=\"button\"\n                    onClick={this.props.onClick}\n                    disabled={this.props.disabled}\n                    class={`bg-gray-800 text-white rounded-md\n                    py-3 hover:bg-red\n                    transition duration-150 ease-out\n                    hover:text-white px-5 ${this.props.className}`}>\n                        <div class=\"flex flex-row align-middle items-center\">\n                        <p class=\"mx-2 text-xl uppercase font-black\">{this.props.children}</p>\n                        </div>\n                    </button>\n                )\n        }\n\n    }\n}","export const getNewsList = () => {\n    return new Promise(function(resolve, reject) {\n        fetch('/api/news')\n        .then((response) => {\n            if (response.ok) {\n            // if HTTP-status is 200-299\n            // get the response body (the method explained below)\n            response.json()\n                .then(json => {\n                    resolve(json['newsList'])\n                })\n            }\n    \n            else {\n                reject(\"HTTP-Error: \" + response.status);\n            }\n        })\n        .catch((error) => {\n            reject(\"serious error occured\");\n        })\n    });\n}\n\n// УСТАРЕЛО\nexport const getNews = (number) => {\n    return new Promise(function(resolve, reject) {\n        setTimeout(() => {\n            resolve (\n                {\n                    name: \"Выпуск новостей 46\",\n                    url: \"/pdf/46.pdf\"\n                },\n            )\n        }, Math.random() * 2000 + 1250)\n    });\n}","import React from 'react';\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\n\nimport ContentButton from '../Buttons/ContentButton';\n\nimport LoaderScreen from '../LoaderScreen'\nimport { getNewsList } from '../../scripts/api/contentApi';\n//import '../../assets/css/scrollbar.css'\n\nconst gutter = 48;\nexport default class News extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {numPages: 1, pageNumber: 1, \n        window: {width: window.innerWidth, height: window.innerHeight},\n        loading: true}\n    }\n\n    componentDidMount() {\n        getNewsList().then(result => {\n            this.setState({list: result, current: 0, loading: false})\n        })\n        .catch(error => {\n            this.setState({loading: false})\n        })\n    }\n\n    previousEnty() {\n        this.changeEntry.call(this, 1);\n    }\n\n    nextEntry() {\n        this.changeEntry.call(this, -1);\n    }\n\n    changeEntry(offset) {\n        this.setState({pageNumber: 1, current: this.state.current + offset})\n    }\n\n\n    onDocumentLoadSuccess({ numPages }) {\n        this.setState({numPages: numPages, pageNumber: 1});\n    }\n\n    changePage(offset) {\n        this.setState({pageNumber: this.state.pageNumber + offset})\n    }\n\n    previousPage() {\n        this.changePage.call(this, -1);\n    }\n\n    nextPage() {\n        this.changePage.call(this, 1);\n    }\n\n    render() {\n\n        if (this.state.loading) {\n            return <LoaderScreen/>\n        }\n\n        else\n        return (\n        <div class=\"bg-gray-900 pb-24 pt-24 relative\">\n            <Document\n                file={this.state.list[this.state.current].url}\n                renderMode={'svg'}\n                onLoadSuccess={this.onDocumentLoadSuccess.bind(this)}\n            >\n                <Page \n                width={this.state.window.width - gutter*2}\n                className={'flex justify-center select-none'}\n                pageNumber={this.state.pageNumber} />\n            </Document>\n            <div class=\"fixed top-0 left-0 right-0 flex items-center h-24 bg-gray-900\">\n                <div class=\"text-white px-8 gap-8 flex justify-center items-center w-full relative\">\n                    <div class={`justify-start items-center absolute left-10`}>\n                        <ContentButton\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.props.history.push(\"/\")\n                            }}\n                            direction=\"none\"\n                            className=\"justify-start bg-red hover:bg-blue-lighter\"\n                        >\n                            Выход\n                        </ContentButton>\n                    </div>\n                    \n                    <ContentButton\n                        disabled={this.state.current === this.state.list.length - 1}\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.previousEnty.call(this)\n                        }}\n                        direction=\"left\"\n                    >\n                    Предыдущий выпуск\n                    </ContentButton>\n\n                    <p class=\"text-3xl font-black\">\n                        {this.state.list[this.state.current].title}\n                    </p>\n\n                    <ContentButton\n                        disabled={this.state.current === 0}\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.nextEntry.call(this)\n                        }}\n                        direction=\"right\"\n                    >\n                    Следующий выпуск\n                    </ContentButton>\n\n                </div>\n            </div>\n\n            <div class=\"fixed bottom-0 left-0 right-0 flex items-center h-24 bg-gray-900\">\n                <div class=\"text-white px-8 gap-8 w-full flex justify-center items-center\">\n\n                    <ContentButton\n                        disabled={this.state.pageNumber <= 1}\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.previousPage.call(this)\n                        }}\n                        direction=\"left\"\n                    >\n                        Назад\n                    </ContentButton>\n\n                    <p class=\"text-3xl\">\n                    Страница {this.state.pageNumber || (this.state.numPages ? 1 : '--')} из {this.state.numPages || '--'}\n                    </p>\n\n                    <ContentButton\n                        disabled={this.state.pageNumber >= this.state.numPages}\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.nextPage.call(this)\n                        }}\n                        direction=\"right\"\n                    >\n                    Вперёд\n                    </ContentButton>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}","import logo from './logo.svg';\nimport MainPage from './components/MainPage/MainPage';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\nimport ServicesRoutes from './components/Services/Services';\nimport Forms from './components/Forms/UserForms';\nimport Maps from './components/Maps/Maps';\nimport News from './components/News/News';\nimport { Session } from './scripts/user/Session';\n\nfunction App() {\n  // Входим в систему как гость, если не находим сессии\n    if (typeof Session.getCurrent() === 'undefined' || Object.keys(Session.getCurrent()).length === 0) {\n        Session.startNew()\n    }\n\n    //console.log(Session.getCurrent())\n  \n    return (\n        <Router>\n        <Switch>\n        {/*<Route path=\"/services\" component={Services}/>*/}\n        <Route path=\"/forms\" render={(props) => <Forms {...props}/> } />\n        <Route path=\"/services\" render={(props) => <ServicesRoutes {...props}/> } />\n        <Route path=\"/maps\" render={(props) => <Maps {...props}/> } />\n        <Route path=\"/news\" render={(props) => <News {...props}/> } />\n        <Route path=\"/\" render={(props) => <MainPage {...props}/> } />    \n        <Redirect to=\"/\" />\n        </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n        <App />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}