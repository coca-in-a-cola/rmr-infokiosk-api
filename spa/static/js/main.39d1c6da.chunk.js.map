{"version":3,"sources":["logo.svg","assets/images/background-0.png","components/MainPage/Background.jsx","components/MainPage/ButtonContainer.jsx","components/MainPage/Logo.jsx","components/Buttons/MainButton.jsx","components/Forms/Login/AskLoginForm.jsx","scripts/helperFunctions/format.js","components/Forms/Login/InputPhoneForm.jsx","components/Forms/Login/ConfirmNumberForm.jsx","components/LoaderScreen.jsx","scripts/user/User.js","scripts/user/Session.js","scripts/constants/dummyConstants.js","scripts/api/fakeApi.js","scripts/reducer.js","components/Buttons/TimeoutButtonOutline.jsx","components/Forms/UserInfo.jsx","components/Buttons/SecondaryButton.jsx","components/Buttons/ContentButton.jsx","scripts/api/contentApi.js","components/FailReport.jsx","components/Toolbars/ToolbarSecondary.jsx","components/Menus/GoBackComponents.jsx","components/Menus/AutoMenu.jsx","components/MainPage/MainPage.jsx","components/Services/ServicesMenu.jsx","components/Services/Finance.jsx","components/Forms/BaseForm.jsx","components/Services/Services.jsx","components/Toolbars/ToolbarMain.jsx","components/SuccessReport.jsx","components/Forms/info/ServiceAfterSuccess.jsx","components/Forms/info/ServiceAfterFail.jsx","components/Forms/UserForms.jsx","components/Maps/MapDetail.jsx","components/Maps/Maps.jsx","components/News/News.jsx","App.js","reportWebVitals.js","index.js"],"names":["Background","className","src","this","props","url","alt","React","Component","ButtonContainer","children","Logo","viewBox","xmlns","id","fill","fill-rule","d","clip-rule","MainButton","text","icon","arrow","left","top","right","bottom","size","ParentTagName","link","Link","to","undefined","onClick","dangerouslySetInnerHTML","__html","direction","stroke","stroke-linecap","stroke-linejoin","stroke-width","defaultProps","AskLoginForm","location","search","substr","indexOf","length","class","format","value","pattern","i","v","toString","replace","_","InputPhoneForm","onPhoneChange","event","number","target","setState","phoneNumber","state","searchInput","focus","inputRef","inputEl","mask","maskChar","onChange","type","e","preventDefault","onSubmit","data","console","log","ConfirmNumberForm","numberMask","userRoles","defaultUser","name","roles","Set","User","overrides","Object","assign","result","lastName","firstName","middleName","array","split","keys","forEach","key","JSON","stringify","getInfo","current","defaultSession","user","validThrough","Date","authToken","refreshToken","Session","changes","import","export","JSONstring","parse","Cookies","set","expires","secure","get","status","ACTION","DUMMY_PHONE","DUMMY_TOKEN","inputNumber","session","Promise","resolve","reject","setTimeout","startNew","add","Math","random","confirmNumber","logout","requestService","action","a","getCurrent","reduce","sizes","height","width","border","padding","TimeoutButtonOutline","timer","timeout","onTimerTick","call","color","hoverText","contrastColor","hoverBg","Forms","loading","callback","setLoading","bind","updateSession","reducer","then","catch","has","getFullName","onLogout","SecondaryButton","description","ContentButton","disabled","getMaps","category","fetch","response","ok","json","error","FailReport","detail","ToolbarSecondary","buttons","map","button","index","ServicesGoBack","history","push","component","currentPath","pathname","lastIndexOf","getGoBackPath","switches","x","y","span","GoBackComponent","AutoMenu","prevProps","componentDidMount","menu","goBack","MainPage","backgroundImage","ServicesMenu","goBackText","BaseForm","for","serviceText","phone","ServicesRoutes","allowGuest","URLSearchParams","path","render","directions","ToolbarMain","n","ServiceAfterSuccess","onContinue","onExit","ServiceAfterFail","confirmNumberMask","onConfirmNumberChange","onConfirmNumberSubmit","success","fail","onSuccess","onFail","lifeReport","serviceId","deathReport","onPhoneSubmit","match","params","onServiceSubmit","MapDetail","imageList","images","allowRotate","doubleClickZoom","onClose","Maps","exact","News","numPages","pageNumber","window","innerWidth","innerHeight","list","changeEntry","offset","changePage","file","renderMode","onLoadSuccess","onDocumentLoadSuccess","gutter","previousEnty","title","nextEntry","previousPage","nextPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"iYAAe,I,2BCAA,MAA0B,yC,OCEpBA,E,4JACjB,WACE,OACE,sBAAKC,UAAU,wDAAf,UACI,qBAAKC,IAAKC,KAAKC,MAAMC,IAAKJ,UAAU,4DAA4DK,IAAI,gGACpG,qBAAKL,UAAU,8F,GALaM,IAAMC,WCAzBC,E,4JACjB,WACE,OACE,qBAAKR,UAAU,uBAAf,SACA,qBAAKA,UAAU,uEAAf,SACKE,KAAKC,MAAMM,iB,GALqBH,IAAMC,WCA9BG,E,4JACjB,WACE,OACE,qBAAKV,UAAY,sBAAjB,SACI,yBAAQA,UAAY,wEAApB,UACI,sBAAMA,UAAU,mBAAhB,gBACA,sBAAMA,UAAY,wBAAlB,SACA,qBAAKW,QAAQ,gBAAgBX,UAAY,cAAcY,MAAM,6BAA6BC,GAAG,iBAA7F,SACI,sBAAMb,UAAU,OAAOc,KAAK,UAAUC,YAAU,UAAUC,EAAE,ueAAueC,YAAU,gBAGjjB,sBAAKjB,UAAW,wBAAhB,UACI,sBAAMA,UAAU,GAAhB,SAAoB,uCACpB,oBAAIA,UAAU,qDAAd,gF,GAbcM,IAAMC,W,oFCKnBW,E,qQA2DF,CACX,GAAM,CACFC,KAAM,WACNC,KAAM,gBACNC,MAAO,aAEX,GAAM,CACFF,KAAM,WACNC,KAAM,gBACNC,MAAO,aAEX,GAAM,CACFF,KAAM,WACNC,KAAM,gBACNC,MAAO,gB,0DAIE,CACbC,KAAO,kBACPC,IAAM,kBACNC,MAAQ,qBACRC,OAAS,yB,6CAGb,WACI,MAAM,GAAN,OAAUvB,KAAKC,MAAMuB,Q,oBAGzB,WAAU,IAAD,OAECC,EAAgBzB,KAAKC,MAAMyB,KAAOC,IAAO,SACjD,OACE,eAACF,EAAD,CACA3B,UAAW,kIAEPE,KAAKC,MAAMH,UACf8B,GAAI5B,KAAKC,MAAMyB,KAAO1B,KAAKC,MAAMyB,UAAOG,EACxCC,QAAS9B,KAAKC,MAAMyB,UAAOG,EAAY7B,KAAKC,MAAM6B,QALlD,UAMI,sBAAKhC,UAAU,cAAf,UACM,WAAO,GAAI,EAAKG,MAAMiB,KACpB,OACA,qBAAKpB,UAAS,UACP,cAAI,GAAJ,GAAkB,EAAKG,MAAMuB,MAAMN,KAD5B,qCAGVa,wBAAyB,CAAEC,OAAQ,EAAK/B,MAAMiB,QALpD,GAUF,oBAAIpB,UAAS,UACN,YAAAE,KAAA,MAAkBA,KAAKC,MAAMuB,MAAMP,KAD7B,qCAAb,SAGKjB,KAAKC,MAAMM,cAIhBP,KAAKC,MAAMgC,UACf,qBAAKnC,UAAS,UACP,YAAAE,KAAA,MAAkBA,KAAKC,MAAMuB,MAAML,MAD5B,mFAIR,YAAAnB,KAAA,MAAoBA,KAAKC,MAAMgC,WAJvB,sBAAd,SAMI,qBAAKvB,MAAM,6BAA6BE,KAAK,OAAOH,QAAQ,YAAYyB,OAAO,eAA/E,SACI,sBAAMC,iBAAe,QAAQC,kBAAgB,QAAQC,eAAa,IAAIvB,EAAE,6BAG9Ee,S,GA/H0BzB,IAAMC,WAAzBW,EAmDVsB,aAAe,CAClBd,KAAM,KACNS,eAAWJ,EACXX,UAAMW,EACNtB,SAAU,wC,ICzDGgC,E,4JAEjB,WAIqBvC,KAAKC,MAAMuC,SAASC,OACpCC,OAAO1C,KAAKC,MAAMuC,SAASC,OAAOE,QAAQ,eAAiB,cAAcC,QAE1E,OACI,qBAAK9C,UAAU,4EAAf,SACI,sBAAK+C,MAAM,GAAX,UACA,qBAAK/C,UAAU,sCAAf,SACI,sBAAKY,MAAM,6BAA6BE,KAAK,eAAeiC,MAAM,4BAA4BpC,QAAQ,YAAtG,UACA,sBAAMK,EAAE,6YACR,sBAAMA,EAAE,oFAIZ,qBAAIhB,UAAU,kDAAd,mTAEI,uBACA,sBAAMA,UAAU,WAAhB,iK,GAtBsBM,IAAMC,W,yBCCjCyC,MANf,SAAgBC,EAAOC,GACnB,IAAIC,EAAI,EACJC,EAAIH,EAAMI,WACd,OAAOH,EAAQI,QAAQ,MAAM,SAAAC,GAAC,OAAIH,EAAED,SCInBK,E,kDAoBjB,WAAYrD,GAAQ,IAAD,8BACf,cAAMA,IAIVsD,cAAgB,SAACC,GACb,IAAIC,EAASD,EAAME,OAAOX,MAAMK,QAAQ,WAAY,IAEpD,EAAKO,SAAS,CACVC,YAAaH,KAPjB,EAAKI,MAAQ,CAACD,YAAa,cAFZ,E,qDAanB,WACI5D,KAAK8D,YAAYC,U,oBAGrB,WAAU,IAAD,OAML,OACI,qBAAKjE,UAAU,yCAAf,SACA,qBAAK+C,MAAM,SAAX,SAEA,uBAAM/C,UAAU,6CAAhB,UACI,qBAAK+C,MAAM,mFACX,oBAAI/C,UAAU,qDAAd,sHAGA,oBAAGA,UAAU,sCAAb,wXAC6E,uBAD7E,4PAIA,sBAAKA,UAAU,OAAf,UACA,sBAAKA,UAAU,+CAAf,UACI,8BAAK,cAAC,IAAD,CACLkE,SAAU,SAAAC,GAAO,OAAK,EAAKH,YAAcG,GACzCC,KAAK,qBACLC,SAAU,IAEVC,SAAUpE,KAAKuD,cAGfzD,UAAU,wKAEVa,GAAG,WAAW0D,KAAK,UAGnB,cAAC,EAAD,CACAvE,UAAU,+BAA+B0B,KAAK,KAAKS,UAAU,QAC7DH,QAAS,SAACwC,GACNA,EAAEC,iBACF,EAAKtE,MAAMuE,SAAS,CAACZ,YAAa,EAAKC,MAAMD,eAJjD,6EAUJ,oBAAG9D,UAAU,yCAAb,6DACoB,wC,GAlFQM,IAAMC,WAA7BiD,EAeVhB,aAAe,CAClBkC,SAAU,SAACC,KACXL,SAAU,SAACrB,EAAOmB,GAAR,OAAiBQ,QAAQC,IAAI5B,K,UCf1B6B,E,uKAuCjB,WACI5E,KAAK8D,YAAYC,U,oBAIrB,WAAU,IAAD,OAOL,OACI,qBAAKjE,UAAU,mDAAf,SACA,qBAAK+C,MAAM,UAAX,SAEA,uBAAM/C,UAAU,4DAAhB,UACI,qBAAK+C,MAAM,mFACX,oBAAI/C,UAAU,qDAAd,0JAGA,oBAAGA,UAAU,gDAAb,oIAC6BgD,EAAO9C,KAAKC,MAAM2D,YAAa,uBAD5D,qGAEI,uBAFJ,2LAKA,sBAAK9D,UAAU,YAAf,UAEA,cAAC,IAAD,CACAkE,SAAU,SAAAC,GAAO,OAAK,EAAKH,YAAcG,GACzCC,KAAMlE,KAAKC,MAAM4E,WACjBV,SAAU,IACVC,SAAU,SAACE,GAAD,OAAO,EAAKrE,MAAMmE,SAASE,IACrCxE,UAAU,oKAEVa,GAAG,WAAW0D,KAAK,SAInB,oBAAGvE,UAAU,yCAAb,6DACoB,wC,GA/EWM,IAAMC,WAAhCuE,EAiCVtC,aAAe,CAClB8B,SAAU,SAACrB,EAAOmB,GAAR,OAAiBQ,QAAQC,IAAI5B,IACvCa,YAAa,eACbiB,WAAY,S,IC3CCrE,E,4JACjB,WACE,OACE,sBAAKV,UAAU,kDAAf,UACI,qBAAKA,UAAU,iFAEf,qBAAKA,UAAW,0EAAhB,SACI,qBAAKW,QAAQ,gBAAgBX,UAAY,2BAA2BY,MAAM,6BAA6BC,GAAG,iBAA1G,SACI,sBAAMb,UAAU,OAAOc,KAAK,UAAUC,YAAU,UAAUC,EAAE,ueAAueC,YAAU,uB,GAR/hBX,IAAMC,W,iCCF3ByE,EACF,QADEA,EAEI,cAFJA,EAGC,WAIDC,EAAc,CACvBC,KAAM,iCACNpB,YAAa,eACbqB,MAAO,IAAIC,IAAI,CAACJ,KAGPK,EAAb,WAYI,aAA6B,IAAjBC,EAAgB,uDAAJ,GAOpB,OAPwB,oBACxBC,OAAOC,OAAOtF,KAAM+E,GACpBM,OAAOC,OAAOtF,KAAMoF,GAEQ,kBAAfpF,KAAKiF,OAAsBjF,KAAKiF,iBAAiBC,MAC1DlF,KAAKiF,MAAQ,IAAIC,IAAIlF,KAAKiF,QAEvBjF,KAnBf,+CAuBI,WACI,IAAMuF,EAAS,CACXC,SAAU,GACVC,UAAW,GACXC,WAAY,IAGZC,EAAQ3F,KAAKgF,KAAKY,MAAM,KAExB3C,EAAI,EAOR,OANAoC,OAAOQ,KAAKN,GAAQO,SAAQ,SAAAC,GACpB9C,EAAI0C,EAAM/C,SACd2C,EAAOQ,GAAOJ,EAAM1C,MAClBA,KAGCsC,IAvCf,oBA4CI,WACI,OAAOS,KAAKC,UAAW,CACnBjB,KAAMhF,KAAKgF,KACXpB,YAAa5D,KAAK4D,YAClBqB,MAAM,YAAKjF,KAAKiF,WAhD5B,mBAoDI,WAAuB,IAAjBG,EAAgB,uDAAJ,GACd,OAAO,IAAID,EAAKE,OAAOC,OAAOtF,KAAKkG,UAAWd,QArDtD,K,iBCVIe,EAAU,GAKDC,EAAiB,CAC1BC,KAAM,IAAIlB,EACVmB,aAAc,IAAIC,KAAK,wBACvBC,UAAW,GAGXC,aAAc,IAGLC,EAAb,6FACI,WAAiC,IAAjBtB,EAAgB,uDAAJ,GACxBe,EAAU,GAEVA,EAAUd,OAAOC,OAAOa,EAASC,GACjCD,EAAUd,OAAOC,OAAOa,EAASf,KALzC,mBASI,cATJ,kBAaI,WAA2B,IAAfuB,EAAc,uDAAJ,GAClBtB,OAAOC,OAAOa,EAASQ,KAd/B,wBAiBI,WAEI,OAAOD,EAAQE,OAAOF,EAAQG,YAnBtC,oBAsBI,WACI,OAAOb,KAAKC,UAAUE,KAvB9B,oBA0BI,SAAcW,GACV,OAAOd,KAAKe,MAAMD,GAAY,SAASf,EAAKhD,GACxC,MAAW,QAAPgD,EACO,IAAIZ,EAAKa,KAAKe,MAAMhE,IAGpB,gBAAPgD,EAA8B,IAAIQ,KAAKxD,GACpCA,OAjCnB,yBAsCI,WACIiE,IAAQC,IAAI,UAAWjB,KAAKC,UAAUE,GAAU,CAAEe,QAAS,EAAGC,QAAQ,MAvC9E,wBA2CI,WACI,OAAOnB,KAAKe,MAAOC,IAAQI,IAAI,gBA5CvC,KCPaC,EACA,UADAA,EAEH,OAFGA,EAGE,YAGFC,EACF,QADEA,EAED,SAFCA,EAGA,UAHAA,EAIG,kBChBVC,EAAc,eAGdC,EAAc,WAYPC,GAAc,SAACC,EAASjD,GACjC,OAAO,IAAIkD,SAAQ,SAASC,EAASC,GAE7BpD,EAAKb,cAAgB2D,EAErBO,YAAW,WACPpB,EAAQqB,SAAS,CACb1B,KAAM,IAAIlB,EAAJ,2BAAauC,EAAQrB,MAArB,IAA2BzC,YAAa2D,EAC1CtC,MAAOyC,EAAQrB,KAAKpB,MAAM+C,IAAIlD,QAGtC8C,EAAQP,KACO,IAAhBY,KAAKC,SAAkB,KAG1BJ,YAAW,WACPD,EAAOR,KACQ,IAAhBY,KAAKC,SAAkB,SAKzBC,GAAgB,SAACT,EAASjD,GACnC,OAAO,IAAIkD,SAAQ,SAASC,EAASC,GAE7BpD,EAAKb,cAAgB2D,GAvCJ,UAwCd9C,EAAK0D,cAERL,YAAW,WACPpB,EAAQqB,SAAS,CACb1B,KAAM,IAAIlB,EAAJ,2BAAauC,EAAQrB,MAArB,IAA2BrB,KA3C7B,iHA4CJC,MAAO,IAAIC,IAAI,CAACJ,EAAiBA,OAEjC0B,UAAWgB,IAGfI,EAAQP,KACO,IAAhBY,KAAKC,SAAkB,KAG1BJ,YAAW,WACPD,EAAOR,KACQ,IAAhBY,KAAKC,SAAkB,SAKzBE,GAAS,SAACV,GACnB,OAAO,IAAIC,SAAQ,SAASC,EAASC,GACjCC,YAAW,WACPpB,EAAQqB,WACRH,EAAQP,KACO,IAAhBY,KAAKC,SAAkB,SAIrBG,GAAiB,SAACX,GAE3B,OAAO,IAAIC,SAAQ,SAASC,EAASC,GAC7BH,EAAQlB,YAAcgB,EACtBM,YAAW,WACPF,EAAQP,KACO,IAAhBY,KAAKC,SAAkB,KAG1BJ,YAAW,WACPD,EAAOR,KACQ,IAAhBY,KAAKC,SAAkB,S,8CCvEtC,WAAsBI,GAAtB,SAAAC,EAAA,2DACYD,EAAOjE,KADnB,cAEaiD,EAFb,SAKaA,EALb,SAOaA,EAPb,SASaA,EATb,wBAGY5C,QAAQC,IAAI+B,EAAQ8B,cAHhC,kBAImBf,GAAYf,EAAQ8B,aAAcF,EAAO7D,OAJ5D,gCAMmB0D,GAAczB,EAAQ8B,aAAcF,EAAO7D,OAN9D,gCAQmB2D,GAAO1B,EAAQ8B,aAAcF,EAAO7D,OARvD,gCAUmB4D,GAAe3B,EAAQ8B,aAAcF,EAAO7D,OAV/D,gCAYmBkD,QAAQE,OAAOR,IAZlC,4C,sBAgBeoB,O,6CC5BTC,GAAQ,CACV,GAAM,CACFC,OAAQ,OACRC,MAAO,OACPC,OAAQ,WACRC,QAAS,OACT7H,KAAM,WAEV,GAAM,CACF0H,OAAQ,OACRC,MAAO,OACPC,OAAQ,WACRC,QAAS,QACT7H,KAAM,YAKO8H,G,kDA8CjB,WAAY9I,GAAQ,IAAD,8BACf,cAAMA,IACD4D,MAAQ,CAACmF,MAAO/I,EAAMgJ,SAFZ,E,qDAKnB,WACQjJ,KAAK6D,MAAMmF,OACXhJ,KAAKkJ,YAAYC,KAAKnJ,Q,yBAG9B,WAAe,IAAD,OACNA,KAAK6D,MAAMmF,OAAS,EACpBhJ,KAAKC,MAAM6B,QAAQ,CAACyC,eAAgB,eAGpCuD,YAAW,WACP,EAAKnE,SAAS,CAACqF,MAAO,EAAKnF,MAAMmF,MAAQ,GACrC,EAAKE,YAAYC,KAAK,MAC3B,O,oBAIX,WAAU,IAAD,OACC3H,EAAOkH,GAAM1I,KAAKC,MAAMuB,OAASkH,GAAK,GACtCU,EAAQ,CACVnI,KAAK,QAAD,OAAUjB,KAAKC,MAAMmJ,OACzBP,OAAO,UAAD,OAAY7I,KAAKC,MAAMmJ,OAC7BC,UAAU,cAAD,OAAgBrJ,KAAKC,MAAMqJ,eACpCC,QAAQ,YAAD,OAAcvJ,KAAKC,MAAMmJ,QAkBpC,OACA,yBAAQvG,MAAM,cAAcf,QAAS9B,KAAKC,MAAM6B,QAAhD,UACI,sBAAMe,MAAK,wBACTrB,EAAKmH,OADI,wDAGTS,EAAMnI,KAHG,0FAMTmI,EAAMP,OANG,yBAOTrH,EAAKsH,QAPI,yBAQTtH,EAAKqH,OARI,yBASTO,EAAMP,OATG,yBAUTO,EAAMG,QAVG,yBAWTH,EAAMC,UAXG,wFAcT7H,EAAKP,MAdP,SAeKjB,KAAKC,MAAMM,WAEd,WACE,GAAkC,qBAAvB,EAAKN,MAAMgJ,QAClB,OAAO,sBAAMpG,MAAK,gCAChBrB,EAAKmH,OADW,iCAEhBnH,EAAKoH,MAFW,0EAIXQ,EAAMnI,KAJK,mFAMhBO,EAAKqH,OANW,4EAQhBO,EAAMP,OARU,YAQAO,EAAMG,QARN,iCAShBH,EAAMC,UATU,+GAYhB7H,EAAKP,KAZW,0BAAX,SAcE,EAAK4C,MAAMmF,QAhB1B,U,GA/GoC5I,IAAMC,WAAnC0I,GAsCVzG,aAAe,CAClBR,QAAS,aACTmH,aAASpH,EACTL,KAAM,KACN4H,MAAO,MACPE,cAAe,SCxCvB,IAEqBE,G,kDAKjB,WAAYvJ,GAAQ,IAAD,8BACf,cAAMA,IACD4D,MAAQ,CAAC4F,SAAS,EAAMT,MATpB,IAOM,E,qDAKnB,WACIhJ,KAAK2D,SAAS,CAAC+D,QAAShB,EAAQ8B,aAAciB,SAAS,M,gCAK3D,c,wBAIA,SAAW1G,GACP/C,KAAK2D,SAAS,CAAC8F,QAAS1G,M,2BAG5B,WAAoC,IAAtB2G,EAAqB,uDAAV,aACrB1J,KAAK2D,SAAS,CAAC+D,QAAShB,EAAQ8B,cAAekB,K,sBAInD,SAASjF,GACL,IAAIkF,EAAa3J,KAAK2J,WAAWC,KAAK5J,MACtC6J,EAAgB7J,KAAK6J,cAAcD,KAAK5J,MAIxC,OAFA2J,GAAW,GAEJ,IAAIhC,SAAQ,SAASC,EAASC,GACjCiC,GAAQ,CAACzF,KAAMiD,EAAe7C,KAAMA,IAAOsF,MAAK,SAACxE,GAC7CsE,EAAcF,GAAW,OAI5BK,OAAM,SAAAzE,GACHsE,EAAcF,GAAW,Y,oBAMrC,WAAU,IAAD,OACL,GAAI3J,KAAK6D,MAAM4F,QACX,OAAO,cAAC,EAAD,IAEP,IAAMpD,EAAOrG,KAAK6D,MAAM6D,QAAQrB,KAIhC,OAAIA,EAAKpB,MAAMgF,IAAInF,GAEX,qBAAKjC,MAAM,qFAAX,SACA,sBAAKA,MAAM,8CAAX,UACA,qBAAKA,MAAM,uCAAX,SACI,qBAAKnC,MAAM,6BAA6BmC,MAAM,YAAYjC,KAAK,OAAOH,QAAQ,YAAYyB,OAAO,eAAjG,SACI,sBAAMC,iBAAe,QAAQC,kBAAgB,QAAQC,eAAa,IAAIvB,EAAE,4EAGhF,qBAAK+B,MAAM,gBAAX,SACA,qBAAKA,MAAM,yCAAX,SACKwD,EAAK6D,cAAc1E,SAAW,IAAMa,EAAK6D,cAAczE,cAW5D,cAAC,GAAD,CAAsBwD,QAAS,GAAInH,QAAS,SAACwC,GAAO,EAAK6F,SAAShB,KAAK,IAAvE,iDAMI,O,GApFW/I,IAAMC,W,gCCnBpB+J,G,sQAoDA,CACbhJ,KAAO,kBACPE,MAAQ,wB,4CAGZ,WACE,IAAMG,EAAgBzB,KAAKC,MAAMyB,KAAOC,IAAO,SAC/C,OACE,cAACF,EAAD,CAAe3B,UACX,UAA4B,SAAzBE,KAAKC,MAAMgC,UAAuB,mBAAqB,mBAA1D,2CAC6BjC,KAAKC,MAAMH,UAC5CgC,QAAS9B,KAAKC,MAAM6B,QACpBF,GAAI5B,KAAKC,MAAMyB,KAJf,SAOA,sBAAK5B,UAAU,iGAAf,UAEI,sBAAKA,UAAS,wBACa,SAAzBE,KAAKC,MAAMgC,UAAuB,QAAU,OADhC,qCAAd,UAGA,oBAAInC,UAAS,+CAEkB,SAAzBE,KAAKC,MAAMgC,UAAuB,mBAAqB,YAF7D,SAGKjC,KAAKC,MAAMM,WAEhB,mBAAGsC,MAAM,qBAAT,SACK7C,KAAKC,MAAMoK,iBAGhB,qBAAKvK,UAAU,MAAf,SACA,qBAAKA,UAAS,wCAEiB,SAAzBE,KAAKC,MAAMgC,UAAuB,WAAa,yBACjDF,wBAAyB,CAAEC,OAAQhC,KAAKC,MAAMiB,UAIlD,qBAAKpB,UAAS,4HAKR,YAAAE,KAAA,QAAoBA,KAAKC,MAAMgC,WALvB,sBAAd,SAOI,qBAAKvB,MAAM,6BAA6BE,KAAK,OAAOH,QAAQ,YAAYyB,OAAO,eAA/E,SACI,sBAAMC,iBAAe,QAAQC,kBAAgB,QAAQC,eAAa,IAAIvB,EAAE,iC,GAjG/CV,IAAMC,WAA9B+J,GA+CV9H,aAAe,CAClBL,UAAW,OACXH,QAAS,SAACwC,M,ICrDGgG,G,4JA2CjB,WACI,OAAQtK,KAAKC,MAAMgC,WACf,IAAK,OACD,OACA,wBAAQoC,KAAK,SACbvC,QAAS9B,KAAKC,MAAM6B,QACpByI,SAAUvK,KAAKC,MAAMsK,SACrB1H,MAAK,0KAGmB7C,KAAKC,MAAMH,WANnC,SAOA,sBAAK+C,MAAM,0CAAX,UACI,qBAAKA,MAAM,WAAWjC,KAAK,eAAeH,QAAQ,YAAYC,MAAM,6BAApE,SACA,sBAAMG,YAAU,UAAUC,EAAE,wIAAwIC,YAAU,cAE9K,mBAAG8B,MAAM,oCAAT,SAA8C7C,KAAKC,MAAMM,gBAKjE,IAAK,QACD,OACA,wBAAQ8D,KAAK,SACbvC,QAAS9B,KAAKC,MAAM6B,QACpByI,SAAUvK,KAAKC,MAAMsK,SACrB1H,MAAK,0KAGmB7C,KAAKC,MAAMH,WANnC,SAOI,sBAAK+C,MAAM,0CAAX,UACA,mBAAGA,MAAM,oCAAT,SAA8C7C,KAAKC,MAAMM,WACzD,qBAAKsC,MAAM,WAAWjC,KAAK,eAAeH,QAAQ,YAAYC,MAAM,6BAApE,SACI,sBAAMG,YAAU,UAAUC,EAAE,2IAA2IC,YAAU,mBAM7L,QACI,OACI,wBAAQsD,KAAK,SACbvC,QAAS9B,KAAKC,MAAM6B,QACpByI,SAAUvK,KAAKC,MAAMsK,SACrB1H,MAAK,oLAGmB7C,KAAKC,MAAMH,WANnC,SAOI,qBAAK+C,MAAM,0CAAX,SACA,mBAAGA,MAAM,oCAAT,SAA8C7C,KAAKC,MAAMM,oB,GA3FtCH,IAAMC,WAA5BiK,GAoCVhI,aAAe,CAClBd,KAAM,KACNS,UAAW,OACX1B,SAAU,uCACVgK,UAAU,GC3CX,IAuBMC,GAAU,SAACC,GACpB,OAAO,IAAI9C,SAAQ,SAASC,EAASC,GACjC6C,MAAM,aAAD,OAAcD,IAClBV,MAAK,SAACY,GACCA,EAASC,GAGbD,EAASE,OACJd,MAAK,SAAAc,GACFjD,EAAQiD,EAAI,cAKhBhD,EAAO,eAAiB8C,EAAStD,WAGxC2C,OAAM,SAACc,GACJjD,EAAO,gCCvCEkD,G,4JACjB,WACI,OACI,sBAAKlI,MAAM,kEAAX,UACA,qBAAKA,MAAM,QAAX,SACI,qBAAKA,MAAM,oDAAX,SACI,qBAAKnC,MAAM,6BAA6BE,KAAK,OAAOH,QAAQ,YAAYyB,OAAO,eAA/E,SACA,sBAAMC,iBAAe,QAAQC,kBAAgB,QAAQC,eAAa,IAAIvB,EAAE,4DAIhF,sBAAK+B,MAAM,oCAAX,UACI,oBAAIA,MAAM,wBAAV,SAAmC7C,KAAKC,MAAMM,WAC9C,mBAAGsC,MAAM,oCAAT,SAA8C7C,KAAKC,MAAM+K,SACzD,mBAAGnI,MAAM,wBAAT,oH,GAdwBzC,IAAMC,WCKzB4K,G,4JA2BjB,WAAU,IAAD,OAEDC,GADIlL,KAAKC,MAAMiL,QAAQtI,OACb5C,KAAKC,MAAMiL,SAEzB,OACI,qBAAKpL,UAAS,kDAAd,SAEIoL,EAAQC,KAAI,SAACC,EAAOC,GAChB,OACA,qBAAKvL,UAAU,OAAf,SACI,cAAC,GAAD,CACA0B,KAAM,EAAKvB,MAAMuB,KACjByH,QAASmC,EAAOnC,QAChBnH,QAASsJ,EAAOtJ,QAChBsH,MAAOgC,EAAOhC,MAJd,SAKKgC,EAAOnK,kB,GA1CUb,IAAMC,WAA/B4K,GAsBV3I,aAAe,CAClB4I,QAAS,GACT1J,KAAM,MC5Bd,IASa8J,GAAb,4JACI,WAAU,IAAD,OACL,OACA,qBAAKzI,MAAM,WAAX,SACI,cAAC,GAAD,CAAkBrB,KAAK,KAAK0J,QAAS,CACjC,CACIjK,KAAM,iCACNa,QAAU,SAACwC,GAAO,IAAD,EACbA,EAAEC,iBACF,YAAKtE,MAAMsL,eAAX,SAAoBC,KAlBtB,SAACC,GACnB,IAAIC,EAAcD,EAAUxL,MAAMuC,SAASmJ,SAK3C,OAHID,EAAYE,YAAY,OAASF,EAAY9I,OAAS,IACtD8I,EAAcA,EAAYhJ,OAAO,EAAGgJ,EAAY9I,OAAS,IAEtD8I,EAAYhJ,OAAO,EAAGgJ,EAAYE,YAAY,KAAO,GAYfC,CAAc,KACxCjC,KAAK5J,gBAV5B,GAAoCI,IAAMC,WCHpCyL,GAAW,CACb,KAAQ,CACJzL,UAAWW,EACXlB,UAAW,SAACuL,GACR,IAAM3C,EAAQ,CAAC,CAACqD,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,IAC/CC,EAAOvD,EAAM2C,EAAQ3C,EAAM9F,QAOjC,MAAO,2DACOqJ,EAAKF,EADZ,qBAC0BE,EAAKD,IAE1C/J,UAAW,SAACoJ,KACZ7J,KAAM,SAAC6J,GACH,IAAMvK,EAAI,CAAC,KAAM,KAAM,MACvB,OAAOA,EAAEuK,EAAQvK,EAAE8B,SAEvBsJ,qBAAiBrK,GAErB,UAAa,CACTxB,UAAW+J,GACXtK,UAAW,iBAAM,cACjBmC,UAAW,SAACoJ,GAAD,OAAYA,EAAQ,GAAK,EAAK,OAAS,SAClDa,gBAAiBZ,KAIJa,G,kDAEjB,WAAYlM,GAAQ,IAAD,8BACf,cAAMA,IACD4D,MAAQ,CAAC4F,SAAS,GAFR,E,sDAKnB,SAAmB2C,GACXA,EAAUlM,KAAOF,KAAKC,MAAMC,KAC5BF,KAAKqM,sB,+BAIb,WAAqB,IJLDC,EIKA,QJLAA,EIMRtM,KAAKC,MAAMC,IJLhB,IAAIyH,SAAQ,SAASC,EAASC,GACjC6C,MAAM,aAAD,OAAc4B,IAClBvC,MAAK,SAACY,GACCA,EAASC,GAGbD,EAASE,OACJd,MAAK,SAAAc,GACFjD,EAAQiD,MAKZhD,EAAO,eAAiB8C,EAAStD,WAGxC2C,OAAM,SAACc,GACJjD,EAAO,gCIZakC,KAAM,SAAAxE,GAC1Bb,QAAQC,IAAIY,GACZ,EAAK5B,SAAL,aAAgB8F,SAAS,GAAUlE,KACpCqE,KAAK5J,OACPgK,MAAO,SAAAc,GACJ,EAAKnH,SAAS,CAAC8F,SAAS,EAAOqB,OAAO,KACvClB,KAAK5J,S,oBAGZ,WACI,IAAMsE,EAAIwH,GAAS9L,KAAK6D,MAAMQ,MAE9B,OACIrE,KAAK6D,MAAM4F,QACX,wGACEzJ,KAAK6D,MAAMiH,MACb,cAAC,GAAD,wMAGE,qCAEF9K,KAAK6D,MAAMqH,QAAQC,KAAI,SAACC,EAAQC,GAAT,iBACnB,cAAC/G,EAAEjE,UAAH,CACAP,UAAS,UAAEwE,EAAExE,iBAAJ,aAAE,OAAAwE,EAAc+G,GACzB7J,KAAI,UAAE8C,EAAE9C,YAAJ,aAAE,OAAA8C,EAAS+G,GACfpJ,UAAS,UAAEqC,EAAErC,iBAAJ,aAAE,OAAAqC,EAAc+G,GACzBL,OAAQI,EAAOJ,OACf9J,KAAMkK,EAAOlK,KACbQ,KAAM0J,EAAO1J,KACbI,QAASsJ,EAAO1J,UAAMG,EAAYuJ,EAAOtJ,QAPzC,SASKsJ,EAAOnK,UAKZjB,KAAK6D,MAAM0I,QAAUjI,EAAE4H,gBACnB,cAAC5H,EAAE4H,gBAAH,eAAuBlM,KAAKC,QAC9B,Y,GApDoBG,IAAMC,WC9BvBmM,G,kDACjB,WAAYvM,GAAQ,IAAD,8BACf,cAAMA,IACD4D,MAAQ,GAFE,E,0CAKnB,WACE,OACA,gCAGE,cAAC,EAAD,CAAY3D,IAAKuM,IAEjB,sBAAK3M,UAAU,yCAAf,UAEI,cAAC,EAAD,IAGA,cAAC,GAAD,IAGA,cAAC,EAAD,UACI,cAAC,GAAD,CAAUI,IAAI,iB,GAtBQE,IAAMC,W,QCJvBqM,G,mKA8BjB,WACI,IAAIhB,EAAc1L,KAAKC,MAAMuC,SAASmJ,SAKtC,OAHID,EAAYE,YAAY,OAASF,EAAY9I,OAAS,IACtD8I,EAAcA,EAAYhJ,OAAO,EAAGgJ,EAAY9I,OAAS,IAEtD8I,EAAYhJ,OAAO,EAAGgJ,EAAYE,YAAY,KAAO,K,oBAGhE,WAAU,IAAD,OACDV,EAAO,YAAOlL,KAAKC,MAAMiL,SAmB/B,OACA,8BACE,sBAAKpL,UAAU,gCAAf,UAGI,qBAAKA,UAAU,oCAAf,SAEQoL,EAAQC,KAAI,SAACC,EAAOC,GAChB,OACI,cAAC,GAAD,CAAiBvL,UAAU,aAAamC,UAAWoJ,EAAQ,IAAM,EAAI,OAAS,QAC9EnK,KAAMkK,EAAOlK,KACbQ,KAAM0J,EAAO1J,KACb2I,YAAae,EAAOf,YAHpB,SAKKe,EAAOnK,YAM1B,WACE,GAAI,EAAKhB,MAAMsM,OACX,OACI,qBAAK1J,MAAM,OAAX,SACI,cAAC,GAAD,CAAkBrB,KAAK,KAAK0J,QAAS,CACjC,CACIjK,KAAM,iCACNa,QAAU,SAACwC,GACPA,EAAEC,iBACF,EAAKtE,MAAMsL,QAAQC,KAAK,EAAKK,kBAC9BjC,KAAK,SAV9B,Y,GA/E4BxJ,IAAMC,WAA3BqM,GAwBVpK,aAAe,CAClBiK,QAAQ,EACRI,WAAY,iCACZzB,QAAS,ICtBoB9K,IAAMC,U,ICGtBuM,G,4JA6BjB,WACI,OACI,sBAAK/J,MAAM,2BAAX,UACA,uBAAMA,MAAM,gEAAZ,UACA,qBAAKA,MAAM,mFAEP,sBAAKA,MAAM,OAAX,UACA,uBAAOA,MAAM,kDAAkDgK,IAAI,UAAnE,kDAGA,uBACAtC,UAAQ,EACR1H,MAAM,kJAENlC,GAAG,UAAU0D,KAAK,OAAOtB,MAAO/C,KAAKC,MAAM6M,iBAG3C,sBAAKjK,MAAM,OAAX,UACA,uBAAOA,MAAM,kDAAkDgK,IAAI,OAAnE,gCAGA,uBACAtC,UAAQ,EACR1H,MAAM,kJAENlC,GAAG,OAAO0D,KAAK,OAAOtB,MAAO/C,KAAKC,MAAM+E,UAGxC,sBAAKnC,MAAM,OAAX,UACA,uBAAOA,MAAM,kDAAkDgK,IAAI,QAAnE,yGAGA,uBACAtC,UAAQ,EACR1H,MAAM,kJAENlC,GAAG,QAAQ0D,KAAK,OAAOtB,MAAOD,EAAO9C,KAAKC,MAAM8M,MAAO,2BAIvD,qBAAKlK,MAAM,oCAAX,SACA,cAAC,EAAD,CAAY/C,UAAU,wBAAwBmC,UAAU,QAAQT,KAAK,KAAKM,QAAS9B,KAAKC,MAAMuE,SAA9F,qFAWJ,mBAAG3B,MAAM,yCAAT,oE,GAjF0BzC,IAAMC,WAAvBuM,GAwBVtK,aAAe,G,ICpBL0K,G,kDAEjB,WAAY/M,GAAQ,IAAD,8BACf,cAAMA,IACD4D,MAAQ,CAAC4F,SAAS,EAAMvJ,IAAKD,EAAMuC,SAASmJ,UAFlC,E,qDAKnB,WAAqB,IAAD,OACVlJ,EAASzC,KAAKC,MAAMuC,SAASC,OACnCzC,KAAKiN,WAA6D,SAA9C,IAAIC,gBAAgBzK,GAAQ2E,IAAI,WAAyB,EAE7EpH,KAAK2D,SAAS,CAAC+D,QAAShB,EAAQ8B,aAAciB,SAAS,IAAQ,WACtD,EAAK5F,MAAM6D,QAAQrB,KAAKpB,MAAMgF,IAAInF,IAAwB,EAAKmI,YAChE,EAAKhN,MAAMsL,QAAQC,KAAK,qE,gCAKpC,SAAmBY,GACXpM,KAAKC,MAAMuC,SAASmJ,UAAYS,EAAU5J,SAASmJ,UACnD3L,KAAK2D,SAAS,CAACzD,IAAKF,KAAKC,MAAMuC,SAASmJ,a,oBAIhD,WAAU,IAAD,OAEL,OACI,eAAC,KAAD,WAGA,cAAC,KAAD,CAAOwB,KAAK,YAAYC,OAAQ,SAACnN,GAAD,OAC5B,mCACA,sBAAKH,UAAU,gCAAf,UAGK4E,QAAQC,IAAI,EAAKd,MAAM3D,KACxB,qBAAKJ,UAAU,oCAAf,SACA,cAAC,GAAD,aAAUI,IAAK,EAAK2D,MAAM3D,KAASD,cAM3C,cAAC,KAAD,CAAU2B,GAAG,a,GA3CmBxB,IAAMC,WCb5CgN,GAAa,CAAC,OAAQ,SAAU,MAAO,SAExBC,G,4JAoBjB,WACI,IAAIC,EAAIvN,KAAKC,MAAMiL,QAAQtI,OACvBsI,EAAUlL,KAAKC,MAAMiL,QAEzB,OACI,qBAAKpL,UAAS,8BAAyByN,EAAI,EAAIA,EAAI,EAArC,6DAAd,SAEIrC,EAAQC,KAAI,SAACC,EAAOC,GAChB,OAAO,cAAC,EAAD,CAAYvL,UAAU,qDAC7B0B,KAAK,KACLS,UAAiB,IAANsL,EACLF,GAAW,GACXhC,IAAUkC,EAAI,EACVF,GAAWA,GAAWzK,OAAS,GAC/ByK,GAAWhC,EAAQgC,GAAWzK,QACxCd,QAASsJ,EAAOtJ,QAPT,SAQFsJ,EAAOnK,gB,GApCSb,IAAMC,WAA1BiN,GAgBVhL,aAAe,CAClB4I,QAAS,I,ICrBIH,G,4JACjB,WACI,OACI,sBAAKlI,MAAM,wEAAX,UACA,qBAAKA,MAAM,QAAX,SACI,qBAAKA,MAAM,oDAAX,SACI,sBAAKnC,MAAM,6BAA6BD,QAAQ,YAAYG,KAAK,UAAjE,UACA,sBAAME,EAAE,gBAAgBF,KAAK,SAC7B,sBAAME,EAAE,8DAIhB,sBAAK+B,MAAM,oCAAX,UACI,oBAAIA,MAAM,wBAAV,SAAmC7C,KAAKC,MAAMM,WAC9C,mBAAGsC,MAAM,oCAAT,SAA8C7C,KAAKC,MAAM+K,mB,GAdjC5K,IAAMC,WCKzBmN,G,4JAkCjB,WAAU,IAAD,OACL,OACI,sBAAK3K,MAAM,0BAAX,UACI,eAAC,GAAD,CAAemI,OAAM,oZAEnBlI,EAAO9C,KAAKC,MAAMoG,KAAKzC,YAAa,wBAFtC,iKAGgC,uBAHhC,IAIM5D,KAAKC,MAAM6M,YAJjB,KAI+B,uBAJ/B,mCAKY,IAAM9M,KAAKC,MAAMoG,KAAK6D,cAAczE,UAC3C,IAAMzF,KAAKC,MAAMoG,KAAK6D,cAAc1E,YAEzC,qBAAK3C,MAAM,yBAAX,SACI,cAAC,GAAD,CAAkBqI,QAAS,CACvB,CACIjK,KAAM,mFAAoBjB,KAAKC,MAAMoG,KAAK6D,cAAczE,UACxD3D,QAAS,SAACwC,GAAD,OAAO,EAAKrE,MAAMwN,cAC3BrE,MAAO,eAEX,CACInI,KAAM,wFACNa,QAAS,SAACwC,GAAD,OAAO,EAAKrE,MAAMyN,UAC3BzE,QAAS,gB,GAvDY7I,IAAMC,WAAlCmN,GA8BVlL,aAAe,G,IC9BLqL,G,4JAkCjB,WAAU,IAAD,OACL,OACI,sBAAK9K,MAAM,0BAAX,UACI,eAAC,GAAD,yKACkC,uBADlC,IAEM7C,KAAKC,MAAM6M,YAFjB,KAE+B,uBAF/B,mCAGY,IAAM9M,KAAKC,MAAMoG,KAAK6D,cAAczE,UAC3C,IAAMzF,KAAKC,MAAMoG,KAAK6D,cAAc1E,YAEzC,qBAAK3C,MAAM,yBAAX,SACI,cAAC,GAAD,CAAkBqI,QAAS,CACvB,CACIjK,KAAM,2GACNa,QAAS,SAACwC,GAAD,OAAO,EAAKrE,MAAMwN,cAC3BrE,MAAO,eAEX,CACInI,KAAM,yFACNa,QAAS,SAACwC,GAAD,OAAO,EAAKrE,MAAMyN,UAC3BzE,QAAS,gB,GArDS7I,IAAMC,WAA/BsN,GA8BVrL,aAAe,GCL1B,IAAMsL,GAAoB,QACLpE,G,kDAIjB,WAAYvJ,GAAQ,IAAD,8BACf,cAAMA,IA6DV4N,sBAAwB,SAACrK,GACrB,IAAI2E,EAAgB3E,EAAME,OAAOX,MAAMK,QAAQ,WAAY,IAE3D,EAAKO,SAAS,CACVwE,cAAeA,IAGnBzD,QAAQC,IAAIwD,GAERA,EAAcvF,SAAWgL,GAAkBhL,QAC3C,EAAKkL,sBAAsB,CAAClK,YAAa,EAAKC,MAAM6D,QAAQrB,KAAKzC,YAAauE,cAAeA,KAtEjG,EAAKtE,MAAQ,CAAC4F,SAAS,GAFR,E,qDAKnB,WAAqB,IAAD,OAChBzJ,KAAK2D,SAAS,CAAC+D,QAAShB,EAAQ8B,aAAciB,SAAS,IAEvD,IAAMhH,EAASzC,KAAKC,MAAMuC,SAASC,OAC7BsL,EAAU,IAAIb,gBAAgBzK,GAAQ2E,IAAI,YAAc,IACxD4G,EAAO,IAAId,gBAAgBzK,GAAQ2E,IAAI,SAAW,IAExDpH,KAAKiO,UAAY,SAACvE,GACd,EAAKzJ,MAAMsL,QAAQC,KAAKuC,GAChB,OAARrE,QAAQ,IAARA,QAGJ1J,KAAKkO,OAAS,SAACxE,GACX,EAAKzJ,MAAMsL,QAAQC,KAAKwC,GAChB,OAARtE,QAAQ,IAARA,U,gCAQR,c,wBAIA,SAAW3G,EAAO2G,GACd1J,KAAK2D,SAAS,CAAC8F,QAAS1G,GAAxB,OAAgC2G,QAAhC,IAAgCA,OAAhC,EAAgCA,O,2BAGpC,SAAcnE,GAA8B,IAAtBmE,EAAqB,uDAAV,aAC7B1J,KAAK2D,SAAS,CAAC+D,QAAShB,EAAQ8B,aAAcjD,OAAQA,GAASmE,K,2BAGnE,SAAcjF,GACV,IAAIkF,EAAa3J,KAAK2J,WAAWC,KAAK5J,MACtC6J,EAAgB7J,KAAK6J,cAAcD,KAAK5J,MAIxC,OAFA2J,GAAW,GAEJ,IAAIhC,SAAQ,SAASC,EAASC,GACjCiC,GAAQ,CAACzF,KAAMiD,EAAc7C,KAAMA,IAAOsF,MAAK,SAACxE,GAC5CsE,OAAchI,EAAW8H,GAAW,EAAO/B,EAAQrC,QAItDyE,OAAM,SAAAzE,GACHsE,EAAc,cAAC,GAAD,+IAECF,GAAW,EAAO9B,EAAOtC,a,mCAsBpD,SAAsBd,GAClB,IAAIkF,EAAa3J,KAAK2J,WAAWC,KAAK5J,MACtC6J,EAAgB7J,KAAK6J,cAAcD,KAAK5J,MAEpCiO,EAAYjO,KAAKiO,UAAUrE,KAAK5J,MACvBA,KAAKkO,OAAOtE,KAAK5J,MAI9B,OAFA2J,GAAW,GAEJ,IAAIhC,SAAQ,SAASC,EAASC,GACjCiC,GAAQ,CAACzF,KAAMiD,EAAgB7C,KAAMA,IAAOsF,MAAK,SAACxE,GAC9CsE,OAAchI,EAAW8H,GAAW,EAAO/B,EAAQrC,KAEnD0I,IACArG,EAAQrC,MAGXyE,OAAM,SAAAzE,GACHsE,EAAc,cAAC,GAAD,kNAEKF,GAAW,EAAO9B,EAAOtC,KAE5CsC,EAAOtC,W,sBAKnB,SAASd,GACL,IAAIkF,EAAa3J,KAAK2J,WAAWC,KAAK5J,MACtC6J,EAAgB7J,KAAK6J,cAAcD,KAAK5J,MAIxC,OAFA2J,GAAW,GAEJ,IAAIhC,SAAQ,SAASC,EAASC,GACjCiC,GAAQ,CAACzF,KAAMiD,EAAe7C,KAAMA,IAAOsF,MAAK,SAACxE,GAC7CsE,OAAchI,EAAW8H,GAAW,EAAO/B,EAAQrC,QAGtDyE,OAAM,SAAAzE,GACHsE,EAAc,cAAC,GAAD,0GACTF,GAAW,EAAO9B,EAAOtC,a,6BAK1C,SAAgBd,GACZ,IAAMkF,EAAa3J,KAAK2J,WAAWC,KAAK5J,MACxC6J,EAAgB7J,KAAK6J,cAAcD,KAAK5J,MAElCiO,EAAYjO,KAAKiO,UAAUrE,KAAK5J,MACtCkO,EAASlO,KAAKkO,OAAOtE,KAAK5J,MAC1BmK,EAAWnK,KAAKmK,SAASP,KAAK5J,MAGxBmO,EAAa,cAAC,GAAD,CACf9H,KAAMrG,KAAK6D,MAAM6D,QAAQrB,KACzByG,YAAarI,EAAK2J,UAClBX,WAAc,SAACnJ,GAAO2J,KACtBP,OAAU,WACOvD,IACNJ,KAAKjC,WAAWmG,IAAa,SAMtCI,EAAc,cAAC,GAAD,CAChBhI,KAAMrG,KAAK6D,MAAM6D,QAAQrB,KACzByG,YAAarI,EAAK2J,UAClBX,WAAc,SAACnJ,GAAOuF,OAAchI,EAAW8H,GAAW,KAC1D+D,OAAU,SAACpJ,GACP4J,OAOR,OAFAvE,GAAW,GAEJ,IAAIhC,SAAQ,SAASC,EAASC,GACjCiC,GAAQ,CAACzF,KAAMiD,EAAmB7C,KAAMA,IAAOsF,MAAK,SAACxE,GACjDsE,EAAcsE,EAAYxE,GAAW,OAIxCK,OAAM,SAAAc,GACHjB,EAAcwE,EAAa1E,GAAW,Y,oBAOlD,WAAU,IAAD,OAGL,GAAI3J,KAAK6D,MAAM4F,QACX,OAAO,cAAC,EAAD,IAEP,IAAMpD,EAAOrG,KAAK6D,MAAM6D,QAAQrB,KAGpC,OACI,eAAC,KAAD,WACA,cAAC,KAAD,CAAO8G,KAAK,mBACZC,OAAQ,SAACnN,GAAD,OACR,sBAAKH,UAAU,kDAAf,UACA,cAAC,EAAD,eAAkBG,IAClB,cAAC,GAAD,CAAaiL,QAAS,CAClB,CACIjK,KAAM,iHACNa,QAAS,SAACwC,GACNA,EAAEC,iBACF,EAAK2J,OAAO/E,KAAK,KAGzB,CACIlI,KAAM,mFACNa,QAAS,SAACwC,GACNA,EAAEC,iBACF,WAAC,OAAM,EAAKtE,MAAMsL,QAAQC,KAAK,iBAAiBrC,KAAK,cAQjE,cAAC,KAAD,CAAOgE,KAAK,eAAeC,OAAQ,SAACnN,GAChC,OAAIoG,EAAKpB,MAAMgF,IAAInF,GAEf,sBAAKhF,UAAU,mDAAf,UACE,WACE,GAAI,EAAK+D,MAAM0B,OACX,OAAO,oBAAIzF,UAAU,yBAAd,SAAwC,EAAK+D,MAAM0B,SAFhE,GAMF,cAAC,EAAD,aAAa3B,YAAayC,EAAKzC,YAC/BQ,SAAU,EAAKyJ,sBAAsBjE,KAAK,GAC1C/E,WAAc+I,IACV3N,IACJ,qBAAKH,UAAU,cAAf,SACA,cAAC,GAAD,CAAkB0B,KAAK,KAAK0J,QAAS,CACjC,CACIjK,KAAM,uCACNa,QAAS,SAACwC,GACNA,EAAEC,iBACF,EAAK2J,OAAO/E,KAAK,IAErBF,QAAS,IAEb,CACIhI,KAAM,yIACNa,QAAS,SAACwC,GACNA,EAAEC,iBACF,EAAK+J,cAAcnF,KAAK,EAAM,CAACvF,YAAayC,EAAKzC,eAErDwF,MAAO,eAEX,CACInI,KAAM,2GACNa,QAAS,SAACwC,GACNA,EAAEC,iBACF,EAAK4F,SAAShB,KAAK,IAEvBC,MAAO,uBAUf,sBAAKtJ,UAAU,mDAAf,UACE,WACE,GAAI,EAAK+D,MAAM0B,OACX,OAAO,oBAAIzF,UAAU,yBAAd,SAAwC,EAAK+D,MAAM0B,SAFhE,GAMF,cAAC,EAAD,aACAf,SAAY,EAAK8J,cAAc1E,KAAK,IAChC3J,IACJ,qBAAKH,UAAU,cAAf,SACA,cAAC,GAAD,CAAkB0B,KAAK,KAAK0J,QAAS,CACjC,CACIjK,KAAM,uCACNa,QAAS,SAACwC,GACNA,EAAEC,iBACF,EAAK2J,OAAO/E,KAAK,IAErBF,QAAS,eAgBzB,cAAC,KAAD,CAAOkE,KAAK,qBAAqBC,OAAQ,SAACnN,GACtC,IAAMmO,EAAYnO,EAAMsO,MAAMC,OAAO7N,GAErC,OAAI,EAAKkD,MAAM0B,QACXb,QAAQC,IAAI,EAAKd,MAAM0B,QAChB,EAAK1B,MAAM0B,QAKlB,sBAAK1C,MAAM,oBAAX,UACA,cAAC,GAAD,aACAiK,YAAasB,EACbpJ,KAAMqB,EAAKrB,KACX+H,MAAO1G,EAAKzC,YACZY,SAAW,SAACF,GACRA,EAAEC,iBACF,EAAKkK,gBAAgBtF,KAAK,EAAM,CAACiF,eAClCxE,KAAK,IACJ3J,IAEJ,qBAAK4C,MAAM,aAAX,SACA,cAAC,GAAD,CAAkBrB,KAAK,KAAK0J,QAAS,CACjC,CACIjK,KAAM,uCACNa,QAAS,SAACwC,GACNA,EAAEC,iBACF,EAAK2J,OAAO/E,KAAK,KAIzB,CACIlI,KAAM,gHACNa,QAAS,SAACwC,GACNA,EAAEC,iBACF,EAAK4F,SAAShB,KAAK,GAClBY,KAAM,kBAAM,EAAK9J,MAAMsL,QAAQC,KAAnB,8CAC8B4C,EAD9B,gCAC+DA,KACzEjF,KAAK,KAEZC,MAAO,0BAQvB,cAAC,KAAD,CAAUxH,GAAG,a,GAjVUxB,IAAMC,W,oBCzBpBqO,I,8DACjB,WAAYzO,GAAQ,IAAD,8BACf,cAAMA,IACD4D,MAAQ,CAAC8K,UAAW,GAAIlF,SAAS,GAFvB,E,4FAKnB,4BAAAlB,EAAA,sEAQ2BiC,GAAQxK,KAAKC,MAAMwK,UAR9C,OAQUE,EARV,OAUI3K,KAAK2D,SAAS,CAAEgL,UAAWhE,EAAUlB,SAAS,IAVlD,gD,0EAaA,WAAU,IAAD,OAEL,OADA/E,QAAQC,IAAI3E,KAAK6D,MAAM8K,WACnB3O,KAAK6D,MAAM4F,QAEP,cAAC,EAAD,IAKA,cAAC,KAAD,CAAUmF,OAAQ5O,KAAK6D,MAAM8K,UAAWE,aAAa,EAAOC,gBAAiB,EAC7EC,QAAS,WAAO,EAAK9O,MAAMsL,QAAQC,KAAK,gB,GA7BjBpL,IAAMC,YCKxB2O,G,4JAEjB,WAAU,IAAD,OACL,OACI,eAAC,KAAD,WACA,cAAC,KAAD,CAAO7B,KAAK,kBAAkBC,OAAQ,SAACnN,GAE/B,OAAO,cAAC,GAAD,aAAWwK,SAAUxK,EAAMsO,MAAMC,OAAO/D,UAAcxK,OAIrE,cAAC,KAAD,CAAOgP,OAAK,EAAC9B,KAAK,QAAQC,OAAQ,SAACnN,GAAD,OAC9B,mCACA,sBAAKH,UAAU,gCAAf,UAGK4E,QAAQC,IAAI,EAAK1E,MAAMuC,SAASmJ,UACjC,qBAAK7L,UAAU,oCAAf,SACA,cAAC,GAAD,aAAUI,IAAK,EAAKD,MAAMuC,SAASmJ,UAAc1L,cAKzD,cAAC,KAAD,CAAU2B,GAAG,a,GAvBSxB,IAAMC,W,SCHnB6O,G,kDAEjB,WAAYjP,GAAQ,IAAD,8BACf,cAAMA,IACD4D,MAAQ,CAACsL,SAAU,EAAGC,WAAY,EACvCC,OAAQ,CAACzG,MAAOyG,OAAOC,WAAY3G,OAAQ0G,OAAOE,aAClD9F,SAAS,GAJM,E,qDAOnB,WAAqB,IAAD,OjBlBb,IAAI9B,SAAQ,SAASC,EAASC,GACjC6C,MAAM,aACLX,MAAK,SAACY,GACCA,EAASC,GAGbD,EAASE,OACJd,MAAK,SAAAc,GACFjD,EAAQiD,EAAI,aAKhBhD,EAAO,eAAiB8C,EAAStD,WAGxC2C,OAAM,SAACc,GACJjD,EAAO,+BiBEGkC,MAAK,SAAAxE,GACf,EAAK5B,SAAS,CAAC6L,KAAMjK,EAAQY,QAAS,EAAGsD,SAAS,OAErDO,OAAM,SAAAc,GACH,EAAKnH,SAAS,CAAC8F,SAAS,S,0BAIhC,WACIzJ,KAAKyP,YAAYtG,KAAKnJ,KAAM,K,uBAGhC,WACIA,KAAKyP,YAAYtG,KAAKnJ,MAAO,K,yBAGjC,SAAY0P,GACR1P,KAAK2D,SAAS,CAACyL,WAAY,EAAGjJ,QAASnG,KAAK6D,MAAMsC,QAAUuJ,M,mCAIhE,YAAqC,IAAbP,EAAY,EAAZA,SACpBnP,KAAK2D,SAAS,CAACwL,SAAUA,EAAUC,WAAY,M,wBAGnD,SAAWM,GACP1P,KAAK2D,SAAS,CAACyL,WAAYpP,KAAK6D,MAAMuL,WAAaM,M,0BAGvD,WACI1P,KAAK2P,WAAWxG,KAAKnJ,MAAO,K,sBAGhC,WACIA,KAAK2P,WAAWxG,KAAKnJ,KAAM,K,oBAG/B,WAAU,IAAD,OAEL,OAAIA,KAAK6D,MAAM4F,QACJ,cAAC,EAAD,IAKX,sBAAK5G,MAAM,mCAAX,UACI,cAAC,KAAD,CACI+M,KAAM5P,KAAK6D,MAAM2L,KAAKxP,KAAK6D,MAAMsC,SAASjG,IAC1C2P,WAAY,MACZC,cAAe9P,KAAK+P,sBAAsBnG,KAAK5J,MAHnD,SAKI,cAAC,KAAD,CACA4I,MAAO5I,KAAK6D,MAAMwL,OAAOzG,MAAQoH,GACjClQ,UAAW,kCACXsP,WAAYpP,KAAK6D,MAAMuL,eAE3B,qBAAKvM,MAAM,gEAAX,SACI,sBAAKA,MAAM,yEAAX,UACI,qBAAKA,MAAK,8CAAV,SACI,cAAC,GAAD,CACIf,QAAS,SAACwC,GACNA,EAAEC,iBACF,EAAKtE,MAAMsL,QAAQC,KAAK,MAE5BvJ,UAAU,OACVnC,UAAU,6CANd,8CAYJ,cAAC,GAAD,CACIyK,SAAUvK,KAAK6D,MAAMsC,UAAYnG,KAAK6D,MAAM2L,KAAK5M,OAAS,EAC1Dd,QAAS,SAACwC,GACNA,EAAEC,iBACF,EAAK0L,aAAa9G,KAAK,IAE3BlH,UAAU,OANd,+GAWA,mBAAGY,MAAM,sBAAT,SACK7C,KAAK6D,MAAM2L,KAAKxP,KAAK6D,MAAMsC,SAAS+J,QAGzC,cAAC,GAAD,CACI3F,SAAiC,IAAvBvK,KAAK6D,MAAMsC,QACrBrE,QAAS,SAACwC,GACNA,EAAEC,iBACF,EAAK4L,UAAUhH,KAAK,IAExBlH,UAAU,QANd,8GAcR,qBAAKY,MAAM,mEAAX,SACI,sBAAKA,MAAM,gEAAX,UAEI,cAAC,GAAD,CACI0H,SAAUvK,KAAK6D,MAAMuL,YAAc,EACnCtN,QAAS,SAACwC,GACNA,EAAEC,iBACF,EAAK6L,aAAajH,KAAK,IAE3BlH,UAAU,OANd,4CAWA,oBAAGY,MAAM,WAAT,8DACU7C,KAAK6D,MAAMuL,aAAepP,KAAK6D,MAAMsL,SAAW,EAAI,MAD9D,iBACyEnP,KAAK6D,MAAMsL,UAAY,QAGhG,cAAC,GAAD,CACI5E,SAAUvK,KAAK6D,MAAMuL,YAAcpP,KAAK6D,MAAMsL,SAC9CrN,QAAS,SAACwC,GACNA,EAAEC,iBACF,EAAK8L,SAASlH,KAAK,IAEvBlH,UAAU,QANd,8D,GAhIc7B,IAAMC,WC4BzBiQ,OAvBf,WAQI,MANoC,qBAAzB5J,EAAQ8B,cAA6E,IAA7CnD,OAAOQ,KAAKa,EAAQ8B,cAAc5F,QACjF8D,EAAQqB,WAMR,cAAC,IAAD,UACA,eAAC,KAAD,WAEA,cAAC,KAAD,CAAOoF,KAAK,SAASC,OAAQ,SAACnN,GAAD,OAAW,cAAC,GAAD,eAAWA,OACnD,cAAC,KAAD,CAAOkN,KAAK,YAAYC,OAAQ,SAACnN,GAAD,OAAW,cAAC,GAAD,eAAoBA,OAC/D,cAAC,KAAD,CAAOkN,KAAK,QAAQC,OAAQ,SAACnN,GAAD,OAAW,cAAC,GAAD,eAAUA,OACjD,cAAC,KAAD,CAAOkN,KAAK,QAAQC,OAAQ,SAACnN,GAAD,OAAW,cAAC,GAAD,eAAUA,OACjD,cAAC,KAAD,CAAOkN,KAAK,IAAIC,OAAQ,SAACnN,GAAD,OAAW,cAAC,GAAD,eAAcA,OACjD,cAAC,KAAD,CAAU2B,GAAG,YCpBN2O,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1G,MAAK,YAAkD,IAA/C2G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAAS3D,OACP,cAAC,IAAM4D,WAAP,UACI,cAAC,IAAD,UACE,cAAC,GAAD,QAGNC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.39d1c6da.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/background-0.746cda54.png\";","import React from 'react';\n\nexport default class Background extends React.Component {\n    render() {\n      return (\n        <div className=\"fixed top-0 left-0 right-0 bottom-0 select-none -z-10\">\n            <img src={this.props.url} className=\"select-none -z-10 absolute top-0 left-0 h-screen w-screen\" alt=\"Фоновая картинка\"/>\n            <div className=\"select-none bg-gray-100 bg-opacity-75 -z-10 absolute top-0 left-0 right-0 bottom-0\"></div>\n        </div>\n      );\n    }\n}\n","import React from 'react';\n\nexport default class ButtonContainer extends React.Component {\n    render() {\n      return (\n        <div className=\"relative h-2/3 mx-32\">\n        <div className=\"grid grid-cols-3 grid-rows-2 gap-4 absolute bottom-10 left-0 right-0\">\n            {this.props.children}\n        </div>\n        </div>\n      );\n    }\n} \n","import React from 'react';\n\nexport default class Logo extends React.Component {\n    render() {\n      return (\n        <div className = \"mx-auto h-1/3 py-10\">\n            <header className = \"text-9xl font-black text-blue-darker flex justify-center items-center\">\n                <span className=\"flex-initial p-1\" >RM</span>\n                <span className = \"flex-initial p-1 mb-8\">\n                <svg viewBox=\"0 0 69.4 69.8\" className = \"w-48 h-auto\" xmlns=\"http://www.w3.org/2000/svg\" id=\"preloader-logo\">\n                    <path className=\"fill\" fill=\"#ed1849\" fill-rule=\"evenodd\" d=\"M45.8 52.7l-27.7 4.1-1.6-1.2 6.6-13.1 2.6 4.5c.3.5.9.8 1.4.8h16.2c.5 0 1-.3 1.4-.7.3-.4.4-1 .2-1.5l-3.8-11.1c-.2-.7-.9-1.1-1.6-1.1h-8.9L28 25.6h12.9l2.9 4.9c.3.5.9.8 1.4.8h23.9v-.2-.1l-.1-.7v-.1l-.4-2.3C65.6 11.9 51.5 0 34.7 0A35 35 0 00.5 27.7l11.1-.7 12-9.9L51.3 13l1.6 1.2-6.6 13.2-2.7-4.5c-.3-.5-.9-.8-1.4-.8H25.9c-.5 0-1 .3-1.4.7-.3.4-.4 1-.2 1.5L28 35.4c.2.7.9 1.1 1.6 1.1h8.9l2.6 7.8H28.2l-2.9-4.9c-.3-.5-.9-.8-1.4-.8H0V38.9l.1.7v.1l.4 2.2a34.9 34.9 0 0068.3.1l-11.1.7-11.9 10z\" clip-rule=\"evenodd\"></path>\n                </svg>\n                </span>\n                <div className =\"flex-initial p-1 mt-4\">\n                    <span className=\"\" ><i>RAIL</i></span>\n                    <h2 className=\"text-4xl text-left font-normal text-gray-500 -mt-4\">инфокиоск</h2>\n                </div>\n            </header>\n        </div>\n      );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\n\n/**\n * Кнопка на главной странице\n */\nexport default class MainButton extends React.Component {\n    static propTypes = {\n\n        /**\n         * Размер кнопки \\\n         * Влияет на размер текста, иконки и стрелки \\\n         * Возможные варианты: md (средняя), lg (большая), xl (очень большая)\n         * @default \"md\"\n        */\n        size: PropTypes.string,\n\n        /** \n         * \"Направление\" кнопки. Пока что влияет только на стрелочку \\\n         * Может быть left, top, right или bottom\n         * @default undefined\n         */\n        direction: PropTypes.string,\n\n        /** \n         * Иконка кнопки, html код (svg) \\\n         * Обычно пишется в виде <svg ...> </svg>\n         */\n        icon: PropTypes.string,\n\n        /** \n         * Ссылка, по которой ведёт кнопка \\\n         * Если задана, кнопка оборачивается в ссылку и функция OnClick не срабатывает \\\n         */\n        link: PropTypes.string,\n\n        /** \n         * Действие при нажатии кнопки\n         */\n        onClick: PropTypes.func,\n\n        /** \n         * Добавочные css классы к кнопке \\\n         * желательно использовать классы Tailwind Css\n         * @example className = \"col-span-2 row-span-1\" \n         * растянет кнопку внутри сетки (CSS) на 1 ряд и 2 колонки \n         * @example className = \"bg-blue-lighter hover:bg-red\"\n         * сделает кнопку синей, а при наведении на неё мышкой - красной \n         */\n        className: PropTypes.string,\n\n        /** \n         * Внутри компонента пишется текст кнопки\n         */\n        children: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    }\n\n    static defaultProps = {\n        size: 'md',\n        direction: undefined,\n        icon: undefined,\n        children: 'Кнопка',\n    }\n    \n\n    #sizeClasses = {\n        'xl': {\n            text: 'text-6xl',\n            icon: 'w-60 h-60 p-4',\n            arrow: 'w-12 h-12',\n        },\n        'lg': {\n            text: 'text-4xl',\n            icon: 'w-44 h-44 p-3',\n            arrow: 'w-12 h-12',\n        },\n        'md': {\n            text: 'text-3xl',\n            icon: 'w-28 h-28 p-1',\n            arrow: 'w-12 h-12',\n        },\n    };\n\n    #arrowRotation = {\n        left:  'left-0 rotate-0',\n        top:  'top-0 rotate-90',\n        right:  'right-0 rotate-180',\n        bottom:  'bottom-0 -rotate-90',\n    }\n\n    getSize() {\n        return `${this.props.size}`\n    }\n\n    render() {\n\n        const ParentTagName = this.props.link ? Link : 'button'\n      return (\n        <ParentTagName\n        className={`relative bg-red transition-colors duration-200 rounded flex\n        justify-center items-center text-white shadow-xl\n        ` + this.props.className}\n        to={this.props.link ? this.props.link : undefined}\n        onClick={this.props.link ? undefined : this.props.onClick}>\n            <div className=\"text-center\">\n                {(() => {if (this.props.icon) {\n                    return (\n                    <div className={\n                        `${this.#sizeClasses[this.props.size].icon}\n                        mx-auto`}\n                        dangerouslySetInnerHTML={{ __html: this.props.icon }}\n                        >\n                    </div>)\n                }})()}\n\n                <h3 className={\n                    `${this.#sizeClasses[this.props.size].text} \n                    font-black`}>\n                    {this.props.children}\n                </h3>\n            </div>\n            {\n                this.props.direction ?\n            <div className={\n                `${this.#sizeClasses[this.props.size].arrow}\n                absolute \n                transform\n                ${this.#arrowRotation[this.props.direction]}\n                `}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\" />\n                </svg>\n            </div>\n            : undefined\n            }\n\n        </ParentTagName>\n      );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport MainButton from '../../Buttons/MainButton';\n\n\nexport default class AskLoginForm extends React.Component {\n\n    render() {\n        // TODO:\n        // Это костыль на первое время\n        // Переписать обязательно\n        let redirectTo = this.props.location.search\n        .substr(this.props.location.search.indexOf('redirectTo=') + 'redirectTo='.length)\n\n        return (            \n            <div className=\"mx-auto absolute min-w-full bg-gray-200 rounded-xl shadow-xl py-10 top-10\">\n                <div class=\"\">\n                <div className=\"m-5 w-56 h-56 mx-auto text-gray-500\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-person-bounding-box\" viewBox=\"0 0 16 16\">\n                    <path d=\"M1.5 1a.5.5 0 0 0-.5.5v3a.5.5 0 0 1-1 0v-3A1.5 1.5 0 0 1 1.5 0h3a.5.5 0 0 1 0 1h-3zM11 .5a.5.5 0 0 1 .5-.5h3A1.5 1.5 0 0 1 16 1.5v3a.5.5 0 0 1-1 0v-3a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 1-.5-.5zM.5 11a.5.5 0 0 1 .5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 1 0 1h-3A1.5 1.5 0 0 1 0 14.5v-3a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v3a1.5 1.5 0 0 1-1.5 1.5h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 1 .5-.5z\"/>\n                    <path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm8-9a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"/>\n                    </svg>\n                </div>\n\n                <h1 className=\"text-5xl pt-12 mx-auto text-gray-500 font-black\">\n                    Для получения всего перечня доступных услуг необходимо\n                    <br/>\n                    <span className=\"text-red\"> авторизоваться в системе</span>\n                </h1>\n                </div>\n            </div>\n        );\n    }\n}","function format(value, pattern) {\n    var i = 0,\n        v = value.toString();\n    return pattern.replace(/#/g, _ => v[i++]);\n}\n\nexport default format;","import React from 'react';\nimport MainButton from '../../Buttons/MainButton';\nimport PropTypes from 'prop-types'\nimport '../../../assets/css/postcard.css'\nimport InputMask from 'react-input-mask';\nimport format from '../../../scripts/helperFunctions/format';\n\nexport default class InputPhoneForm extends React.Component {\n    static propTypes = {\n        /**\n         *  Действие при отправки формы\n         *  @default (e) => {e.preventDefault()}\n         */\n        onSubmit: PropTypes.func,\n\n        /**\n         *  Действие при изменении значения поля\n         *  @default (value, mask) => console.log(value)\n         */\n         onChange: PropTypes.func,\n    }\n\n    static defaultProps = {\n        onSubmit: (data) => {},\n        onChange: (value, mask) => console.log(value),\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {phoneNumber: '0000000000'}\n    }\n\n    onPhoneChange = (event) => {\n        let number = event.target.value.replace(/[ _()-]/g, '');\n        //console.log(number)\n        this.setState({\n            phoneNumber: number\n        });\n    }\n\n    componentDidMount() {\n        this.searchInput.focus();\n    }\n    \n    render() {\n        // TODO:\n        // Это костыль на первое время\n        // Переписать обязательно\n        //let redirectTo = this.props.location.search\n        //.substr(this.props.location.search.indexOf('redirectTo=') + 'redirectTo='.length)\n        return (\n            <div className=\"mx-auto text-center relative max-w-5xl\">\n            <div class=\"w-full\">\n            \n            <form className=\"bg-white mt-10 shadow-md rounded px-8 mb-4\">\n                <div class=\"absolute -top-5 -left-5 -right-5 -bottom-5 -z-10 bg-postcard rounded shadow-md\"></div>\n                <h1 className=\"text-5xl pt-12 mx-auto text-blue-darker font-black\">\n                        Войти как сотрудник\n                </h1>\n                <p className=\"text-2xl py-2 mx-auto text-gray-500\">\n                    Введите ваш номер телефона в поле ниже и нажмите на кнопку \"Продолжить\". <br/>\n                    Мы вышлем код подтверждения на указанный номер\n                </p>\n                <div className=\"my-8\">\n                <div className=\"grid h-24 grid-cols-2 grid-rows-1 gap-4 my-2\">\n                    <div><InputMask \n                    inputRef={inputEl => (this.searchInput = inputEl)}\n                    mask=\"+7 (999) 999-99-99\"\n                    maskChar={'_'}\n                    //value={this.state.value}\n                    onChange={this.onPhoneChange} \n                    //beforeMaskedValueChange={this.beforeMaskedValueChange}\n\n                    className=\"shadow appearance-none border rounded w-full h-full py-2 px-3\n                        text-gray-500 text-4xl font-black leading-tight tracking-widest focus:outline-none focus:shadow-outline\"\n                    id=\"username\" type=\"tel\"\n                    /></div>\n\n                    <MainButton\n                    className=\"bg-red hover:bg-blue-lighter\" size=\"lg\" direction=\"right\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        this.props.onSubmit({phoneNumber: this.state.phoneNumber})\n                    }}\n                    >\n                        Продолжить\n                    </MainButton>\n                </div>\n                <p className=\"text-center mt-6 text-gray-500 text-lg\">\n                &copy; 2021 РМ Рейл <br/>\n                </p>\n                </div>\n            </form>\n            \n            </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport MainButton from '../../Buttons/MainButton';\nimport PropTypes from 'prop-types'\nimport InputMask from 'react-input-mask';\n\nimport format from '../../../scripts/helperFunctions/format';\nimport '../../../assets/css/input-number-fix.css'\nimport '../../../assets/css/postcard.css'\n\nexport default class ConfirmNumberForm extends React.Component {\n    static propTypes = {\n        /**\n         *  Действие при изменении значения поля\n         *  Предпологается, что код подтверждения отправляется, \\\n         *  только когда поле заполнено до конца. \\\n         *  См. использование в файле LoginForm.jsx\n         *  @default (value, mask) => console.log(value)\n         */\n         onChange: PropTypes.func,\n\n        /**\n         *  Действие при отправки формы\n         *  Тут нигде не используется\n         *  @default (data) => {}\n         */\n        onSubmit: PropTypes.func,\n\n        /**\n         *  Номер телефона, который будет отображаться на форме\n         *  (Без +7 или 8)\n         *  @default '0000000000'\n         */\n        phoneNumber: PropTypes.oneOfType(PropTypes.number, PropTypes.string),\n\n        /**\n         *  Номер телефона, который будет отображаться на форме\n         *  (Без +7 или 8)\n         *  @default '00000'\n         */\n        numberMask: PropTypes.string\n    }\n\n    static defaultProps = {\n        onChange: (value, mask) => console.log(value),\n        phoneNumber: '+70000000000',\n        numberMask: '99999'\n    }\n\n    componentDidMount() {\n        this.searchInput.focus();\n    }\n\n\n    render() {\n        // TODO:\n        // Это костыль на первое время\n        // Переписать обязательно\n        //let redirectTo = this.props.location.search\n        //.substr(this.props.location.search.indexOf('redirectTo=') + 'redirectTo='.length)\n\n        return (\n            <div className=\"container mx-auto text-center relative max-w-5xl\">\n            <div class=\"mx-auto\">\n            \n            <form className=\"bg-white mt-10 left-0 right-0 shadow-md rounded px-8 mb-4\">\n                <div class=\"absolute -top-5 -left-5 -right-5 -bottom-5 -z-10 bg-postcard rounded shadow-md\"></div>\n                <h1 className=\"text-5xl pt-12 mx-auto text-blue-darker font-black\">\n                    Введите код подтверждения\n                </h1>\n                <p className=\"text-2xl pt-2 max-w-4xl mx-auto text-gray-500\">\n                    Мы уже выслали на номер {format(this.props.phoneNumber, '## (###) ### ##-## ')} код подтверждения\n                    <br/>\n                    Введите его в поле ниже, чтобы войти\n                </p>\n                <div className=\"mb-8 mt-2\">\n\n                <InputMask\n                inputRef={inputEl => (this.searchInput = inputEl)}\n                mask={this.props.numberMask}\n                maskChar={'_'}\n                onChange={(e) => this.props.onChange(e)}\n                className=\"shadow appearance-none rounded w-72 py-2 px-3\n                text-gray-500 text-center text-4xl font-black leading-tight tracking-widest focus:outline-none focus:shadow-outline\"\n                id=\"username\" type=\"text\" \n                //beforeMaskedValueChange={this.beforeMaskedValueChange}\n                />\n\n                <p className=\"text-center mt-6 text-gray-500 text-lg\">\n                &copy; 2021 РМ Рейл <br/>\n                </p>\n                </div>\n            </form>\n            \n            </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class Logo extends React.Component {\n    render() {\n      return (\n        <div className=\"fixed top-0 left-0 right-0 bottom-0 select-none\">\n            <div className=\"select-none bg-gray-100 bg-opacity-75 absolute top-0 left-0 right-0 bottom-0\"></div>\n\n            <div className =\"flex absolute top-0 left-0 right-0 bottom-0 justify-center items-center\">\n                <svg viewBox=\"0 0 69.4 69.8\" className = \"w-48 h-auto animate-spin\" xmlns=\"http://www.w3.org/2000/svg\" id=\"preloader-logo\">\n                    <path className=\"fill\" fill=\"#ed1849\" fill-rule=\"evenodd\" d=\"M45.8 52.7l-27.7 4.1-1.6-1.2 6.6-13.1 2.6 4.5c.3.5.9.8 1.4.8h16.2c.5 0 1-.3 1.4-.7.3-.4.4-1 .2-1.5l-3.8-11.1c-.2-.7-.9-1.1-1.6-1.1h-8.9L28 25.6h12.9l2.9 4.9c.3.5.9.8 1.4.8h23.9v-.2-.1l-.1-.7v-.1l-.4-2.3C65.6 11.9 51.5 0 34.7 0A35 35 0 00.5 27.7l11.1-.7 12-9.9L51.3 13l1.6 1.2-6.6 13.2-2.7-4.5c-.3-.5-.9-.8-1.4-.8H25.9c-.5 0-1 .3-1.4.7-.3.4-.4 1-.2 1.5L28 35.4c.2.7.9 1.1 1.6 1.1h8.9l2.6 7.8H28.2l-2.9-4.9c-.3-.5-.9-.8-1.4-.8H0V38.9l.1.7v.1l.4 2.2a34.9 34.9 0 0068.3.1l-11.1.7-11.9 10z\" clip-rule=\"evenodd\"></path>\n                </svg>\n            </div>\n        </div>\n      );\n    }\n}\n","export const userRoles = {\n    GUEST: 'GUEST',\n    UNCONFIRMED: 'UNCONFIRMED',\n    EMPLOYEE: 'EMPLOYEE'\n}\n\n// Нельзя использовать set, потому что он не переносит JSON.Stringify\nexport const defaultUser = {\n    name: 'Гость',\n    phoneNumber: '+70000000000',\n    roles: new Set([userRoles.GUEST]),\n}\n\nexport class User {\n    /**\n     * Посмотрите на структуру объекта пользователя \\\n     * Время жизни сессии (expires) пишется в секундах \\\n     * Подразумевается, что данные будут храниться на стороне клиента, \\\n     * чтобы не делать слишком много запросов к апи \\\n     * Но апи должен хранить копию этих данных, чтобы проверять их целостность по токену \\\n     * как минмум при отправке формы \\\n     * Потому что иначе любой с шаловливыми ручками может залезть в дебаггер или куки \\\n     * И поменять там значения, на какие ему нужно\n     */\n\n    constructor(overrides = {}) {\n        Object.assign(this, defaultUser);\n        Object.assign(this, overrides);\n        \n        if (!(typeof this.roles === 'object' && this.roles instanceof Set)) {\n            this.roles = new Set(this.roles);\n        }\n        return this;\n    }\n\n\n    getFullName() {\n        const result = {\n            lastName: '',\n            firstName: '',\n            middleName: '',\n        }\n\n        let array = this.name.split(' ');\n\n        let i = 0;\n        Object.keys(result).forEach(key => {\n            if (i < array.length)\n            result[key] = array[i];\n            ++i;\n        });\n\n        return result;\n    }\n\n    // Кастомное поведение при JSON.stringify\n    // Нужно для преобразования сета в массив, иначе оно записывается как {}\n    toJSON() {\n        return JSON.stringify ({\n            name: this.name,\n            phoneNumber: this.phoneNumber,\n            roles: [...this.roles],\n        })\n    }\n\n    clone(overrides = {}) {\n        return new User(Object.assign(this.getInfo(), overrides));\n    }\n}","import {User, userRoles} from './User'\nimport Cookies from 'js-cookie';\n\nlet current = {};\n\n// Пока не нужно\nlet countdown = 0.0;\n\nexport const defaultSession = {\n    user: new User(),\n    validThrough: new Date(\"Jan 1, 2077 00:00:00\"),\n    authToken: '',\n\n    // Это тоже пока не используем\n    refreshToken: '',\n}\n\nexport class Session {\n    static startNew(overrides = {}) {\n        current = {};\n\n        current = Object.assign(current, defaultSession);\n        current = Object.assign(current, overrides);\n    }\n\n    // Пока что не пользуемся куками\n    static start() {\n        \n    }\n\n    static edit(changes = {}) {\n        Object.assign(current, changes);\n    }\n\n    static getCurrent() {\n        // Выдаём копию, чтобы ненароком ничего не менять в самой сессии\n        return Session.import(Session.export());\n    }\n\n    static export() {\n        return JSON.stringify(current);\n    }\n\n    static import(JSONstring) {\n        return JSON.parse(JSONstring, function(key, value) {\n            if (key == 'user') {\n                return new User(JSON.parse(value));\n             }\n            \n            if (key == 'validThrough') return new Date(value);\n            return value;\n        });\n    }\n\n    // Пока что не нужно\n    static writeCookie() {\n        Cookies.set('session', JSON.stringify(current), { expires: 1, secure: true })\n    }\n\n    // И это тоже\n    static readCookie() {\n        return JSON.parse((Cookies.get('session')));\n    }\n}\n\n// export const startNewSession = (sessionObj = {}) => {\n//     const result = {...defaultSession};\n//     Object.keys(sessionObj).forEach(key => {\n//         result[key] = sessionObj[key];\n//     });\n//     writeUserSession(result);\n// }\n\n// export const editSession = (edited = {}) => {\n//     const current = readUserSession();\n//     Object.keys(edited).forEach(key => {\n//         current[key] = edited[key];\n//     });\n//     writeUserSession(current);\n// }\n\n// export const writeUserSession = (session) => {\n//     Cookies.set('session', JSON.stringify(session), { expires: 1, secure: true })\n// }\n\n// export const refreshSession = (session) => {\n\n// }\n\n// export const readUserSession = () => {\n//     return JSON.parse((Cookies.get('session')));\n// }\n\n// const sessionCache = () => {\n\n// }","export const DUMMY_PHONE = '5555555555';\nexport const DUMMY_CONFIRM_NUMBER = '55555';\nexport const DUMMY_TOKEN = 'ffff0000';\nexport const UNCONFIRMED_TOKEN = 'UNCONFIRMED_USER';\n\n/**\n * Несколько самопальным ENUM реализованных в виде объектов-констант,\n * чтобы не работать с неизвестными строками\n */\n\nexport const status = {\n    SUCCESS: 'SUCCESS',\n    FAIL: 'FAIL',\n    NOT_FOUND: 'NOT FOUND'\n}\n\nexport const ACTION = {\n    LOGIN: 'LOGIN',\n    LOGOUT: 'LOGOUT',\n    CONFIRM: 'CONFIRM',\n    REQSERVICE: 'REQUEST SERVICE',\n}","import {User, userRoles, defaultUser} from '../user/User'\nimport { Session } from '../user/Session';\nimport { status } from '../constants/dummyConstants';\n\nconst DUMMY_PHONE = '+75555555555';\nconst DUMMY_CONFIRM_NUMBER = '55555';\nconst DUMMY_USER_NAME = 'Иванов Иван Иванович'\nconst DUMMY_TOKEN = 'ffff0000';\nconst DUMMY_REFRESH_TOKEN = '0000ffff'\n\n//TODO: дописать FAKEAPI, подключить reducer к нему\n//Будем считать, что сделано\n\nexport const refreshSession = (session) => {\n    return new Promise(function(resolve, reject) {\n        \n    });\n}\n\nexport const inputNumber = (session, data) => {\n    return new Promise(function(resolve, reject) {\n        // Симулируем какой-то процесс обращения к апи с помошью setTimeout\n        if (data.phoneNumber === DUMMY_PHONE) {\n            \n            setTimeout(() => {\n                Session.startNew({\n                    user: new User({...session.user, phoneNumber: DUMMY_PHONE,\n                        roles: session.user.roles.add(userRoles.UNCONFIRMED)}),\n                    // expires: 600,\n                });\n                resolve(status.SUCCESS);\n            }, Math.random() * 1000 + 250)\n        }\n        else {\n            setTimeout(() => {\n                reject(status.FAIL);\n            }, Math.random() * 1000 + 250)\n        }\n    });\n}\n\nexport const confirmNumber = (session, data) => {\n    return new Promise(function(resolve, reject) {\n        // Симулируем какой-то процесс обращения к апи с помошью setTimeout\n        if (data.phoneNumber === DUMMY_PHONE\n            && data.confirmNumber === DUMMY_CONFIRM_NUMBER) {\n            \n            setTimeout(() => {\n                Session.startNew({\n                    user: new User({...session.user, name: DUMMY_USER_NAME,\n                    roles: new Set([userRoles.GUEST, userRoles.EMPLOYEE])}),\n\n                    authToken: DUMMY_TOKEN,\n                    // expires: 600,\n                });\n                resolve(status.SUCCESS);\n            }, Math.random() * 1000 + 250)\n        }\n        else {\n            setTimeout(() => {\n                reject(status.FAIL);\n            }, Math.random() * 1000 + 250)\n        }\n    });\n}\n\nexport const logout = (session, data = {}) => {\n    return new Promise(function(resolve, reject) {\n        setTimeout(() => {\n            Session.startNew();\n            resolve(status.SUCCESS)\n        }, Math.random() * 1000 + 250)\n    });\n}\n\nexport const requestService = (session, data = {}) => {\n    // data.serviceId - id запрашиваемой услуги\n    return new Promise(function(resolve, reject) {\n        if (session.authToken === DUMMY_TOKEN) {\n            setTimeout(() => {\n                resolve(status.SUCCESS)\n            }, Math.random() * 1000 + 250)\n        }\n        else {\n            setTimeout(() => {\n                reject(status.FAIL)\n            }, Math.random() * 1000 + 250)\n        }\n    });\n}","//import login from \"./actions/login\";\n//import confirm from \"./actions/confirm\";\n//import logout from \"./actions/logout\"\n\nimport {inputNumber, confirmNumber, logout, requestService} from \"./api/fakeApi\"\nimport { Session } from \"./user/Session\"\n\nimport {ACTION, status} from './constants/dummyConstants'\n/**\n * REDUCE ОБРАБАТЫВАЕТ ВСЕ ВХОДЯЩИЕ ЗАПРОСЫ С ФОРМ \\\n * ПРИНИМАЕТ ЗАПРОС, ИСПОЛЬЗУЕТ СООТВЕТСТВУЮЩЕЕ ДЕЙСТВИЕ \\\n * \n * @param {*} action действие, которое мы хотим обработать\n * @returns ответ в виде строки-константы STATUS (см. dummyConstants), например 'SUCCESS' или 'FAIL'\n */\nasync function reduce(action) {\n    switch (action.type) {\n        case ACTION.LOGIN:\n            console.log(Session.getCurrent())\n            return inputNumber(Session.getCurrent(), action.data)\n        case ACTION.CONFIRM:\n            return confirmNumber(Session.getCurrent(), action.data)\n        case ACTION.LOGOUT:\n            return logout(Session.getCurrent(), action.data)\n        case ACTION.REQSERVICE:\n            return requestService(Session.getCurrent(), action.data)\n        default:\n            return Promise.reject(status.NOT_FOUND);\n        }\n}\n\nexport default reduce;","import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst sizes = {\n    'sm': {\n        height: \"h-12\",\n        width: \"w-12\",\n        border: \"border-2\",\n        padding: \"px-8\",\n        text: 'text-md',\n    },\n    'lg': {\n        height: \"h-16\",\n        width: \"w-16\",\n        border: \"border-2\",\n        padding: \"px-12\",\n        text: 'text-xl',\n    }\n}\n\n\nexport default class TimeoutButtonOutline extends React.Component {\n    \n    static propTypes = {\n        /**\n         *  Действие при нажатии кнопки либо по истечении времени\n         *  @default () => {}\n         */\n        onClick: PropTypes.func,\n\n        /**\n         *  Время в секундах до осуществления действия\n         *  @default undefined\n         */\n        timeout: PropTypes.number,\n\n        /**\n         * Размер кнопки. Один из ['sm', 'lg']\n         * @default 'sm'\n         */\n        size: PropTypes.string,\n\n        /**\n         * Цвет кнопки. СТРОКА. См. цветообразование в tailwind css \\\n         * Также в проект зашиты другие цвета в tailwind.config.js\n         * \n         * @default 'red'\n         */\n        color: PropTypes.string,\n\n        /**\n         * Контрастный цвет к заданному (color) СТРОКА. См. цветообразование в tailwind css \\\n         * Также в проект зашиты другие цвета в tailwind.config.js \\\n         * \n         * @default 'white'\n         */\n        contrastColor: PropTypes.string,\n    }\n\n    static defaultProps = {\n        onClick: () => {},\n        timeout: undefined,\n        size: 'sm',\n        color: 'red',\n        contrastColor: 'white'\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {timer: props.timeout}\n    }\n\n    componentDidMount() {\n        if (this.state.timer)\n            this.onTimerTick.call(this);\n    }\n\n    onTimerTick() {\n        if (this.state.timer <= 0) {\n            this.props.onClick({preventDefault: () => {}});\n        }\n        else {\n            setTimeout(() => {\n                this.setState({timer: this.state.timer - 1},\n                    this.onTimerTick.call(this));\n            }, 1000)\n        }\n    }\n\n    render() {\n        const size = sizes[this.props.size] || sizes['sm'];\n        const color = {\n            text: `text-${this.props.color}`,\n            border: `border-${this.props.color}`,\n            hoverText: `hover:text-${this.props.contrastColor}`,\n            hoverBg: `hover:bg-${this.props.color}`,\n        }\n\n        /*         \n            h-12\n            flex items-center\n            text-red\n            justify-center uppercase\n            font-semibold\n            border-red\n            undefined\n            border-red hover:bg-red\n            hover:text-white\n            transition duration-500\n            ease-in-out \n            text-md\"\n         */\n\n        return (\n        <button class=\"inline-flex\" onClick={this.props.onClick}>\n            <span class={`\n            ${size.height}\n            flex items-center\n            ${color.text}\n            justify-center uppercase\n            font-semibold\n            ${color.border}\n            ${size.padding}\n            ${size.border}\n            ${color.border}\n            ${color.hoverBg}\n            ${color.hoverText}\n            transition duration-500\n            ease-in-out \n            ${size.text}`}>\n                {this.props.children}\n            </span>\n            {(() => {\n                if (typeof this.props.timeout !== 'undefined') {\n                    return <span class={`\n                    ${size.height}\n                    ${size.width} \n                    flex-shrink-0\n                    flex ${color.text}\n                    items-center justify-center \n                    ${size.border}\n                    border-l-0 font-black\n                    ${color.border} ${color.hoverBg}\n                    ${color.hoverText}\n                    transition duration-500\n                    ease-in-out\n                    ${size.text}\n                    `}>\n                            {this.state.timer}\n                        </span>\n                }\n            })()}\n        </button>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n  }\nfrom 'react-router-dom';\n\nimport AskLoginForm from './Login/AskLoginForm';\nimport InputPhoneForm from './Login/InputPhoneForm';\nimport ConfirmForm from './Login/ConfirmNumberForm';\nimport LoaderScreen from '../LoaderScreen'\n\nimport reducer from '../../scripts/reducer'\n\nimport { userRoles } from '../../scripts/user/User';\nimport {Session} from '../../scripts/user/Session'\nimport { ACTION } from '../../scripts/constants/dummyConstants';\nimport TimeoutButtonOutline from '../Buttons/TimeoutButtonOutline';\n\n// Время в секундах\nconst LOGOUT_T = 30;\n\nexport default class Forms extends React.Component {\n\n    // Дописать действия при отправке формы (props.onSubmit)\n\n    // TODO: сделать переходы в зависимости от success и fail\n    constructor(props) {\n        super(props);\n        this.state = {loading: true, timer: LOGOUT_T}\n    }\n\n    componentDidMount() {\n        this.setState({session: Session.getCurrent(), loading: false})\n        //console.log(success)\n        //console.log(fail)\n    }\n\n    componentWillMount() {\n        \n    }\n\n    setLoading(value) {\n        this.setState({loading: value})\n    }\n\n    updateSession(callback = () => {}) {\n        this.setState({session: Session.getCurrent()}, callback)\n    }\n\n\n    onLogout(data) {\n        let setLoading = this.setLoading.bind(this),\n        updateSession = this.updateSession.bind(this);\n\n        setLoading(true)\n        \n        return new Promise(function(resolve, reject) {\n            reducer({type: ACTION.LOGOUT, data: data}).then((result) => {\n                updateSession(setLoading(false));\n                // ...\n            },\n            )\n            .catch(result => {\n                updateSession(setLoading(false));\n                // ...\n            })\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <LoaderScreen/>\n        else {\n            const user = this.state.session.user;\n            //console.log(this.state.session);\n            //console.log(Session.getCurrent());\n\n            if (user.roles.has(userRoles.EMPLOYEE))\n                return (\n                    <div class=\"absolute left-4 top-4 max-w-md flex flex-col space-y-4 justify-center items-center\">\n                    <div class=\"bg-transparent w-auto flex items-center p-2\">\n                    <div class=\"flex items-center space-x-4 text-red\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                        </svg>\n                    </div>\n                    <div class=\"flex-grow p-3\">\n                    <div class=\"font-semibold text-xl text-blue-darker\">\n                        {user.getFullName().lastName + \" \" + user.getFullName().firstName}\n                    </div>\n                    {/* <div class=\"text-sm text-gray-500\">\n                        {(() => {\n                            if (user.roles.has(userRoles.EMPLOYEE))\n                                return \"Сотрудник\"\n                            else\n                                return \"Вход в систему не выполнен\"\n                        })()}\n                    </div> */}\n                    </div>\n                    <TimeoutButtonOutline timeout={20} onClick={(e) => {this.onLogout.call(this)}}>\n                        выход\n                    </TimeoutButtonOutline>\n                    </div>\n                    </div>\n                )\n            else return \"\";\n        }\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\n\n/**\n * Кнопка на главной странице\n */\nexport default class SecondaryButton extends React.Component {\n    static propTypes = {\n        /** \n         * \"Направление\" кнопки. Влияет на границу\n         * Может быть left, top, right или bottom\n         * @default \"left\"\n         */\n        direction: PropTypes.string,\n\n        /** \n         * Иконка кнопки, html код (svg)\n         * Обычно пишется в виде <svg ...> </svg>\n         */\n        icon: PropTypes.string,\n\n        /** \n         * Ссылка, по которой ведёт кнопка \\\n         * Если задана, кнопка оборачивается в ссылку и функция OnClick не срабатывает \\\n         */\n        link: PropTypes.string,\n\n        /** \n         * Дополнительный текст к кнопке\n         */\n        description: PropTypes.string,\n\n        /** \n         * Добавочные css классы к кнопке \\\n         * желательно использовать классы Tailwind Css\n         * @example className = \"col-span-2 row-span-1\" \n         * растянет кнопку внутри сетки (CSS) на 1 ряд и 2 колонки \n         */\n        className: PropTypes.string,\n\n        /** \n         * Функция, которая выполняется по нажатию на кнопку\n         * @default () => {}\n         */\n        onClick: PropTypes.func,\n\n\n        /** \n         * Внутри компонента пишется текст кнопки\n         */\n        children: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    }\n\n    static defaultProps = {\n        direction: 'left',\n        onClick: (e) => {},\n    }\n    \n    #arrowRotation = {\n        left:  'left-0 rotate-0',\n        right:  'right-0 rotate-180',\n    }\n\n    render() {\n      const ParentTagName = this.props.link ? Link : 'button'\n      return (\n        <ParentTagName className={\n            `${this.props.direction === 'left' ? 'bg-gradient-to-r' : 'bg-gradient-to-l'}\n        from-blue-lighter to-red p-1 ` + this.props.className}\n        onClick={this.props.onClick}\n        to={this.props.link}\n        >\n\n        <div className=\"container \n        bg-white flex items-center content-center justify-between text-center relative h-40\">\n            <div className= {`\n            ${this.props.direction === 'left' ? 'pl-16' : 'pl-6'}\n            pt-7 pb-4 text-left`}>\n            <h3 className={\n                `text-4xl font-black\n                ${this.props.direction === 'left' ? 'text-blue-darker' : 'text-red'}`}>\n                {this.props.children}\n            </h3>\n            <p class=\"text-gray-500 mt-2\">\n                {this.props.description}\n            </p>\n            </div>\n            <div className=\"p-4\">\n            <div className={\n                `w-24 mx-auto\n                ${this.props.direction === 'left' ? 'text-red' : 'text-blue-darker mr-7'}`}\n                dangerouslySetInnerHTML={{ __html: this.props.icon }}\n            >\n            </div>\n            </div>\n            <div className={\n                `w-12 h-12\n                absolute\n                text-blue-darker\n                transform\n                ${this.#arrowRotation[this.props.direction]}\n                `}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\" />\n                </svg>\n            </div>\n        </div>\n        </ParentTagName>\n      );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nexport default class ContentButton extends React.Component {\n    static propTypes = {\n\n        /** \n         * \"Направление\" кнопки. Пока что влияет только на стрелочку \\\n         * Может быть left, right или никаким\n         * @default \"left\"\n         */\n        direction: PropTypes.string,\n\n        /** \n         * Действие при нажатии кнопки\n         */\n        onClick: PropTypes.func,\n\n        /** \n         * Добавочные css классы к кнопке \\\n         * желательно использовать классы Tailwind Css\n         * @example className = \"col-span-2 row-span-1\" \n         * растянет кнопку внутри сетки (CSS) на 1 ряд и 2 колонки \n         * @example className = \"bg-blue-lighter hover:bg-red\"\n         * сделает кнопку синей, а при наведении на неё мышкой - красной \n         */\n        className: PropTypes.string,\n\n        /**\n         * Выключена ли кнопка\n         */\n        disabled: PropTypes.any,\n\n        /** \n         * Внутри компонента пишется текст кнопки\n         */\n        children: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    }\n\n    static defaultProps = {\n        size: 'md',\n        direction: 'left',\n        children: 'Кнопка',\n        disabled: false,\n    }\n\n    render() {\n        switch (this.props.direction) {\n            case 'left':\n                return (\n                <button type=\"button\"\n                onClick={this.props.onClick}\n                disabled={this.props.disabled}\n                class={`bg-gray-800 text-white rounded-l-md\n                py-3 hover:bg-red\n                transition duration-150 ease-out\n                hover:text-white px-5 ${this.props.className}`}>\n                <div class=\"flex flex-row align-middle items-center\">\n                    <svg class=\"w-8 mr-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\" d=\"M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z\" clip-rule=\"evenodd\"></path>\n                    </svg>\n                    <p class=\"ml-4 text-xl uppercase font-black\">{this.props.children}</p>\n                </div>\n                </button>\n            )\n\n            case 'right':\n                return (\n                <button type=\"button\"\n                onClick={this.props.onClick}\n                disabled={this.props.disabled}\n                class={`bg-gray-800 text-white rounded-r-md\n                transition duration-150 ease-out\n                py-3 hover:bg-red\n                hover:text-white px-5 ${this.props.className}`}>\n                    <div class=\"flex flex-row align-middle items-center\">\n                    <p class=\"mr-4 text-xl uppercase font-black\">{this.props.children}</p>\n                    <svg class=\"w-5 ml-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" d=\"M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path>\n                    </svg>\n                    </div>\n                </button>\n                )\n            \n            default:\n                return (\n                    <button type=\"button\"\n                    onClick={this.props.onClick}\n                    disabled={this.props.disabled}\n                    class={`bg-gray-800 text-white rounded-md\n                    py-3 hover:bg-red\n                    transition duration-150 ease-out\n                    hover:text-white px-5 ${this.props.className}`}>\n                        <div class=\"flex flex-row align-middle items-center\">\n                        <p class=\"mx-2 text-xl uppercase font-black\">{this.props.children}</p>\n                        </div>\n                    </button>\n                )\n        }\n\n    }\n}","export const getNewsList = () => {\n    return new Promise(function(resolve, reject) {\n        fetch('/api/news')\n        .then((response) => {\n            if (response.ok) {\n            // if HTTP-status is 200-299\n            // get the response body (the method explained below)\n            response.json()\n                .then(json => {\n                    resolve(json['newsList'])\n                })\n            }\n    \n            else {\n                reject(\"HTTP-Error: \" + response.status);\n            }\n        })\n        .catch((error) => {\n            reject(\"serious error occured\");\n        })\n    });\n}\n\nexport const getMaps = (category) => {\n    return new Promise(function(resolve, reject) {\n        fetch(`/api/maps/${category}`)\n        .then((response) => {\n            if (response.ok) {\n            // if HTTP-status is 200-299\n            // get the response body (the method explained below)\n            response.json()\n                .then(json => {\n                    resolve(json['imageList'])\n                })\n            }\n    \n            else {\n                reject(\"HTTP-Error: \" + response.status);\n            }\n        })\n        .catch((error) => {\n            reject(\"serious error occured\");\n        })\n    });\n}\n\n\nexport const getMenu = (menu) => {\n    return new Promise(function(resolve, reject) {\n        fetch(`/api/menus${menu}`)\n        .then((response) => {\n            if (response.ok) {\n            // if HTTP-status is 200-299\n            // get the response body (the method explained below)\n            response.json()\n                .then(json => {\n                    resolve(json)\n                })\n            }\n    \n            else {\n                reject(\"HTTP-Error: \" + response.status);\n            }\n        })\n        .catch((error) => {\n            reject(\"serious error occured\");\n        })\n    });\n}\n\n\nexport const getMenuTest = (menu) => {\n    return new Promise(function(resolve, reject) {\n        resolve({\n            \"buttons\": [\n              {\n                \"detail\": \"Справка 2-НДФЛ, Справка 182Н, Справка о заработной плате,\\n                Справка в УФССП, Справка в центр занятости\",\n                \"icon\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"currentColor\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\\\" />\\n                </svg>\",\n                \"link\": \"/services/finance\",\n                \"onClick\": null,\n                \"text\": \"Доходы\"\n              },\n              {\n                \"detail\": \"Справка о выплате единовременного пособия, \\n                Справка о получении/неполучении пособия по уходу за ребенком, \\n                Справка о выплате материальной помощи при рождении ребенка\",\n                \"icon\": \"<svg fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\\\"></path>\\n                </svg>\",\n                \"link\": \"/forms/service/1\",\n                \"onClick\": null,\n                \"text\": \"Выплаты\"\n              }\n            ],\n            \"goBack\": true,\n            \"goBackText\": \"Назад\",\n            \"type\": \"TWO_SIDES\"\n          })\n    });\n}","import React from 'react';\n\nexport default class FailReport extends React.Component {\n    render() {\n        return (\n            <div class=\"flex items-center gap-4 bg-red p-4 rounded-md max-w-5xl mx-auto\">\n            <div class=\"w-max\">\n                <div class=\"h-24 w-28 flex text-white border-r-4 border-white\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                </div>\n            </div>\n            <div class=\"space-y-1 pl-2 text-3xl text-left\">\n                <h6 class=\"font-black text-white\">{this.props.children}</h6>\n                <p class=\"font-black text-2xl text-gray-100\">{this.props.detail}</p>\n                <p class=\"font-black text-white\">Техподдержка: +7 (555) 555 55-55</p>\n            </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport MainButton from '../Buttons/MainButton';\nimport TimeoutButtonOutline from '../Buttons/TimeoutButtonOutline';\n\nconst directions = [\"left\", \"bottom\", \"top\", \"right\"];\n\nexport default class ToolbarSecondary extends React.Component {\n\n    static propTypes = {\n        /** \n         * Массив кнопок, которые нужно отобразить.\n         * @default []\n         * @example\n         *      [{text: \"На главную\",\n         *      onClick: (e) => {\n         *      e.preventDefault();\n         *      this.props.history.push(\"/\")\n         *      }}]\n         */\n        buttons: PropTypes.array,\n\n        /**\n         * Размер. Один из ['sm', 'lg']\n         * @default 'sm'\n         */\n        size: PropTypes.string,\n        }\n\n    static defaultProps = {\n        buttons: [],\n        size: 'sm',\n    }\n\n    render() {\n        let n = this.props.buttons.length;\n        let buttons = this.props.buttons;\n\n        return (\n            <div className={`flex justify-start items-center flex-wrap -ml-5`}>\n            {\n                buttons.map((button,index) => {\n                    return (\n                    <div className=\"ml-5\">\n                        <TimeoutButtonOutline\n                        size={this.props.size}\n                        timeout={button.timeout}\n                        onClick={button.onClick}\n                        color={button.color}>\n                            {button.text}\n                        </TimeoutButtonOutline>\n                    </div>\n                    )\n                })\n            }\n            </div>\n        );\n    }\n}","import ToolbarSecondary from '../Toolbars/ToolbarSecondary';\nimport React from 'react';\n\nconst getGoBackPath = (component) => {\n    let currentPath = component.props.location.pathname;\n\n    if (currentPath.lastIndexOf(\"/\") === currentPath.length - 1)\n        currentPath = currentPath.substr(0, currentPath.length - 1)\n\n    return currentPath.substr(0, currentPath.lastIndexOf(\"/\") + 1)\n}\n\nexport class ServicesGoBack extends React.Component {\n    render() {\n        return (\n        <div class=\"clearfix\">\n            <ToolbarSecondary size=\"lg\" buttons={[\n                {\n                    text: \"Назад\",\n                    onClick: ((e) => {\n                        e.preventDefault();\n                        this.props.history?.push(getGoBackPath(this))\n                    }).bind(this),\n                    //timeout: 100,\n                },\n            ]}\n            />\n        </div>\n    )\n    }\n}","import React from 'react';\nimport MainButton from '../Buttons/MainButton'\nimport SecondaryButton from '../Buttons/SecondaryButton'\nimport ContentButton from '../Buttons/ContentButton'\nimport { func } from 'prop-types';\nimport { getMenu } from '../../scripts/api/contentApi';\nimport FailReport from '../FailReport';\nimport { ServicesGoBack } from './GoBackComponents';\n\nconst switches = {\n    'MAIN': {\n        Component: MainButton,\n        className: (index) => {\n            const sizes = [{x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}]\n            const span = sizes[index % sizes.length]\n\n            // Даже нЕ ДУМай удАЛЯть этот КУсок коДА\n            const FUCK_YOU_TAILWIND_READ_THOSE_STYLES_PLZ = `\n            col-span-2 col-span-3 col-span-4 col-span-1 \n            row-span-2 row-span-3 row-span-4 row-span-1\n            `\n            return \"bg-bg-red hover:bg-blue-lighter py-4 \"\n            + `col-span-${span.x} row-span-${span.y}`\n        },\n        direction: (index) => undefined,\n        size: (index) => {\n            const d = ['xl', 'md', 'md']\n            return d[index % d.length]\n        },\n        GoBackComponent: undefined\n    },\n    'TWO_SIDES': {\n        Component: SecondaryButton,\n        className: () => \"col-span-1\",\n        direction: (index) => (index % 2 == 0) ? 'left' : 'right',\n        GoBackComponent: ServicesGoBack\n    }\n}\n\nexport default class AutoMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {loading: true}\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.url != this.props.url) {\n            this.componentDidMount();\n        }\n    }\n\n    componentDidMount() {\n        getMenu(this.props.url).then((result => {\n            console.log(result)\n            this.setState(({loading: false, ...result}))\n        }).bind(this))\n        .catch((error => {\n            this.setState({loading: false, error: true})\n        }).bind(this))\n    }\n\n    render() {\n        const e = switches[this.state.type]\n\n        return (\n            this.state.loading ?\n            \"Идёт загрузка меню...\"\n            : this.state.error ?\n            <FailReport>\n                Произошла ошибка при загрузке меню!\n            </FailReport>\n            : <>\n            {\n            this.state.buttons.map((button, index) => \n                <e.Component\n                className={e.className?.(index)}\n                size={e.size?.(index)}\n                direction={e.direction?.(index)}\n                detail={button.detail}\n                icon={button.icon}\n                link={button.link}\n                onClick={button.link? undefined : button.onClick}\n                >\n                    {button.text}\n                </e.Component>\n            )\n            }\n            {\n                this.state.goBack && e.GoBackComponent ?\n                    <e.GoBackComponent {...this.props}/>\n                : null\n            }\n            </>\n        )\n    }\n}","import React from 'react';\nimport backgroundImage from '../../assets/images/background-0.png';\nimport Background from './Background';\nimport ButtonContainer from './ButtonContainer';\nimport Logo from './Logo';\nimport MainButton from '../Buttons/MainButton';\nimport UserInfo from '../Forms/UserInfo'\nimport AutoMenu from '../Menus/AutoMenu';\n\nexport default class MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    render() {\n      return (\n      <div>\n\n        {/* Задний фон */}\n        <Background url={backgroundImage}/>\n        \n        <div className=\"container mx-auto text-center h-screen\">\n            {/* Логотип RMRail инфокиоск */}\n            <Logo/>\n\n            {/* Давайте хотя бы на главной странице выводить информацию о пользователе */}\n            <UserInfo/>\n\n            {/* Контейнер с кнопками */}\n            <ButtonContainer>\n                <AutoMenu url=\"\"/>\n            </ButtonContainer>\n        </div>\n        </div>\n      );\n    }\n}","import React from 'react';\nimport SecondaryButton from '../Buttons/SecondaryButton';\nimport PropTypes from 'prop-types'\nimport ToolbarSecondary from '../Toolbars/ToolbarSecondary';\n\nexport default class ServicesMenu extends React.Component {\n    static propTypes = {\n        /**\n         *  Нужно ли выводить кнопку \"назад\"\n         *  @default true\n         */\n        goBack: PropTypes.bool,\n\n        /** \n         * Текст кнопки \"назад\"\n         * Не выводится, если goBack = false\n         * @default \"Назад\"\n         */\n        goBackText: PropTypes.string,\n\n        /** \n         * Массив кнопок, которые нужно отобразить.\n         * *Внимательно посмотрите на пример в коде компонента*\n         * @default []\n         * @example []\n         */\n        buttons: PropTypes.array,\n    }\n\n    static defaultProps = {\n        goBack: true,\n        goBackText: 'Назад',\n        buttons: [],\n    }\n\n    getGoBackPath() {\n        let currentPath = this.props.location.pathname;\n\n        if (currentPath.lastIndexOf(\"/\") === currentPath.length - 1)\n            currentPath = currentPath.substr(0, currentPath.length - 1)\n\n        return currentPath.substr(0, currentPath.lastIndexOf(\"/\") + 1)\n    }\n\n    render() {\n        let buttons = [...this.props.buttons]\n\n        /*\n        Кнопку \"назад\" решили поцепить другим способом\n        if (this.props.goBack) {\n            buttons.unshift (\n                {\n                    icon: `<svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"></path>\n                    </svg>`,\n                    link: this.getGoBackPath(),\n                    onClick: () => {},\n                    description: '',\n                    text: this.props.goBackText,\n                }\n            )\n        }\n        */\n\n      return (\n      <div>\n        <div className=\"container mx-auto text-center\">\n\n            {/* Контейнер с кнопками */}\n            <div className=\"grid grid-cols-2 gap-4 py-10 px-4\">\n                {\n                    buttons.map((button,index)=> {\n                        return (\n                            <SecondaryButton className=\"col-span-1\" direction={index % 2 === 0 ? 'left' : 'right'}\n                            icon={button.icon}\n                            link={button.link}\n                            description={button.description}\n                            >\n                                {button.text}\n                            </SecondaryButton>\n                        )\n                    })\n                }\n            </div>\n            {(() => {\n                if (this.props.goBack)\n                    return (\n                        <div class=\"mx-4\">\n                            <ToolbarSecondary size=\"lg\" buttons={[\n                                {\n                                    text: \"Назад\",\n                                    onClick: ((e) => {\n                                        e.preventDefault();\n                                        this.props.history.push(this.getGoBackPath())\n                                    }).bind(this),\n                                    //timeout: 100,\n                                },\n                            ]}\n                            />\n                        </div>\n                    );\n            })()}\n        </div>\n        </div>\n      );\n    }\n}","import React from 'react';\nimport ServicesMenu from './ServicesMenu';\nimport ServicesRoutes from './Services';\n\n\nimport { BrowserRouter as Router, Switch, \n    Route, Redirect,} from \"react-router-dom\";\n\n\n\nexport default class Finance extends React.Component {\n    render() {\n        return (\n            <Switch>\n            {/*<Route path=\"/services\" component={Services}/>*/}\n            <Route path='/services/finance/:form' render={(props) => \n                {\n                    return <Redirect to={`/services/form?serviceId=${props.match.params.form}`} />\n                }\n            }/>\n\n            <Route exact path=\"/services/finance\" render={(props) => <ServicesMenu {...props}\n            buttons={[\n                {\n                    icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>`,\n                    link: '/forms/service/150',\n                    description: '',\n                    text: 'Справка 2-НДФЛ',\n                },\n                {\n                    icon: `<svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path></svg>`,\n                    link: '/forms/service/151',\n                    description: ``,\n                    text: 'Справка 182Н',\n                },\n                {\n                    icon: `<svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\">\n                    </path></svg>`,\n                    link: '/forms/service/155',\n                    description: ``,\n                    text: 'Справка о заработной плате',\n                },\n                {\n                    icon: `<svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\">\n                    </path></svg>`,\n                    link: '/forms/service/157',\n                    description: '',\n                    text: 'Справка в УФССП',\n                },\n                {\n                    icon: `<svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\">\n                    </path></svg>`,\n                    link: '/forms/service/158',\n                    description: '',\n                    text: 'Справка в центр занятости',\n                },\n            ]}\n            />} />\n\n            </Switch>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport MainButton from '../Buttons/MainButton';\nimport TimeoutButtonOutline from '../Buttons/TimeoutButtonOutline';\n\nimport format from '../../scripts/helperFunctions/format';\n\n/**\n * ВНИМАНИЕ: этот компонент является графической обёрткой \\\n * вся логика должна быть реализована в родительском компоненте \\\n * который и передаёт данные для отображения, а также функцию при отправке\n */\nexport default class BaseForm extends React.Component {\n    static propTypes = {\n\n        /**\n         * Название услуги\n        */\n        serviceText: PropTypes.string,\n\n        /** \n         * ФИО для отображения\n         */\n        name: PropTypes.string,\n\n        /** \n         * Телефон для отображения\n         */\n        phone: PropTypes.string,\n\n        /** \n         * Действие при нажатии кнопки \"подтвердить\"\n         */\n        onSubmit: PropTypes.func,\n    }\n\n    static defaultProps = {\n        // Все свойства указывать обязательно!\n        // стандартными не заменяем\n    }\n\n    render() {\n        return (\n            <div class=\"w-full max-w-3xl mx-auto\">\n            <form class=\"bg-white shadow-md relative rounded px-8 pt-6 pb-8 mb-4 mt-16\">\n            <div class=\"absolute -top-5 -left-5 -right-5 -bottom-5 -z-10 bg-postcard rounded shadow-md\"></div>\n                \n                <div class=\"mb-8\">\n                <label class=\"block text-blue-darker font-black text-3xl mb-2\" for=\"service\">\n                    Услуга\n                </label>\n                <input\n                disabled\n                class=\"shadow appearance-none border rounded w-full bg-gray-200 py-4 px-6\n                text-gray-900 text-2xl leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"service\" type=\"text\" value={this.props.serviceText}/>\n                </div>\n\n                <div class=\"mb-8\">\n                <label class=\"block text-blue-darker text-3xl font-black mb-2\" for=\"name\">\n                    ФИО\n                </label>\n                <input\n                disabled\n                class=\"shadow appearance-none border rounded w-full bg-gray-200 py-4 px-6\n                text-gray-900 text-2xl leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"name\" type=\"text\" value={this.props.name}/>\n                </div>\n\n                <div class=\"mb-8\">\n                <label class=\"block text-blue-darker text-3xl font-black mb-2\" for=\"phone\">\n                    Контактный номер\n                </label>\n                <input\n                disabled\n                class=\"shadow appearance-none border rounded w-full bg-gray-200 py-4 px-6\n                text-gray-900 text-2xl leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"phone\" type=\"text\" value={format(this.props.phone, '## (###) ### ##-##')}/>\n                </div>\n\n\n                <div class=\"grid h-28 grid-cols-1 grid-rows-1\">\n                <MainButton className=\"hover:bg-blue-lighter\" direction=\"right\" size=\"lg\" onClick={this.props.onSubmit}>\n                    Подтвердить\n                </MainButton>\n                {/*\n                <a class=\"inline-block align-baseline font-bold text-2xl text-blue-lighter\n                hover:text-blue-darker\" href=\"#\">\n                    Ошибка в данных?\n                </a>\n                */}\n                </div>\n            </form>\n            <p class=\"text-center text-gray-500 text-lg mt-8\">\n                &copy; 2021 РМ Рейл\n            </p>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ServicesMenu from './ServicesMenu';\nimport { Session } from '../../scripts/user/Session';\nimport { userRoles } from '../../scripts/user/User';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n  }\nfrom 'react-router-dom';\n\nimport Finance from './Finance';\nimport BaseForm from '../Forms/BaseForm'\nimport AutoMenu from '../Menus/AutoMenu';\n\nexport default class ServicesRoutes extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {loading: true, url: props.location.pathname}\n    }\n\n    componentDidMount() {\n        const search = this.props.location.search;\n        this.allowGuest = ((new URLSearchParams(search).get(\"guest\")) === 'true') || false;\n\n        this.setState({session: Session.getCurrent(), loading: false}, () => {\n            if (!this.state.session.user.roles.has(userRoles.EMPLOYEE) && !this.allowGuest) {\n                this.props.history.push('/forms/ask-login?success=/services&fail=/services?guest=true');\n            }\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname != prevProps.location.pathname) {\n            this.setState({url: this.props.location.pathname})\n        }\n    }\n\n    render() {\n        \n        return (\n            <Switch>\n            {/*<Route path=\"/services\" component={Services}/>*/}\n            \n            <Route path='/services' render={(props) =>\n                <>\n                <div className=\"container mx-auto text-center\">\n        \n                    {/* Контейнер с кнопками */}\n                    {console.log(this.state.url)}\n                    <div className=\"grid grid-cols-2 gap-4 py-10 px-4\">\n                    <AutoMenu url={this.state.url} {...props}/>\n                    </div>\n                </div>\n                </>\n            }/>\n\n            <Redirect to=\"/\" />\n            </Switch>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport MainButton from '../Buttons/MainButton';\n\nconst directions = [\"left\", \"bottom\", \"top\", \"right\"];\n\nexport default class ToolbarMain extends React.Component {\n\n    static propTypes = {\n        /** \n         * Массив кнопок, которые нужно отобразить.\n         * @default []\n         * @example\n         *      [{text: \"На главную\",\n         *      onClick: (e) => {\n         *      e.preventDefault();\n         *      this.props.history.push(\"/\")\n         *      }}]\n         */\n        buttons: PropTypes.array,\n    }\n\n    static defaultProps = {\n        buttons: [],\n    }\n\n    render() {\n        let n = this.props.buttons.length;\n        let buttons = this.props.buttons;\n\n        return (\n            <div className={`grid h-56 grid-cols-${n > 1 ? n : 2} grid-rows-1 gap-4 py-10 absolute bottom-0 left-0 right-0`}>\n            {\n                buttons.map((button,index) => {\n                    return <MainButton className=\"col-span-1 row-span-1 bg-blue-lighter hover:bg-red\"\n                    size=\"lg\"\n                    direction={n === 1\n                        ? directions[0]\n                        : index === n - 1\n                            ? directions[directions.length - 1]\n                            : directions[index % directions.length]}\n                    onClick={button.onClick}>\n                        {button.text}\n                    </MainButton> \n                })\n            }\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class FailReport extends React.Component {\n    render() {\n        return (\n            <div class=\"flex items-center gap-4 bg-green-500 p-4 rounded-md max-w-5xl mx-auto\">\n            <div class=\"w-max\">\n                <div class=\"h-24 w-28 flex text-white border-r-4 border-white\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#ffffff\">\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                    <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/>\n                    </svg>\n                </div>\n            </div>\n            <div class=\"space-y-1 pl-2 text-3xl text-left\">\n                <h6 class=\"font-black text-white\">{this.props.children}</h6>\n                <p class=\"font-black text-2xl text-gray-100\">{this.props.detail}</p>\n            </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport SuccessReport from '../../SuccessReport'\nimport format from '../../../scripts/helperFunctions/format';\nimport ToolbarSecondary from '../../Toolbars/ToolbarSecondary';\n\nexport default class ServiceAfterSuccess extends React.Component {\n\n    // TODO: подключить эту штуку в forms\n    // TODO: сделать похожие формы при ошибке, а также после входа в систему\n\n    static propTypes = {\n        /**\n         *  Объект \"класса\" user\n         */\n        user: PropTypes.object,\n\n        /**\n         * Название услуги, которую мы только что отправили\n         */\n        serviceText: PropTypes.string,\n\n        /** \n         * Действие при продолжении сессии (нажали на кнопку \"Продолжить как ...\")\n         */\n        onContinue: PropTypes.func,\n\n        /** \n         * Действие при выходе (нажали на кнопку \"Завершить сеанс\")\n         */\n        onExit: PropTypes.func,\n    }\n\n    /** \n     * ОБЯЗАТЕЛЬНО ЗАПОЛНИТЕ ВСЕ ПРОПЫ!!!\n     */\n    static defaultProps = {\n\n    }\n\n    render() {\n        return (\n            <div class=\"container mt-32 mx-auto\">\n                <SuccessReport detail=\n                {`Уведомление о готовности и способе выдачи прийдет на ваш номер телефона\n                ${format(this.props.user.phoneNumber, ' ## (###) ### ##-##')}`}>\n                    Вы успешно отправили заявку <br/>\n                    \"{this.props.serviceText}\" <br/>\n                    на имя {\" \" + this.props.user.getFullName().firstName}\n                    {\" \" + this.props.user.getFullName().lastName}\n                </SuccessReport>\n                <div class=\"max-w-5xl mx-auto mt-8\">\n                    <ToolbarSecondary buttons={[\n                        {\n                            text: \"Продолжить как \" + this.props.user.getFullName().firstName,\n                            onClick: (e) => this.props.onContinue(),\n                            color: 'blue-darker'\n                        },\n                        {\n                            text: \"Завершить сеанс\",\n                            onClick: (e) => this.props.onExit(),\n                            timeout: 20,\n                            //color: 'blue-darker'\n                        },\n                    ]}\n                    />\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport FailReport from '../../FailReport'\nimport format from '../../../scripts/helperFunctions/format';\nimport ToolbarSecondary from '../../Toolbars/ToolbarSecondary';\n\nexport default class ServiceAfterFail extends React.Component {\n\n    // TODO: подключить эту штуку в forms\n    // TODO: сделать похожие формы при ошибке, а также после входа в систему\n\n    static propTypes = {\n        /**\n         *  Объект \"класса\" user\n         */\n        user: PropTypes.object,\n\n        /**\n         * Название услуги, которую мы только что отправили\n         */\n        serviceText: PropTypes.string,\n\n        /** \n         * Действие при продолжении сессии (нажали на кнопку \"Попробовать ещё раз\")\n         */\n        onContinue: PropTypes.func,\n\n        /** \n         * Действие при выходе (нажали на кнопку \"Завершить сеанс\")\n         */\n        onExit: PropTypes.func,\n    }\n\n    /** \n     * ОБЯЗАТЕЛЬНО ЗАПОЛНИТЕ ВСЕ ПРОПЫ!!!\n     */\n    static defaultProps = {\n\n    }\n\n    render() {\n        return (\n            <div class=\"container mt-32 mx-auto\">\n                <FailReport>\n                    Мы не смогли отправить заявку <br/>\n                    \"{this.props.serviceText}\" <br/>\n                    на имя {\" \" + this.props.user.getFullName().firstName}\n                    {\" \" + this.props.user.getFullName().lastName}\n                </FailReport>\n                <div class=\"max-w-5xl mx-auto mt-8\">\n                    <ToolbarSecondary buttons={[\n                        {\n                            text: \"Попробовать ещё раз\",\n                            onClick: (e) => this.props.onContinue(),\n                            color: 'blue-darker'\n                        },\n                        {\n                            text: \"На главный экран\",\n                            onClick: (e) => this.props.onExit(),\n                            timeout: 60,\n                            //color: 'blue-darker'\n                        },\n                    ]}\n                    />\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport {\n    // BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n  }\nfrom 'react-router-dom';\n\nimport AskLoginForm from './Login/AskLoginForm';\nimport InputPhoneForm from './Login/InputPhoneForm';\nimport ConfirmForm from './Login/ConfirmNumberForm';\nimport LoaderScreen from '../LoaderScreen'\n\nimport reducer from '../../scripts/reducer'\n\nimport { userRoles } from '../../scripts/user/User';\nimport {Session} from '../../scripts/user/Session'\nimport { ACTION } from '../../scripts/constants/dummyConstants';\n\nimport ToolbarMain from '../Toolbars/ToolbarMain';\nimport ToolbarSecondary from '../Toolbars/ToolbarSecondary';\nimport FailReport from '../FailReport';\nimport BaseForm from './BaseForm';\n\nimport ServiceAfterSuccess from './info/ServiceAfterSuccess';\nimport ServiceAfterFail from './info/ServiceAfterFail';\n\n// на экране \"подтвердите номер\", маска номера подтверждения\n// изменить только в случае смены длины номера, это важно\nconst confirmNumberMask = '99999';\nexport default class Forms extends React.Component {\n\n    // Дописать действия при отправке формы (props.onSubmit)\n\n    constructor(props) {\n        super(props);\n        this.state = {loading: true}\n    }\n\n    componentDidMount() {\n        this.setState({session: Session.getCurrent(), loading: false})\n\n        const search = this.props.location.search;\n        const success = new URLSearchParams(search).get(\"success\") || '/';\n        const fail = new URLSearchParams(search).get(\"fail\") || '/';\n\n        this.onSuccess = (callback) => {\n            this.props.history.push(success)\n            callback?.();\n        }\n\n        this.onFail = (callback) => {\n            this.props.history.push(fail)\n            callback?.()\n        }\n\n        //console.log(success)\n        //console.log(fail)\n        \n    }\n\n    componentWillMount() {\n        \n    }\n\n    setLoading(value, callback) {\n        this.setState({loading: value}, callback?.())\n    }\n\n    updateSession(result, callback = () => {}) {\n        this.setState({session: Session.getCurrent(), result: result}, callback)\n    }\n\n    onPhoneSubmit(data) {\n        let setLoading = this.setLoading.bind(this),\n        updateSession = this.updateSession.bind(this);\n\n        setLoading(true)\n        \n        return new Promise(function(resolve, reject) {\n            reducer({type: ACTION.LOGIN, data: data}).then((result) => {\n                updateSession(undefined, setLoading(false, resolve(result)));\n                // ...\n            },\n            )\n            .catch(result => {\n                updateSession(<FailReport>\n                    Неверный номер телефона\n                </FailReport>, setLoading(false, reject(result)));\n                // ...\n            })\n        })\n    }\n\n    \n    // TODO: выставить confirmNumberChange наружу\n    onConfirmNumberChange = (event) => {\n        let confirmNumber = event.target.value.replace(/[ _()-]/g, '');\n\n        this.setState({\n            confirmNumber: confirmNumber,\n        });\n\n        console.log(confirmNumber);\n\n        if (confirmNumber.length === confirmNumberMask.length) {\n            this.onConfirmNumberSubmit({phoneNumber: this.state.session.user.phoneNumber, confirmNumber: confirmNumber})\n        }\n    }\n\n    onConfirmNumberSubmit(data) {\n        let setLoading = this.setLoading.bind(this),\n        updateSession = this.updateSession.bind(this);\n\n        let onSuccess = this.onSuccess.bind(this);\n        let onFail = this.onFail.bind(this);\n\n        setLoading(true)\n        \n        return new Promise(function(resolve, reject) {\n            reducer({type: ACTION.CONFIRM, data: data}).then((result) => {\n                updateSession(undefined, setLoading(false, resolve(result)));\n                // ...\n                onSuccess();\n                resolve(result)\n            },\n            )\n            .catch(result => {\n                updateSession(<FailReport>\n                        Введён неверный номер подтверждения\n                    </FailReport>, setLoading(false, reject(result)));\n                // ...\n                reject(result)\n            })\n        })\n    }\n\n    onLogout(data) {\n        let setLoading = this.setLoading.bind(this),\n        updateSession = this.updateSession.bind(this);\n\n        setLoading(true)\n        \n        return new Promise(function(resolve, reject) {\n            reducer({type: ACTION.LOGOUT, data: data}).then((result) => {\n                updateSession(undefined, setLoading(false, resolve(result)));\n            },\n            )\n            .catch(result => {\n                updateSession(<FailReport>Произошла ошибка</FailReport>,\n                     setLoading(false, reject(result)));\n            })\n        })\n    }\n\n    onServiceSubmit(data) {\n        const setLoading = this.setLoading.bind(this),\n        updateSession = this.updateSession.bind(this);\n\n        const onSuccess = this.onSuccess.bind(this),\n        onFail = this.onFail.bind(this),\n        onLogout = this.onLogout.bind(this);\n\n\n        const lifeReport = <ServiceAfterSuccess\n            user={this.state.session.user}\n            serviceText={data.serviceId}\n            onContinue = {(e) => {onSuccess()}}\n            onExit = {() => {\n                let logout = onLogout();\n                logout.then(setTimeout(onSuccess(), 1000))\n                //.then(result => onSuccess())\n                //.catch(result => onSuccess())\n            }}\n            />\n\n        const deathReport = <ServiceAfterFail\n            user={this.state.session.user}\n            serviceText={data.serviceId}\n            onContinue = {(e) => {updateSession(undefined, setLoading(false))}}\n            onExit = {(e) => {\n                onFail()\n            }}\n            />\n\n        // Запускаем загрузку\n        setLoading(true)\n        \n        return new Promise(function(resolve, reject) {\n            reducer({type: ACTION.REQSERVICE, data: data}).then((result) => {\n                updateSession(lifeReport, setLoading(false));\n                // ...\n            },\n            )\n            .catch(error => {\n                updateSession(deathReport, setLoading(false));\n                // ...\n            })\n        })\n    }\n    \n\n    render() {\n        \n\n        if (this.state.loading)\n            return <LoaderScreen/>\n        else {\n            const user = this.state.session.user;\n            //console.log(this.state.session);\n            //console.log(Session.getCurrent());\n        return (\n            <Switch>\n            <Route path='/forms/ask-login' \n            render={(props) => (\n            <div className=\"container mx-auto text-center relative h-screen\">\n            <AskLoginForm {...props}/>\n            <ToolbarMain buttons={[\n                {\n                    text: \"Продолжить как гость\",\n                    onClick: (e) => {\n                        e.preventDefault();\n                        this.onFail.call(this)\n                    }\n                },\n                {\n                    text: \"Войти в систему\",\n                    onClick: (e) => {\n                        e.preventDefault();\n                        (() => this.props.history.push('/forms/login')).call(this);\n                    }\n                },\n            ]}\n            />\n            </div>\n            ) }\n            />\n            <Route path='/forms/login' render={(props) => {\n                if (user.roles.has(userRoles.UNCONFIRMED)) {\n                    return (\n                    <div className=\"container mx-auto text-center relative max-w-5xl\"> \n                    {(() => {\n                        if (this.state.result) {\n                            return <h6 className=\"mt-5 text-3xl text-red\">{this.state.result}</h6>\n                        }\n                    })()}\n                \n                    <ConfirmForm phoneNumber={user.phoneNumber}\n                    onChange={this.onConfirmNumberChange.bind(this)}\n                    numberMask = {confirmNumberMask}\n                    {...props}/>\n                    <div className=\"mt-16 -mx-5\">\n                    <ToolbarSecondary size=\"lg\" buttons={[\n                        {\n                            text: \"Отмена\",\n                            onClick: (e) => {\n                                e.preventDefault();\n                                this.onFail.call(this);\n                            },\n                            timeout: 60,\n                        },\n                        {\n                            text: \"Отправить номер повторно\",\n                            onClick: (e) => {\n                                e.preventDefault();\n                                this.onPhoneSubmit.call(this, {phoneNumber: user.phoneNumber})\n                            },\n                            color: 'blue-darker'\n                        },\n                        {\n                            text: \"Ввести другой номер\",\n                            onClick: (e) => {\n                                e.preventDefault();\n                                this.onLogout.call(this)\n                            },\n                            color: 'blue-darker'\n                        },\n                    ]}\n                    />\n                    </div>\n                    </div>\n                    )\n                }\n                else {\n                    return (\n                    <div className=\"container mx-auto text-center relative max-w-5xl\">\n                    {(() => {\n                        if (this.state.result) {\n                            return <h6 className=\"text-3xl mt-5 text-red\">{this.state.result}</h6>\n                        }\n                    })()}\n\n                    <InputPhoneForm\n                    onSubmit = {this.onPhoneSubmit.bind(this)}\n                    {...props}/>\n                    <div className=\"mt-16 -mx-5\">\n                    <ToolbarSecondary size=\"lg\" buttons={[\n                        {\n                            text: \"Отмена\",\n                            onClick: (e) => {\n                                e.preventDefault();\n                                this.onFail.call(this);\n                            },\n                            timeout: 60,\n                        },\n                    ]}/>\n                    </div>\n                    </div>\n                    )\n                }\n            }}/>\n\n\n            {\n                /**\n                 * Логика работы формы с отправкой услуги\n                 * this.state.result содержит в себе компонент\n                 */\n            }\n            <Route path='/forms/service/:id' render={(props) => {\n                const serviceId = props.match.params.id;\n                \n                if (this.state.result) {\n                    console.log(this.state.result);\n                    return this.state.result;\n                }\n\n                else {\n                    return (\n                    <div class=\"max-w-3xl mx-auto\">\n                    <BaseForm\n                    serviceText={serviceId}\n                    name={user.name}\n                    phone={user.phoneNumber}\n                    onSubmit={((e) => {\n                        e.preventDefault();\n                        this.onServiceSubmit.call(this, {serviceId})\n                    }).bind(this)}\n                    {...props}/>\n                    \n                    <div class=\"-mx-5 my-8\">\n                    <ToolbarSecondary size=\"lg\" buttons={[\n                        {\n                            text: \"Отмена\",\n                            onClick: (e) => {\n                                e.preventDefault();\n                                this.onFail.call(this);\n                            },\n                            //timeout: 60,\n                        },\n                        {\n                            text: \"Другой пользователь\",\n                            onClick: (e) => {\n                                e.preventDefault();\n                                this.onLogout.call(this)\n                                .then((() => this.props.history.push(\n                                    `/forms/login?success=/forms/service/${serviceId}&fail=/forms/service/${serviceId}`\n                                )).call(this))\n                            },\n                            color: 'blue-darker'\n                        },\n                    ]}/>\n                    </div>\n                    </div>\n                    )\n                }\n            }}/>\n            <Redirect to=\"/\" />\n            </Switch>\n        )\n        }\n    }\n}","import React from 'react';\nimport Lightbox from \"react-awesome-lightbox\";\nimport LoaderScreen from \"../LoaderScreen\"\nimport { getMaps } from '../../scripts/api/contentApi';\n// You need to import the CSS only once\nimport \"react-awesome-lightbox/build/style.css\";\nimport \"../../assets/css/lightbox-custom.css\"\n\nexport default class MapDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {imageList: [], loading: true}\n    }\n\n    async componentDidMount() {\n        /*\n        * Тут в будущем можно будет написать запрос к апи\n        * или ещё к чему\n        */\n        \n\n        // Это для симуляции загрузки\n        const response = await getMaps(this.props.category)\n\n        this.setState({ imageList: response, loading: false });\n    }\n\n    render() {\n        console.log(this.state.imageList);\n        if (this.state.loading) {\n            return (\n                <LoaderScreen/>\n            );\n        }\n        else {\n            return (\n                <Lightbox images={this.state.imageList} allowRotate={false} doubleClickZoom={2}\n                onClose={() => {this.props.history.push('/maps')}}/>\n            );\n        }\n    }\n}\n","import React from 'react';\nimport ServicesMenu from '../Services/ServicesMenu';\nimport MapDetail from './MapDetail';\nimport AutoMenu from '../Menus/AutoMenu';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n  }\nfrom 'react-router-dom';\n\nexport default class Maps extends React.Component {\n\n    render() {\n        return (\n            <Switch>\n            <Route path='/maps/:category' render={(props) => \n                {\n                    return <MapDetail category={props.match.params.category} {...props}/>\n                }\n            }/>\n\n            <Route exact path=\"/maps\" render={(props) => \n                <>\n                <div className=\"container mx-auto text-center\">\n        \n                    {/* Контейнер с кнопками */}\n                    {console.log(this.props.location.pathname)}\n                    <div className=\"grid grid-cols-2 gap-4 py-10 px-4\">\n                    <AutoMenu url={this.props.location.pathname} {...props}/>\n                    </div>\n                </div>\n                </>} />\n\n            <Redirect to=\"/\" />\n            </Switch>\n        )\n    }\n}","import React from 'react';\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\n\nimport ContentButton from '../Buttons/ContentButton';\n\nimport LoaderScreen from '../LoaderScreen'\nimport { getNewsList } from '../../scripts/api/contentApi';\n//import '../../assets/css/scrollbar.css'\n\nconst gutter = 48;\nexport default class News extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {numPages: 1, pageNumber: 1, \n        window: {width: window.innerWidth, height: window.innerHeight},\n        loading: true}\n    }\n\n    componentDidMount() {\n        getNewsList().then(result => {\n            this.setState({list: result, current: 0, loading: false})\n        })\n        .catch(error => {\n            this.setState({loading: false})\n        })\n    }\n\n    previousEnty() {\n        this.changeEntry.call(this, 1);\n    }\n\n    nextEntry() {\n        this.changeEntry.call(this, -1);\n    }\n\n    changeEntry(offset) {\n        this.setState({pageNumber: 1, current: this.state.current + offset})\n    }\n\n\n    onDocumentLoadSuccess({ numPages }) {\n        this.setState({numPages: numPages, pageNumber: 1});\n    }\n\n    changePage(offset) {\n        this.setState({pageNumber: this.state.pageNumber + offset})\n    }\n\n    previousPage() {\n        this.changePage.call(this, -1);\n    }\n\n    nextPage() {\n        this.changePage.call(this, 1);\n    }\n\n    render() {\n\n        if (this.state.loading) {\n            return <LoaderScreen/>\n        }\n\n        else\n        return (\n        <div class=\"bg-gray-900 pb-24 pt-24 relative\">\n            <Document\n                file={this.state.list[this.state.current].url}\n                renderMode={'svg'}\n                onLoadSuccess={this.onDocumentLoadSuccess.bind(this)}\n            >\n                <Page \n                width={this.state.window.width - gutter*2}\n                className={'flex justify-center select-none'}\n                pageNumber={this.state.pageNumber} />\n            </Document>\n            <div class=\"fixed top-0 left-0 right-0 flex items-center h-24 bg-gray-900\">\n                <div class=\"text-white px-8 gap-8 flex justify-center items-center w-full relative\">\n                    <div class={`justify-start items-center absolute left-10`}>\n                        <ContentButton\n                            onClick={(e) => {\n                                e.preventDefault();\n                                this.props.history.push(\"/\")\n                            }}\n                            direction=\"none\"\n                            className=\"justify-start bg-red hover:bg-blue-lighter\"\n                        >\n                            Выход\n                        </ContentButton>\n                    </div>\n                    \n                    <ContentButton\n                        disabled={this.state.current === this.state.list.length - 1}\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.previousEnty.call(this)\n                        }}\n                        direction=\"left\"\n                    >\n                    Предыдущий выпуск\n                    </ContentButton>\n\n                    <p class=\"text-3xl font-black\">\n                        {this.state.list[this.state.current].title}\n                    </p>\n\n                    <ContentButton\n                        disabled={this.state.current === 0}\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.nextEntry.call(this)\n                        }}\n                        direction=\"right\"\n                    >\n                    Следующий выпуск\n                    </ContentButton>\n\n                </div>\n            </div>\n\n            <div class=\"fixed bottom-0 left-0 right-0 flex items-center h-24 bg-gray-900\">\n                <div class=\"text-white px-8 gap-8 w-full flex justify-center items-center\">\n\n                    <ContentButton\n                        disabled={this.state.pageNumber <= 1}\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.previousPage.call(this)\n                        }}\n                        direction=\"left\"\n                    >\n                        Назад\n                    </ContentButton>\n\n                    <p class=\"text-3xl\">\n                    Страница {this.state.pageNumber || (this.state.numPages ? 1 : '--')} из {this.state.numPages || '--'}\n                    </p>\n\n                    <ContentButton\n                        disabled={this.state.pageNumber >= this.state.numPages}\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.nextPage.call(this)\n                        }}\n                        direction=\"right\"\n                    >\n                    Вперёд\n                    </ContentButton>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}","import logo from './logo.svg';\nimport MainPage from './components/MainPage/MainPage';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\nimport ServicesRoutes from './components/Services/Services';\nimport Forms from './components/Forms/UserForms';\nimport Maps from './components/Maps/Maps';\nimport News from './components/News/News';\nimport { Session } from './scripts/user/Session';\n\nfunction App() {\n  // Входим в систему как гость, если не находим сессии\n    if (typeof Session.getCurrent() === 'undefined' || Object.keys(Session.getCurrent()).length === 0) {\n        Session.startNew()\n    }\n\n    //console.log(Session.getCurrent())\n  \n    return (\n        <Router>\n        <Switch>\n        {/*<Route path=\"/services\" component={Services}/>*/}\n        <Route path=\"/forms\" render={(props) => <Forms {...props}/> } />\n        <Route path=\"/services\" render={(props) => <ServicesRoutes {...props}/> } />\n        <Route path=\"/maps\" render={(props) => <Maps {...props}/> } />\n        <Route path=\"/news\" render={(props) => <News {...props}/> } />\n        <Route path=\"/\" render={(props) => <MainPage {...props}/> } />    \n        <Redirect to=\"/\" />\n        </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n        <App />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}